
Senior Design.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000020e  00800200  00002136  000021ca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002136  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000070  0080040e  0080040e  000023d8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000023d8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002434  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  00002474  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c3b  00000000  00000000  000024f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000002a1  00000000  00000000  0000312f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000863  00000000  00000000  000033d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000284  00000000  00000000  00003c34  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002c7  00000000  00000000  00003eb8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001016  00000000  00000000  0000417f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  00005195  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	80 c0       	rjmp	.+256    	; 0x102 <__ctors_end>
       2:	00 00       	nop
       4:	9e c0       	rjmp	.+316    	; 0x142 <__bad_interrupt>
       6:	00 00       	nop
       8:	9c c0       	rjmp	.+312    	; 0x142 <__bad_interrupt>
       a:	00 00       	nop
       c:	9a c0       	rjmp	.+308    	; 0x142 <__bad_interrupt>
       e:	00 00       	nop
      10:	98 c0       	rjmp	.+304    	; 0x142 <__bad_interrupt>
      12:	00 00       	nop
      14:	96 c0       	rjmp	.+300    	; 0x142 <__bad_interrupt>
      16:	00 00       	nop
      18:	94 c0       	rjmp	.+296    	; 0x142 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	92 c0       	rjmp	.+292    	; 0x142 <__bad_interrupt>
      1e:	00 00       	nop
      20:	90 c0       	rjmp	.+288    	; 0x142 <__bad_interrupt>
      22:	00 00       	nop
      24:	8e c0       	rjmp	.+284    	; 0x142 <__bad_interrupt>
      26:	00 00       	nop
      28:	8c c0       	rjmp	.+280    	; 0x142 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	8a c0       	rjmp	.+276    	; 0x142 <__bad_interrupt>
      2e:	00 00       	nop
      30:	88 c0       	rjmp	.+272    	; 0x142 <__bad_interrupt>
      32:	00 00       	nop
      34:	86 c0       	rjmp	.+268    	; 0x142 <__bad_interrupt>
      36:	00 00       	nop
      38:	84 c0       	rjmp	.+264    	; 0x142 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	82 c0       	rjmp	.+260    	; 0x142 <__bad_interrupt>
      3e:	00 00       	nop
      40:	80 c0       	rjmp	.+256    	; 0x142 <__bad_interrupt>
      42:	00 00       	nop
      44:	7e c0       	rjmp	.+252    	; 0x142 <__bad_interrupt>
      46:	00 00       	nop
      48:	7c c0       	rjmp	.+248    	; 0x142 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	7a c0       	rjmp	.+244    	; 0x142 <__bad_interrupt>
      4e:	00 00       	nop
      50:	78 c0       	rjmp	.+240    	; 0x142 <__bad_interrupt>
      52:	00 00       	nop
      54:	76 c0       	rjmp	.+236    	; 0x142 <__bad_interrupt>
      56:	00 00       	nop
      58:	74 c0       	rjmp	.+232    	; 0x142 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	72 c0       	rjmp	.+228    	; 0x142 <__bad_interrupt>
      5e:	00 00       	nop
      60:	70 c0       	rjmp	.+224    	; 0x142 <__bad_interrupt>
      62:	00 00       	nop
      64:	6f c0       	rjmp	.+222    	; 0x144 <__vector_25>
      66:	00 00       	nop
      68:	6c c0       	rjmp	.+216    	; 0x142 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	6a c0       	rjmp	.+212    	; 0x142 <__bad_interrupt>
      6e:	00 00       	nop
      70:	68 c0       	rjmp	.+208    	; 0x142 <__bad_interrupt>
      72:	00 00       	nop
      74:	66 c0       	rjmp	.+204    	; 0x142 <__bad_interrupt>
      76:	00 00       	nop
      78:	64 c0       	rjmp	.+200    	; 0x142 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	62 c0       	rjmp	.+196    	; 0x142 <__bad_interrupt>
      7e:	00 00       	nop
      80:	60 c0       	rjmp	.+192    	; 0x142 <__bad_interrupt>
      82:	00 00       	nop
      84:	5e c0       	rjmp	.+188    	; 0x142 <__bad_interrupt>
      86:	00 00       	nop
      88:	5c c0       	rjmp	.+184    	; 0x142 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	5a c0       	rjmp	.+180    	; 0x142 <__bad_interrupt>
      8e:	00 00       	nop
      90:	79 c0       	rjmp	.+242    	; 0x184 <__vector_36>
      92:	00 00       	nop
      94:	56 c0       	rjmp	.+172    	; 0x142 <__bad_interrupt>
      96:	00 00       	nop
      98:	54 c0       	rjmp	.+168    	; 0x142 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	52 c0       	rjmp	.+164    	; 0x142 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	50 c0       	rjmp	.+160    	; 0x142 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	4e c0       	rjmp	.+156    	; 0x142 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	4c c0       	rjmp	.+152    	; 0x142 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	4a c0       	rjmp	.+148    	; 0x142 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	48 c0       	rjmp	.+144    	; 0x142 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	46 c0       	rjmp	.+140    	; 0x142 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	44 c0       	rjmp	.+136    	; 0x142 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	42 c0       	rjmp	.+132    	; 0x142 <__bad_interrupt>
      be:	00 00       	nop
      c0:	40 c0       	rjmp	.+128    	; 0x142 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	3e c0       	rjmp	.+124    	; 0x142 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	3c c0       	rjmp	.+120    	; 0x142 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	3a c0       	rjmp	.+116    	; 0x142 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	38 c0       	rjmp	.+112    	; 0x142 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	36 c0       	rjmp	.+108    	; 0x142 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	34 c0       	rjmp	.+104    	; 0x142 <__bad_interrupt>
      da:	00 00       	nop
      dc:	32 c0       	rjmp	.+100    	; 0x142 <__bad_interrupt>
      de:	00 00       	nop
      e0:	30 c0       	rjmp	.+96     	; 0x142 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	43 04       	cpc	r4, r3
      e6:	98 04       	cpc	r9, r8
      e8:	e2 04       	cpc	r14, r2
      ea:	f8 04       	cpc	r15, r8
      ec:	3a 05       	cpc	r19, r10
      ee:	50 05       	cpc	r21, r0
      f0:	89 05       	cpc	r24, r9
      f2:	89 05       	cpc	r24, r9
      f4:	39 04       	cpc	r3, r9

000000f6 <__trampolines_end>:
      f6:	63 64       	ori	r22, 0x43	; 67
      f8:	69 6e       	ori	r22, 0xE9	; 233
      fa:	6f 70       	andi	r22, 0x0F	; 15
      fc:	73 75       	andi	r23, 0x53	; 83
      fe:	78 58       	subi	r23, 0x88	; 136
     100:	5b 00       	.word	0x005b	; ????

00000102 <__ctors_end>:
     102:	11 24       	eor	r1, r1
     104:	1f be       	out	0x3f, r1	; 63
     106:	cf ef       	ldi	r28, 0xFF	; 255
     108:	d1 e2       	ldi	r29, 0x21	; 33
     10a:	de bf       	out	0x3e, r29	; 62
     10c:	cd bf       	out	0x3d, r28	; 61
     10e:	00 e0       	ldi	r16, 0x00	; 0
     110:	0c bf       	out	0x3c, r16	; 60

00000112 <__do_copy_data>:
     112:	14 e0       	ldi	r17, 0x04	; 4
     114:	a0 e0       	ldi	r26, 0x00	; 0
     116:	b2 e0       	ldi	r27, 0x02	; 2
     118:	e6 e3       	ldi	r30, 0x36	; 54
     11a:	f1 e2       	ldi	r31, 0x21	; 33
     11c:	00 e0       	ldi	r16, 0x00	; 0
     11e:	0b bf       	out	0x3b, r16	; 59
     120:	02 c0       	rjmp	.+4      	; 0x126 <__do_copy_data+0x14>
     122:	07 90       	elpm	r0, Z+
     124:	0d 92       	st	X+, r0
     126:	ae 30       	cpi	r26, 0x0E	; 14
     128:	b1 07       	cpc	r27, r17
     12a:	d9 f7       	brne	.-10     	; 0x122 <__do_copy_data+0x10>

0000012c <__do_clear_bss>:
     12c:	24 e0       	ldi	r18, 0x04	; 4
     12e:	ae e0       	ldi	r26, 0x0E	; 14
     130:	b4 e0       	ldi	r27, 0x04	; 4
     132:	01 c0       	rjmp	.+2      	; 0x136 <.do_clear_bss_start>

00000134 <.do_clear_bss_loop>:
     134:	1d 92       	st	X+, r1

00000136 <.do_clear_bss_start>:
     136:	ae 37       	cpi	r26, 0x7E	; 126
     138:	b2 07       	cpc	r27, r18
     13a:	e1 f7       	brne	.-8      	; 0x134 <.do_clear_bss_loop>
     13c:	c3 d6       	rcall	.+3462   	; 0xec4 <main>
     13e:	0c 94 99 10 	jmp	0x2132	; 0x2132 <_exit>

00000142 <__bad_interrupt>:
     142:	5e cf       	rjmp	.-324    	; 0x0 <__vectors>

00000144 <__vector_25>:
char volatile rec_dylos_flag = 0;
char volatile rec_GPS[100];
char volatile rec_GPS_flag = 0;

ISR(USART0_RX_vect)
{
     144:	1f 92       	push	r1
     146:	0f 92       	push	r0
     148:	0f b6       	in	r0, 0x3f	; 63
     14a:	0f 92       	push	r0
     14c:	11 24       	eor	r1, r1
     14e:	0b b6       	in	r0, 0x3b	; 59
     150:	0f 92       	push	r0
     152:	8f 93       	push	r24
     154:	ef 93       	push	r30
     156:	ff 93       	push	r31
	rec_dylos[strlen(rec_dylos)] = UDR0;
     158:	e4 e7       	ldi	r30, 0x74	; 116
     15a:	f4 e0       	ldi	r31, 0x04	; 4
     15c:	01 90       	ld	r0, Z+
     15e:	00 20       	and	r0, r0
     160:	e9 f7       	brne	.-6      	; 0x15c <__vector_25+0x18>
     162:	80 91 c6 00 	lds	r24, 0x00C6
     166:	31 97       	sbiw	r30, 0x01	; 1
     168:	80 83       	st	Z, r24
	rec_dylos_flag = 1;
     16a:	81 e0       	ldi	r24, 0x01	; 1
     16c:	80 93 0f 04 	sts	0x040F, r24
}
     170:	ff 91       	pop	r31
     172:	ef 91       	pop	r30
     174:	8f 91       	pop	r24
     176:	0f 90       	pop	r0
     178:	0b be       	out	0x3b, r0	; 59
     17a:	0f 90       	pop	r0
     17c:	0f be       	out	0x3f, r0	; 63
     17e:	0f 90       	pop	r0
     180:	1f 90       	pop	r1
     182:	18 95       	reti

00000184 <__vector_36>:

ISR(USART1_RX_vect)
{
     184:	1f 92       	push	r1
     186:	0f 92       	push	r0
     188:	0f b6       	in	r0, 0x3f	; 63
     18a:	0f 92       	push	r0
     18c:	11 24       	eor	r1, r1
     18e:	0b b6       	in	r0, 0x3b	; 59
     190:	0f 92       	push	r0
     192:	8f 93       	push	r24
     194:	ef 93       	push	r30
     196:	ff 93       	push	r31
	rec_GPS[strlen(rec_GPS)] = UDR1;
     198:	e0 e1       	ldi	r30, 0x10	; 16
     19a:	f4 e0       	ldi	r31, 0x04	; 4
     19c:	01 90       	ld	r0, Z+
     19e:	00 20       	and	r0, r0
     1a0:	e9 f7       	brne	.-6      	; 0x19c <__vector_36+0x18>
     1a2:	80 91 ce 00 	lds	r24, 0x00CE
     1a6:	31 97       	sbiw	r30, 0x01	; 1
     1a8:	80 83       	st	Z, r24
	rec_GPS_flag = 1;
     1aa:	81 e0       	ldi	r24, 0x01	; 1
     1ac:	80 93 0e 04 	sts	0x040E, r24
}
     1b0:	ff 91       	pop	r31
     1b2:	ef 91       	pop	r30
     1b4:	8f 91       	pop	r24
     1b6:	0f 90       	pop	r0
     1b8:	0b be       	out	0x3b, r0	; 59
     1ba:	0f 90       	pop	r0
     1bc:	0f be       	out	0x3f, r0	; 63
     1be:	0f 90       	pop	r0
     1c0:	1f 90       	pop	r1
     1c2:	18 95       	reti

000001c4 <read_temp>:
	}
	return 0;
}

void read_temp(char* buffer)
{
     1c4:	ef 92       	push	r14
     1c6:	ff 92       	push	r15
     1c8:	0f 93       	push	r16
     1ca:	1f 93       	push	r17
     1cc:	cf 93       	push	r28
     1ce:	df 93       	push	r29
     1d0:	cd b7       	in	r28, 0x3d	; 61
     1d2:	de b7       	in	r29, 0x3e	; 62
     1d4:	2a 97       	sbiw	r28, 0x0a	; 10
     1d6:	0f b6       	in	r0, 0x3f	; 63
     1d8:	f8 94       	cli
     1da:	de bf       	out	0x3e, r29	; 62
     1dc:	0f be       	out	0x3f, r0	; 63
     1de:	cd bf       	out	0x3d, r28	; 61
     1e0:	8c 01       	movw	r16, r24
	char temp[10];
	ADCSRA = 0x87;
     1e2:	ea e7       	ldi	r30, 0x7A	; 122
     1e4:	f0 e0       	ldi	r31, 0x00	; 0
     1e6:	87 e8       	ldi	r24, 0x87	; 135
     1e8:	80 83       	st	Z, r24
	ADMUX = 0x04; //Use ADC4
     1ea:	84 e0       	ldi	r24, 0x04	; 4
     1ec:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA |= (1<<ADSC);
     1f0:	80 81       	ld	r24, Z
     1f2:	80 64       	ori	r24, 0x40	; 64
     1f4:	80 83       	st	Z, r24
	while((ADCSRA & (1<<ADIF))==0);
     1f6:	90 81       	ld	r25, Z
     1f8:	94 ff       	sbrs	r25, 4
     1fa:	fd cf       	rjmp	.-6      	; 0x1f6 <read_temp+0x32>
	double t = ADC;	
     1fc:	60 91 78 00 	lds	r22, 0x0078
     200:	70 91 79 00 	lds	r23, 0x0079
     204:	80 e0       	ldi	r24, 0x00	; 0
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	0e 94 40 09 	call	0x1280	; 0x1280 <__floatunsisf>
	t *= 225;
     20c:	20 e0       	ldi	r18, 0x00	; 0
     20e:	30 e0       	ldi	r19, 0x00	; 0
     210:	41 e6       	ldi	r20, 0x61	; 97
     212:	53 e4       	ldi	r21, 0x43	; 67
     214:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <__mulsf3>
	t /= 256;
     218:	20 e0       	ldi	r18, 0x00	; 0
     21a:	30 e0       	ldi	r19, 0x00	; 0
     21c:	40 e8       	ldi	r20, 0x80	; 128
     21e:	5b e3       	ldi	r21, 0x3B	; 59
     220:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <__mulsf3>
	t -= 58;
	strcat(buffer, "Temperature: ");
     224:	d8 01       	movw	r26, r16
     226:	0d 90       	ld	r0, X+
     228:	00 20       	and	r0, r0
     22a:	e9 f7       	brne	.-6      	; 0x226 <read_temp+0x62>
     22c:	11 97       	sbiw	r26, 0x01	; 1
     22e:	2e e0       	ldi	r18, 0x0E	; 14
     230:	e0 e0       	ldi	r30, 0x00	; 0
     232:	f2 e0       	ldi	r31, 0x02	; 2
     234:	01 90       	ld	r0, Z+
     236:	0d 92       	st	X+, r0
     238:	2a 95       	dec	r18
     23a:	e1 f7       	brne	.-8      	; 0x234 <read_temp+0x70>
	ADCSRA |= (1<<ADSC);
	while((ADCSRA & (1<<ADIF))==0);
	double t = ADC;	
	t *= 225;
	t /= 256;
	t -= 58;
     23c:	20 e0       	ldi	r18, 0x00	; 0
     23e:	30 e0       	ldi	r19, 0x00	; 0
     240:	48 e6       	ldi	r20, 0x68	; 104
     242:	52 e4       	ldi	r21, 0x42	; 66
     244:	1f d7       	rcall	.+3646   	; 0x1084 <__subsf3>
	strcat(buffer, "Temperature: ");
	sprintf(temp, "%dF\n", (int)t);
     246:	eb d7       	rcall	.+4054   	; 0x121e <__fixsfsi>
     248:	7f 93       	push	r23
     24a:	6f 93       	push	r22
     24c:	8e e0       	ldi	r24, 0x0E	; 14
     24e:	92 e0       	ldi	r25, 0x02	; 2
     250:	9f 93       	push	r25
     252:	8f 93       	push	r24
     254:	ce 01       	movw	r24, r28
     256:	01 96       	adiw	r24, 0x01	; 1
     258:	7c 01       	movw	r14, r24
     25a:	9f 93       	push	r25
     25c:	8f 93       	push	r24
     25e:	0e 94 7b 0a 	call	0x14f6	; 0x14f6 <sprintf>
	strcat(buffer, temp);
     262:	b7 01       	movw	r22, r14
     264:	c8 01       	movw	r24, r16
     266:	0e 94 61 0a 	call	0x14c2	; 0x14c2 <strcat>
     26a:	0f 90       	pop	r0
     26c:	0f 90       	pop	r0
     26e:	0f 90       	pop	r0
     270:	0f 90       	pop	r0
     272:	0f 90       	pop	r0
     274:	0f 90       	pop	r0
	return;
}
     276:	2a 96       	adiw	r28, 0x0a	; 10
     278:	0f b6       	in	r0, 0x3f	; 63
     27a:	f8 94       	cli
     27c:	de bf       	out	0x3e, r29	; 62
     27e:	0f be       	out	0x3f, r0	; 63
     280:	cd bf       	out	0x3d, r28	; 61
     282:	df 91       	pop	r29
     284:	cf 91       	pop	r28
     286:	1f 91       	pop	r17
     288:	0f 91       	pop	r16
     28a:	ff 90       	pop	r15
     28c:	ef 90       	pop	r14
     28e:	08 95       	ret

00000290 <read_MQ2>:

void read_MQ2(char* buffer) //C3H8 sensor
{
     290:	cf 92       	push	r12
     292:	df 92       	push	r13
     294:	ef 92       	push	r14
     296:	ff 92       	push	r15
     298:	0f 93       	push	r16
     29a:	1f 93       	push	r17
     29c:	cf 93       	push	r28
     29e:	df 93       	push	r29
     2a0:	cd b7       	in	r28, 0x3d	; 61
     2a2:	de b7       	in	r29, 0x3e	; 62
     2a4:	2a 97       	sbiw	r28, 0x0a	; 10
     2a6:	0f b6       	in	r0, 0x3f	; 63
     2a8:	f8 94       	cli
     2aa:	de bf       	out	0x3e, r29	; 62
     2ac:	0f be       	out	0x3f, r0	; 63
     2ae:	cd bf       	out	0x3d, r28	; 61
     2b0:	8c 01       	movw	r16, r24
	float RS = 0; // Variable resistance
	float m = -0.00025; // slope
	float b = 1.1; // intercept
	float vout; // sensor output voltage
	char vin = 5; // sensor input voltage
	ADCSRA = 0x87;
     2b2:	ea e7       	ldi	r30, 0x7A	; 122
     2b4:	f0 e0       	ldi	r31, 0x00	; 0
     2b6:	87 e8       	ldi	r24, 0x87	; 135
     2b8:	80 83       	st	Z, r24
	ADMUX = 0x00; //Use ADC0
     2ba:	10 92 7c 00 	sts	0x007C, r1
	ADCSRA |= (1<<ADSC);
     2be:	80 81       	ld	r24, Z
     2c0:	80 64       	ori	r24, 0x40	; 64
     2c2:	80 83       	st	Z, r24
	while((ADCSRA & (1<<ADIF))==0);
     2c4:	90 81       	ld	r25, Z
     2c6:	94 ff       	sbrs	r25, 4
     2c8:	fd cf       	rjmp	.-6      	; 0x2c4 <read_MQ2+0x34>
	vout = ADC; // solve for Vout
     2ca:	60 91 78 00 	lds	r22, 0x0078
     2ce:	70 91 79 00 	lds	r23, 0x0079
     2d2:	80 e0       	ldi	r24, 0x00	; 0
     2d4:	90 e0       	ldi	r25, 0x00	; 0
     2d6:	d4 d7       	rcall	.+4008   	; 0x1280 <__floatunsisf>
	vout *= 5;
     2d8:	20 e0       	ldi	r18, 0x00	; 0
     2da:	30 e0       	ldi	r19, 0x00	; 0
     2dc:	40 ea       	ldi	r20, 0xA0	; 160
     2de:	50 e4       	ldi	r21, 0x40	; 64
     2e0:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <__mulsf3>
	vout /= 1024;
     2e4:	20 e0       	ldi	r18, 0x00	; 0
     2e6:	30 e0       	ldi	r19, 0x00	; 0
     2e8:	40 e8       	ldi	r20, 0x80	; 128
     2ea:	5a e3       	ldi	r21, 0x3A	; 58
     2ec:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <__mulsf3>
     2f0:	6b 01       	movw	r12, r22
     2f2:	7c 01       	movw	r14, r24
	RS = (RL*(vin-vout))/vout; // Solve for RS
     2f4:	9b 01       	movw	r18, r22
     2f6:	ac 01       	movw	r20, r24
     2f8:	60 e0       	ldi	r22, 0x00	; 0
     2fa:	70 e0       	ldi	r23, 0x00	; 0
     2fc:	80 ea       	ldi	r24, 0xA0	; 160
     2fe:	90 e4       	ldi	r25, 0x40	; 64
     300:	c1 d6       	rcall	.+3458   	; 0x1084 <__subsf3>
     302:	20 e0       	ldi	r18, 0x00	; 0
     304:	30 e6       	ldi	r19, 0x60	; 96
     306:	4a e1       	ldi	r20, 0x1A	; 26
     308:	56 e4       	ldi	r21, 0x46	; 70
     30a:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <__mulsf3>
     30e:	a7 01       	movw	r20, r14
     310:	96 01       	movw	r18, r12
     312:	1d d7       	rcall	.+3642   	; 0x114e <__divsf3>
	y = RS/RO;
     314:	20 e0       	ldi	r18, 0x00	; 0
     316:	30 e4       	ldi	r19, 0x40	; 64
     318:	4e ec       	ldi	r20, 0xCE	; 206
     31a:	55 e4       	ldi	r21, 0x45	; 69
     31c:	18 d7       	rcall	.+3632   	; 0x114e <__divsf3>
     31e:	6b 01       	movw	r12, r22
     320:	7c 01       	movw	r14, r24
	if (y > 2)
     322:	20 e0       	ldi	r18, 0x00	; 0
     324:	30 e0       	ldi	r19, 0x00	; 0
     326:	40 e0       	ldi	r20, 0x00	; 0
     328:	50 e4       	ldi	r21, 0x40	; 64
     32a:	0e 94 ce 09 	call	0x139c	; 0x139c <__gesf2>
     32e:	18 16       	cp	r1, r24
     330:	6c f0       	brlt	.+26     	; 0x34c <read_MQ2+0xbc>
		t = 0;
	else
		t = (y-b)/m;
     332:	2d ec       	ldi	r18, 0xCD	; 205
     334:	3c ec       	ldi	r19, 0xCC	; 204
     336:	4c e8       	ldi	r20, 0x8C	; 140
     338:	5f e3       	ldi	r21, 0x3F	; 63
     33a:	c7 01       	movw	r24, r14
     33c:	b6 01       	movw	r22, r12
     33e:	a2 d6       	rcall	.+3396   	; 0x1084 <__subsf3>
     340:	2f e6       	ldi	r18, 0x6F	; 111
     342:	32 e1       	ldi	r19, 0x12	; 18
     344:	43 e8       	ldi	r20, 0x83	; 131
     346:	59 eb       	ldi	r21, 0xB9	; 185
     348:	02 d7       	rcall	.+3588   	; 0x114e <__divsf3>
     34a:	03 c0       	rjmp	.+6      	; 0x352 <read_MQ2+0xc2>
	vout *= 5;
	vout /= 1024;
	RS = (RL*(vin-vout))/vout; // Solve for RS
	y = RS/RO;
	if (y > 2)
		t = 0;
     34c:	60 e0       	ldi	r22, 0x00	; 0
     34e:	70 e0       	ldi	r23, 0x00	; 0
     350:	cb 01       	movw	r24, r22
	else
		t = (y-b)/m;
	strcat(buffer, "C3H8: ");
     352:	d8 01       	movw	r26, r16
     354:	0d 90       	ld	r0, X+
     356:	00 20       	and	r0, r0
     358:	e9 f7       	brne	.-6      	; 0x354 <read_MQ2+0xc4>
     35a:	11 97       	sbiw	r26, 0x01	; 1
     35c:	27 e0       	ldi	r18, 0x07	; 7
     35e:	e3 e1       	ldi	r30, 0x13	; 19
     360:	f2 e0       	ldi	r31, 0x02	; 2
     362:	01 90       	ld	r0, Z+
     364:	0d 92       	st	X+, r0
     366:	2a 95       	dec	r18
     368:	e1 f7       	brne	.-8      	; 0x362 <read_MQ2+0xd2>
	sprintf(temp, "%d ppm\n", (int)t);
     36a:	59 d7       	rcall	.+3762   	; 0x121e <__fixsfsi>
     36c:	7f 93       	push	r23
     36e:	6f 93       	push	r22
     370:	8a e1       	ldi	r24, 0x1A	; 26
     372:	92 e0       	ldi	r25, 0x02	; 2
     374:	9f 93       	push	r25
     376:	8f 93       	push	r24
     378:	ce 01       	movw	r24, r28
     37a:	01 96       	adiw	r24, 0x01	; 1
     37c:	7c 01       	movw	r14, r24
     37e:	9f 93       	push	r25
     380:	8f 93       	push	r24
     382:	0e 94 7b 0a 	call	0x14f6	; 0x14f6 <sprintf>
	strcat(buffer, temp);
     386:	b7 01       	movw	r22, r14
     388:	c8 01       	movw	r24, r16
     38a:	0e 94 61 0a 	call	0x14c2	; 0x14c2 <strcat>
     38e:	0f 90       	pop	r0
     390:	0f 90       	pop	r0
     392:	0f 90       	pop	r0
     394:	0f 90       	pop	r0
     396:	0f 90       	pop	r0
     398:	0f 90       	pop	r0
	return;
}
     39a:	2a 96       	adiw	r28, 0x0a	; 10
     39c:	0f b6       	in	r0, 0x3f	; 63
     39e:	f8 94       	cli
     3a0:	de bf       	out	0x3e, r29	; 62
     3a2:	0f be       	out	0x3f, r0	; 63
     3a4:	cd bf       	out	0x3d, r28	; 61
     3a6:	df 91       	pop	r29
     3a8:	cf 91       	pop	r28
     3aa:	1f 91       	pop	r17
     3ac:	0f 91       	pop	r16
     3ae:	ff 90       	pop	r15
     3b0:	ef 90       	pop	r14
     3b2:	df 90       	pop	r13
     3b4:	cf 90       	pop	r12
     3b6:	08 95       	ret

000003b8 <read_MQ5>:

void read_MQ5(char* buffer) // CH4 sensor
{
     3b8:	cf 92       	push	r12
     3ba:	df 92       	push	r13
     3bc:	ef 92       	push	r14
     3be:	ff 92       	push	r15
     3c0:	0f 93       	push	r16
     3c2:	1f 93       	push	r17
     3c4:	cf 93       	push	r28
     3c6:	df 93       	push	r29
     3c8:	cd b7       	in	r28, 0x3d	; 61
     3ca:	de b7       	in	r29, 0x3e	; 62
     3cc:	2a 97       	sbiw	r28, 0x0a	; 10
     3ce:	0f b6       	in	r0, 0x3f	; 63
     3d0:	f8 94       	cli
     3d2:	de bf       	out	0x3e, r29	; 62
     3d4:	0f be       	out	0x3f, r0	; 63
     3d6:	cd bf       	out	0x3d, r28	; 61
     3d8:	8c 01       	movw	r16, r24
	float RS = 0; // Variable resistance
	float m = -0.000361; // slope
	float b = 1.0222; // intercept
	float vout; // sensor output voltage
	char vin = 5; // sensor input voltage
	ADCSRA = 0x87;
     3da:	ea e7       	ldi	r30, 0x7A	; 122
     3dc:	f0 e0       	ldi	r31, 0x00	; 0
     3de:	87 e8       	ldi	r24, 0x87	; 135
     3e0:	80 83       	st	Z, r24
	ADMUX = 0x01; //Use ADC1
     3e2:	81 e0       	ldi	r24, 0x01	; 1
     3e4:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA |= (1<<ADSC);
     3e8:	80 81       	ld	r24, Z
     3ea:	80 64       	ori	r24, 0x40	; 64
     3ec:	80 83       	st	Z, r24
	while((ADCSRA & (1<<ADIF))==0);
     3ee:	90 81       	ld	r25, Z
     3f0:	94 ff       	sbrs	r25, 4
     3f2:	fd cf       	rjmp	.-6      	; 0x3ee <read_MQ5+0x36>
	vout = ADC; // solve for Vout
     3f4:	60 91 78 00 	lds	r22, 0x0078
     3f8:	70 91 79 00 	lds	r23, 0x0079
     3fc:	80 e0       	ldi	r24, 0x00	; 0
     3fe:	90 e0       	ldi	r25, 0x00	; 0
     400:	3f d7       	rcall	.+3710   	; 0x1280 <__floatunsisf>
	vout *= 5;
     402:	20 e0       	ldi	r18, 0x00	; 0
     404:	30 e0       	ldi	r19, 0x00	; 0
     406:	40 ea       	ldi	r20, 0xA0	; 160
     408:	50 e4       	ldi	r21, 0x40	; 64
     40a:	cc d7       	rcall	.+3992   	; 0x13a4 <__mulsf3>
	vout /= 1024;
     40c:	20 e0       	ldi	r18, 0x00	; 0
     40e:	30 e0       	ldi	r19, 0x00	; 0
     410:	40 e8       	ldi	r20, 0x80	; 128
     412:	5a e3       	ldi	r21, 0x3A	; 58
     414:	c7 d7       	rcall	.+3982   	; 0x13a4 <__mulsf3>
     416:	6b 01       	movw	r12, r22
     418:	7c 01       	movw	r14, r24
	RS = (RL*(vin-vout))/vout; // Solve for RS
     41a:	9b 01       	movw	r18, r22
     41c:	ac 01       	movw	r20, r24
     41e:	60 e0       	ldi	r22, 0x00	; 0
     420:	70 e0       	ldi	r23, 0x00	; 0
     422:	80 ea       	ldi	r24, 0xA0	; 160
     424:	90 e4       	ldi	r25, 0x40	; 64
     426:	2e d6       	rcall	.+3164   	; 0x1084 <__subsf3>
     428:	20 e0       	ldi	r18, 0x00	; 0
     42a:	3c e9       	ldi	r19, 0x9C	; 156
     42c:	4a e9       	ldi	r20, 0x9A	; 154
     42e:	56 e4       	ldi	r21, 0x46	; 70
     430:	b9 d7       	rcall	.+3954   	; 0x13a4 <__mulsf3>
     432:	a7 01       	movw	r20, r14
     434:	96 01       	movw	r18, r12
     436:	8b d6       	rcall	.+3350   	; 0x114e <__divsf3>
	y = RS/RO;
     438:	20 e0       	ldi	r18, 0x00	; 0
     43a:	38 e1       	ldi	r19, 0x18	; 24
     43c:	46 e7       	ldi	r20, 0x76	; 118
     43e:	56 e4       	ldi	r21, 0x46	; 70
     440:	86 d6       	rcall	.+3340   	; 0x114e <__divsf3>
     442:	6b 01       	movw	r12, r22
     444:	7c 01       	movw	r14, r24
	if (y > 1)
     446:	20 e0       	ldi	r18, 0x00	; 0
     448:	30 e0       	ldi	r19, 0x00	; 0
     44a:	40 e8       	ldi	r20, 0x80	; 128
     44c:	5f e3       	ldi	r21, 0x3F	; 63
     44e:	a6 d7       	rcall	.+3916   	; 0x139c <__gesf2>
     450:	18 16       	cp	r1, r24
     452:	6c f0       	brlt	.+26     	; 0x46e <read_MQ5+0xb6>
		t = 0;
	else
		t = (y-b)/m;
     454:	23 e7       	ldi	r18, 0x73	; 115
     456:	37 ed       	ldi	r19, 0xD7	; 215
     458:	42 e8       	ldi	r20, 0x82	; 130
     45a:	5f e3       	ldi	r21, 0x3F	; 63
     45c:	c7 01       	movw	r24, r14
     45e:	b6 01       	movw	r22, r12
     460:	11 d6       	rcall	.+3106   	; 0x1084 <__subsf3>
     462:	2a e9       	ldi	r18, 0x9A	; 154
     464:	34 e4       	ldi	r19, 0x44	; 68
     466:	4d eb       	ldi	r20, 0xBD	; 189
     468:	59 eb       	ldi	r21, 0xB9	; 185
     46a:	71 d6       	rcall	.+3298   	; 0x114e <__divsf3>
     46c:	03 c0       	rjmp	.+6      	; 0x474 <read_MQ5+0xbc>
	vout *= 5;
	vout /= 1024;
	RS = (RL*(vin-vout))/vout; // Solve for RS
	y = RS/RO;
	if (y > 1)
		t = 0;
     46e:	60 e0       	ldi	r22, 0x00	; 0
     470:	70 e0       	ldi	r23, 0x00	; 0
     472:	cb 01       	movw	r24, r22
	else
		t = (y-b)/m;
	strcat(buffer, "CH4 : ");
     474:	d8 01       	movw	r26, r16
     476:	0d 90       	ld	r0, X+
     478:	00 20       	and	r0, r0
     47a:	e9 f7       	brne	.-6      	; 0x476 <read_MQ5+0xbe>
     47c:	11 97       	sbiw	r26, 0x01	; 1
     47e:	27 e0       	ldi	r18, 0x07	; 7
     480:	e2 e2       	ldi	r30, 0x22	; 34
     482:	f2 e0       	ldi	r31, 0x02	; 2
     484:	01 90       	ld	r0, Z+
     486:	0d 92       	st	X+, r0
     488:	2a 95       	dec	r18
     48a:	e1 f7       	brne	.-8      	; 0x484 <read_MQ5+0xcc>
	sprintf(temp, "%d ppm\n", (int)t);
     48c:	c8 d6       	rcall	.+3472   	; 0x121e <__fixsfsi>
     48e:	7f 93       	push	r23
     490:	6f 93       	push	r22
     492:	8a e1       	ldi	r24, 0x1A	; 26
     494:	92 e0       	ldi	r25, 0x02	; 2
     496:	9f 93       	push	r25
     498:	8f 93       	push	r24
     49a:	ce 01       	movw	r24, r28
     49c:	01 96       	adiw	r24, 0x01	; 1
     49e:	7c 01       	movw	r14, r24
     4a0:	9f 93       	push	r25
     4a2:	8f 93       	push	r24
     4a4:	0e 94 7b 0a 	call	0x14f6	; 0x14f6 <sprintf>
	strcat(buffer, temp);
     4a8:	b7 01       	movw	r22, r14
     4aa:	c8 01       	movw	r24, r16
     4ac:	0e 94 61 0a 	call	0x14c2	; 0x14c2 <strcat>
     4b0:	0f 90       	pop	r0
     4b2:	0f 90       	pop	r0
     4b4:	0f 90       	pop	r0
     4b6:	0f 90       	pop	r0
     4b8:	0f 90       	pop	r0
     4ba:	0f 90       	pop	r0
	return;
}
     4bc:	2a 96       	adiw	r28, 0x0a	; 10
     4be:	0f b6       	in	r0, 0x3f	; 63
     4c0:	f8 94       	cli
     4c2:	de bf       	out	0x3e, r29	; 62
     4c4:	0f be       	out	0x3f, r0	; 63
     4c6:	cd bf       	out	0x3d, r28	; 61
     4c8:	df 91       	pop	r29
     4ca:	cf 91       	pop	r28
     4cc:	1f 91       	pop	r17
     4ce:	0f 91       	pop	r16
     4d0:	ff 90       	pop	r15
     4d2:	ef 90       	pop	r14
     4d4:	df 90       	pop	r13
     4d6:	cf 90       	pop	r12
     4d8:	08 95       	ret

000004da <read_MQ7>:

void read_MQ7(char* buffer) //C0 sensor
{
     4da:	cf 92       	push	r12
     4dc:	df 92       	push	r13
     4de:	ef 92       	push	r14
     4e0:	ff 92       	push	r15
     4e2:	0f 93       	push	r16
     4e4:	1f 93       	push	r17
     4e6:	cf 93       	push	r28
     4e8:	df 93       	push	r29
     4ea:	cd b7       	in	r28, 0x3d	; 61
     4ec:	de b7       	in	r29, 0x3e	; 62
     4ee:	2a 97       	sbiw	r28, 0x0a	; 10
     4f0:	0f b6       	in	r0, 0x3f	; 63
     4f2:	f8 94       	cli
     4f4:	de bf       	out	0x3e, r29	; 62
     4f6:	0f be       	out	0x3f, r0	; 63
     4f8:	cd bf       	out	0x3d, r28	; 61
     4fa:	8c 01       	movw	r16, r24
	float RS = 0; // Variable resistance
	float m = -0.001298; // slope
	float b = 1.778; // intercept
	float vout; // sensor output voltage
	char vin = 5; // sensor input voltage
	ADCSRA = 0x87;
     4fc:	ea e7       	ldi	r30, 0x7A	; 122
     4fe:	f0 e0       	ldi	r31, 0x00	; 0
     500:	87 e8       	ldi	r24, 0x87	; 135
     502:	80 83       	st	Z, r24
	ADMUX = 0x02; //Use ADC2
     504:	82 e0       	ldi	r24, 0x02	; 2
     506:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA |= (1<<ADSC);
     50a:	80 81       	ld	r24, Z
     50c:	80 64       	ori	r24, 0x40	; 64
     50e:	80 83       	st	Z, r24
	while((ADCSRA & (1<<ADIF))==0);
     510:	90 81       	ld	r25, Z
     512:	94 ff       	sbrs	r25, 4
     514:	fd cf       	rjmp	.-6      	; 0x510 <read_MQ7+0x36>
	vout = ADC; // solve for Vout
     516:	60 91 78 00 	lds	r22, 0x0078
     51a:	70 91 79 00 	lds	r23, 0x0079
     51e:	80 e0       	ldi	r24, 0x00	; 0
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	ae d6       	rcall	.+3420   	; 0x1280 <__floatunsisf>
	vout *= 5;
     524:	20 e0       	ldi	r18, 0x00	; 0
     526:	30 e0       	ldi	r19, 0x00	; 0
     528:	40 ea       	ldi	r20, 0xA0	; 160
     52a:	50 e4       	ldi	r21, 0x40	; 64
     52c:	3b d7       	rcall	.+3702   	; 0x13a4 <__mulsf3>
	vout /= 1024;
     52e:	20 e0       	ldi	r18, 0x00	; 0
     530:	30 e0       	ldi	r19, 0x00	; 0
     532:	40 e8       	ldi	r20, 0x80	; 128
     534:	5a e3       	ldi	r21, 0x3A	; 58
     536:	36 d7       	rcall	.+3692   	; 0x13a4 <__mulsf3>
     538:	6b 01       	movw	r12, r22
     53a:	7c 01       	movw	r14, r24
	RS = (RL*(vin-vout))/vout; // Solve for RS
     53c:	9b 01       	movw	r18, r22
     53e:	ac 01       	movw	r20, r24
     540:	60 e0       	ldi	r22, 0x00	; 0
     542:	70 e0       	ldi	r23, 0x00	; 0
     544:	80 ea       	ldi	r24, 0xA0	; 160
     546:	90 e4       	ldi	r25, 0x40	; 64
     548:	9d d5       	rcall	.+2874   	; 0x1084 <__subsf3>
     54a:	20 e0       	ldi	r18, 0x00	; 0
     54c:	30 e6       	ldi	r19, 0x60	; 96
     54e:	4a e1       	ldi	r20, 0x1A	; 26
     550:	56 e4       	ldi	r21, 0x46	; 70
     552:	28 d7       	rcall	.+3664   	; 0x13a4 <__mulsf3>
     554:	a7 01       	movw	r20, r14
     556:	96 01       	movw	r18, r12
     558:	fa d5       	rcall	.+3060   	; 0x114e <__divsf3>
	y = RS/RO;
     55a:	20 e0       	ldi	r18, 0x00	; 0
     55c:	30 e0       	ldi	r19, 0x00	; 0
     55e:	4a ef       	ldi	r20, 0xFA	; 250
     560:	54 e4       	ldi	r21, 0x44	; 68
     562:	f5 d5       	rcall	.+3050   	; 0x114e <__divsf3>
     564:	6b 01       	movw	r12, r22
     566:	7c 01       	movw	r14, r24
	if (y > 2)
     568:	20 e0       	ldi	r18, 0x00	; 0
     56a:	30 e0       	ldi	r19, 0x00	; 0
     56c:	40 e0       	ldi	r20, 0x00	; 0
     56e:	50 e4       	ldi	r21, 0x40	; 64
     570:	15 d7       	rcall	.+3626   	; 0x139c <__gesf2>
     572:	18 16       	cp	r1, r24
     574:	6c f0       	brlt	.+26     	; 0x590 <read_MQ7+0xb6>
		t = 0;
	else
		t = (y-b)/m;
     576:	21 e8       	ldi	r18, 0x81	; 129
     578:	35 e9       	ldi	r19, 0x95	; 149
     57a:	43 ee       	ldi	r20, 0xE3	; 227
     57c:	5f e3       	ldi	r21, 0x3F	; 63
     57e:	c7 01       	movw	r24, r14
     580:	b6 01       	movw	r22, r12
     582:	80 d5       	rcall	.+2816   	; 0x1084 <__subsf3>
     584:	27 ea       	ldi	r18, 0xA7	; 167
     586:	31 e2       	ldi	r19, 0x21	; 33
     588:	4a ea       	ldi	r20, 0xAA	; 170
     58a:	5a eb       	ldi	r21, 0xBA	; 186
     58c:	e0 d5       	rcall	.+3008   	; 0x114e <__divsf3>
     58e:	03 c0       	rjmp	.+6      	; 0x596 <read_MQ7+0xbc>
	vout *= 5;
	vout /= 1024;
	RS = (RL*(vin-vout))/vout; // Solve for RS
	y = RS/RO;
	if (y > 2)
		t = 0;
     590:	60 e0       	ldi	r22, 0x00	; 0
     592:	70 e0       	ldi	r23, 0x00	; 0
     594:	cb 01       	movw	r24, r22
	else
		t = (y-b)/m;
	strcat(buffer, "CO  : ");
     596:	d8 01       	movw	r26, r16
     598:	0d 90       	ld	r0, X+
     59a:	00 20       	and	r0, r0
     59c:	e9 f7       	brne	.-6      	; 0x598 <read_MQ7+0xbe>
     59e:	11 97       	sbiw	r26, 0x01	; 1
     5a0:	27 e0       	ldi	r18, 0x07	; 7
     5a2:	e9 e2       	ldi	r30, 0x29	; 41
     5a4:	f2 e0       	ldi	r31, 0x02	; 2
     5a6:	01 90       	ld	r0, Z+
     5a8:	0d 92       	st	X+, r0
     5aa:	2a 95       	dec	r18
     5ac:	e1 f7       	brne	.-8      	; 0x5a6 <read_MQ7+0xcc>
	sprintf(temp, "%d ppm\n", (int)t);
     5ae:	37 d6       	rcall	.+3182   	; 0x121e <__fixsfsi>
     5b0:	7f 93       	push	r23
     5b2:	6f 93       	push	r22
     5b4:	8a e1       	ldi	r24, 0x1A	; 26
     5b6:	92 e0       	ldi	r25, 0x02	; 2
     5b8:	9f 93       	push	r25
     5ba:	8f 93       	push	r24
     5bc:	ce 01       	movw	r24, r28
     5be:	01 96       	adiw	r24, 0x01	; 1
     5c0:	7c 01       	movw	r14, r24
     5c2:	9f 93       	push	r25
     5c4:	8f 93       	push	r24
     5c6:	97 d7       	rcall	.+3886   	; 0x14f6 <sprintf>
	strcat(buffer, temp);
     5c8:	b7 01       	movw	r22, r14
     5ca:	c8 01       	movw	r24, r16
     5cc:	7a d7       	rcall	.+3828   	; 0x14c2 <strcat>
     5ce:	0f 90       	pop	r0
     5d0:	0f 90       	pop	r0
     5d2:	0f 90       	pop	r0
     5d4:	0f 90       	pop	r0
     5d6:	0f 90       	pop	r0
     5d8:	0f 90       	pop	r0
	return;
}
     5da:	2a 96       	adiw	r28, 0x0a	; 10
     5dc:	0f b6       	in	r0, 0x3f	; 63
     5de:	f8 94       	cli
     5e0:	de bf       	out	0x3e, r29	; 62
     5e2:	0f be       	out	0x3f, r0	; 63
     5e4:	cd bf       	out	0x3d, r28	; 61
     5e6:	df 91       	pop	r29
     5e8:	cf 91       	pop	r28
     5ea:	1f 91       	pop	r17
     5ec:	0f 91       	pop	r16
     5ee:	ff 90       	pop	r15
     5f0:	ef 90       	pop	r14
     5f2:	df 90       	pop	r13
     5f4:	cf 90       	pop	r12
     5f6:	08 95       	ret

000005f8 <usart_init>:

void usart_init(int n)
{
	switch(n)
     5f8:	81 30       	cpi	r24, 0x01	; 1
     5fa:	91 05       	cpc	r25, r1
     5fc:	b9 f0       	breq	.+46     	; 0x62c <usart_init+0x34>
     5fe:	1c f4       	brge	.+6      	; 0x606 <usart_init+0xe>
     600:	89 2b       	or	r24, r25
     602:	39 f0       	breq	.+14     	; 0x612 <usart_init+0x1a>
     604:	08 95       	ret
     606:	82 30       	cpi	r24, 0x02	; 2
     608:	91 05       	cpc	r25, r1
     60a:	e9 f0       	breq	.+58     	; 0x646 <usart_init+0x4e>
     60c:	03 97       	sbiw	r24, 0x03	; 3
     60e:	41 f1       	breq	.+80     	; 0x660 <usart_init+0x68>
     610:	08 95       	ret
	{
		case 0:
			UCSR0B = (1<<TXEN0) | (1<<RXEN0) | (1<<RXCIE0); // TX Enable, RX Enable, RX Interrupt enabled
     612:	88 e9       	ldi	r24, 0x98	; 152
     614:	80 93 c1 00 	sts	0x00C1, r24
			UCSR0C = (1<<UCSZ01) | (1<<UCSZ00); // 8 bit data segment
     618:	86 e0       	ldi	r24, 0x06	; 6
     61a:	80 93 c2 00 	sts	0x00C2, r24
			UBRR0 = 0x33; // Baud rate
     61e:	83 e3       	ldi	r24, 0x33	; 51
     620:	90 e0       	ldi	r25, 0x00	; 0
     622:	90 93 c5 00 	sts	0x00C5, r25
     626:	80 93 c4 00 	sts	0x00C4, r24
			break;
     62a:	08 95       	ret
		case 1:
			UCSR1B = (1<<TXEN1) | (1<<RXEN1) | (1<<RXCIE1); // TX Enable, RX Enable, RX Interrupt enabled
     62c:	88 e9       	ldi	r24, 0x98	; 152
     62e:	80 93 c9 00 	sts	0x00C9, r24
			UCSR1C = (1<<UCSZ11) | (1<<UCSZ10); // 8 bit data segment
     632:	86 e0       	ldi	r24, 0x06	; 6
     634:	80 93 ca 00 	sts	0x00CA, r24
			UBRR1 = 0x33; // Baud rate
     638:	83 e3       	ldi	r24, 0x33	; 51
     63a:	90 e0       	ldi	r25, 0x00	; 0
     63c:	90 93 cd 00 	sts	0x00CD, r25
     640:	80 93 cc 00 	sts	0x00CC, r24
			break;
     644:	08 95       	ret
		case 2:
			UCSR2B = (1<<TXEN2) | (1<<RXEN2) | (1<<RXCIE2); // TX Enable, RX Enable, RX Interrupt enabled
     646:	88 e9       	ldi	r24, 0x98	; 152
     648:	80 93 d1 00 	sts	0x00D1, r24
			UCSR2C = (1<<UCSZ21) | (1<<UCSZ20); // 8 bit data segment
     64c:	86 e0       	ldi	r24, 0x06	; 6
     64e:	80 93 d2 00 	sts	0x00D2, r24
			UBRR2 = 0x33; // Baud rate
     652:	83 e3       	ldi	r24, 0x33	; 51
     654:	90 e0       	ldi	r25, 0x00	; 0
     656:	90 93 d5 00 	sts	0x00D5, r25
     65a:	80 93 d4 00 	sts	0x00D4, r24
			break;
     65e:	08 95       	ret
		case 3:
			UCSR3B = (1<<TXEN3) | (1<<RXEN3) | (1<<RXCIE3); // TX Enable, RX Enable, RX Interrupt enabled
     660:	88 e9       	ldi	r24, 0x98	; 152
     662:	80 93 31 01 	sts	0x0131, r24
			UCSR3C = (1<<UCSZ31) | (1<<UCSZ30); // 8 bit data segment
     666:	86 e0       	ldi	r24, 0x06	; 6
     668:	80 93 32 01 	sts	0x0132, r24
			UBRR3 = 0x33; // Baud rate
     66c:	83 e3       	ldi	r24, 0x33	; 51
     66e:	90 e0       	ldi	r25, 0x00	; 0
     670:	90 93 35 01 	sts	0x0135, r25
     674:	80 93 34 01 	sts	0x0134, r24
     678:	08 95       	ret

0000067a <usart_send>:
		break;
	}
}

void usart_send (int n, char* data)
{
     67a:	cf 93       	push	r28
     67c:	df 93       	push	r29
     67e:	db 01       	movw	r26, r22
	switch(n)
     680:	81 30       	cpi	r24, 0x01	; 1
     682:	91 05       	cpc	r25, r1
     684:	d1 f0       	breq	.+52     	; 0x6ba <usart_send+0x40>
     686:	1c f4       	brge	.+6      	; 0x68e <usart_send+0x14>
     688:	89 2b       	or	r24, r25
     68a:	f9 f0       	breq	.+62     	; 0x6ca <usart_send+0x50>
     68c:	79 c0       	rjmp	.+242    	; 0x780 <usart_send+0x106>
     68e:	82 30       	cpi	r24, 0x02	; 2
     690:	91 05       	cpc	r25, r1
     692:	59 f0       	breq	.+22     	; 0x6aa <usart_send+0x30>
     694:	03 97       	sbiw	r24, 0x03	; 3
     696:	09 f0       	breq	.+2      	; 0x69a <usart_send+0x20>
     698:	73 c0       	rjmp	.+230    	; 0x780 <usart_send+0x106>
     69a:	ab 01       	movw	r20, r22
     69c:	20 e0       	ldi	r18, 0x00	; 0
     69e:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
		case 3:
		for(int i = 0; i < strlen(data); i++)
		{
			while (! (UCSR3A & (1<<UDRE3)));
     6a0:	e0 e3       	ldi	r30, 0x30	; 48
     6a2:	f1 e0       	ldi	r31, 0x01	; 1
			UDR3 = data[i];
     6a4:	66 e3       	ldi	r22, 0x36	; 54
     6a6:	71 e0       	ldi	r23, 0x01	; 1
     6a8:	61 c0       	rjmp	.+194    	; 0x76c <usart_send+0xf2>
     6aa:	ab 01       	movw	r20, r22
	}
}

void usart_send (int n, char* data)
{
	switch(n)
     6ac:	20 e0       	ldi	r18, 0x00	; 0
     6ae:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
		case 2:
		for(int i = 0; i < strlen(data); i++)
		{
			while (! (UCSR2A & (1<<UDRE2)));
     6b0:	e0 ed       	ldi	r30, 0xD0	; 208
     6b2:	f0 e0       	ldi	r31, 0x00	; 0
			UDR2 = data[i];
     6b4:	66 ed       	ldi	r22, 0xD6	; 214
     6b6:	70 e0       	ldi	r23, 0x00	; 0
     6b8:	44 c0       	rjmp	.+136    	; 0x742 <usart_send+0xc8>
     6ba:	ab 01       	movw	r20, r22
	}
}

void usart_send (int n, char* data)
{
	switch(n)
     6bc:	20 e0       	ldi	r18, 0x00	; 0
     6be:	30 e0       	ldi	r19, 0x00	; 0
			}
			break;
		case 1:
		for(int i = 0; i < strlen(data); i++)
		{
			while (! (UCSR1A & (1<<UDRE1)));
     6c0:	e8 ec       	ldi	r30, 0xC8	; 200
     6c2:	f0 e0       	ldi	r31, 0x00	; 0
			UDR1 = data[i];
     6c4:	6e ec       	ldi	r22, 0xCE	; 206
     6c6:	70 e0       	ldi	r23, 0x00	; 0
     6c8:	27 c0       	rjmp	.+78     	; 0x718 <usart_send+0x9e>
     6ca:	ab 01       	movw	r20, r22
	}
}

void usart_send (int n, char* data)
{
	switch(n)
     6cc:	20 e0       	ldi	r18, 0x00	; 0
     6ce:	30 e0       	ldi	r19, 0x00	; 0
	{
		case 0:
			for(int i = 0; i < strlen(data); i++)
			{
				while (! (UCSR0A & (1<<UDRE0)));
     6d0:	e0 ec       	ldi	r30, 0xC0	; 192
     6d2:	f0 e0       	ldi	r31, 0x00	; 0
				UDR0 = data[i];
     6d4:	66 ec       	ldi	r22, 0xC6	; 198
     6d6:	70 e0       	ldi	r23, 0x00	; 0
     6d8:	0a c0       	rjmp	.+20     	; 0x6ee <usart_send+0x74>
	switch(n)
	{
		case 0:
			for(int i = 0; i < strlen(data); i++)
			{
				while (! (UCSR0A & (1<<UDRE0)));
     6da:	80 81       	ld	r24, Z
     6dc:	85 ff       	sbrs	r24, 5
     6de:	fd cf       	rjmp	.-6      	; 0x6da <usart_send+0x60>
				UDR0 = data[i];
     6e0:	ea 01       	movw	r28, r20
     6e2:	89 91       	ld	r24, Y+
     6e4:	ae 01       	movw	r20, r28
     6e6:	eb 01       	movw	r28, r22
     6e8:	88 83       	st	Y, r24
void usart_send (int n, char* data)
{
	switch(n)
	{
		case 0:
			for(int i = 0; i < strlen(data); i++)
     6ea:	2f 5f       	subi	r18, 0xFF	; 255
     6ec:	3f 4f       	sbci	r19, 0xFF	; 255
     6ee:	ed 01       	movw	r28, r26
     6f0:	09 90       	ld	r0, Y+
     6f2:	00 20       	and	r0, r0
     6f4:	e9 f7       	brne	.-6      	; 0x6f0 <usart_send+0x76>
     6f6:	21 97       	sbiw	r28, 0x01	; 1
     6f8:	ca 1b       	sub	r28, r26
     6fa:	db 0b       	sbc	r29, r27
     6fc:	2c 17       	cp	r18, r28
     6fe:	3d 07       	cpc	r19, r29
     700:	60 f3       	brcs	.-40     	; 0x6da <usart_send+0x60>
     702:	3e c0       	rjmp	.+124    	; 0x780 <usart_send+0x106>
			}
			break;
		case 1:
		for(int i = 0; i < strlen(data); i++)
		{
			while (! (UCSR1A & (1<<UDRE1)));
     704:	80 81       	ld	r24, Z
     706:	85 ff       	sbrs	r24, 5
     708:	fd cf       	rjmp	.-6      	; 0x704 <usart_send+0x8a>
			UDR1 = data[i];
     70a:	ea 01       	movw	r28, r20
     70c:	89 91       	ld	r24, Y+
     70e:	ae 01       	movw	r20, r28
     710:	eb 01       	movw	r28, r22
     712:	88 83       	st	Y, r24
				while (! (UCSR0A & (1<<UDRE0)));
				UDR0 = data[i];
			}
			break;
		case 1:
		for(int i = 0; i < strlen(data); i++)
     714:	2f 5f       	subi	r18, 0xFF	; 255
     716:	3f 4f       	sbci	r19, 0xFF	; 255
     718:	ed 01       	movw	r28, r26
     71a:	09 90       	ld	r0, Y+
     71c:	00 20       	and	r0, r0
     71e:	e9 f7       	brne	.-6      	; 0x71a <usart_send+0xa0>
     720:	21 97       	sbiw	r28, 0x01	; 1
     722:	ca 1b       	sub	r28, r26
     724:	db 0b       	sbc	r29, r27
     726:	2c 17       	cp	r18, r28
     728:	3d 07       	cpc	r19, r29
     72a:	60 f3       	brcs	.-40     	; 0x704 <usart_send+0x8a>
     72c:	29 c0       	rjmp	.+82     	; 0x780 <usart_send+0x106>
		}
		break;
		case 2:
		for(int i = 0; i < strlen(data); i++)
		{
			while (! (UCSR2A & (1<<UDRE2)));
     72e:	80 81       	ld	r24, Z
     730:	85 ff       	sbrs	r24, 5
     732:	fd cf       	rjmp	.-6      	; 0x72e <usart_send+0xb4>
			UDR2 = data[i];
     734:	ea 01       	movw	r28, r20
     736:	89 91       	ld	r24, Y+
     738:	ae 01       	movw	r20, r28
     73a:	eb 01       	movw	r28, r22
     73c:	88 83       	st	Y, r24
			while (! (UCSR1A & (1<<UDRE1)));
			UDR1 = data[i];
		}
		break;
		case 2:
		for(int i = 0; i < strlen(data); i++)
     73e:	2f 5f       	subi	r18, 0xFF	; 255
     740:	3f 4f       	sbci	r19, 0xFF	; 255
     742:	ed 01       	movw	r28, r26
     744:	09 90       	ld	r0, Y+
     746:	00 20       	and	r0, r0
     748:	e9 f7       	brne	.-6      	; 0x744 <usart_send+0xca>
     74a:	21 97       	sbiw	r28, 0x01	; 1
     74c:	ca 1b       	sub	r28, r26
     74e:	db 0b       	sbc	r29, r27
     750:	2c 17       	cp	r18, r28
     752:	3d 07       	cpc	r19, r29
     754:	60 f3       	brcs	.-40     	; 0x72e <usart_send+0xb4>
     756:	14 c0       	rjmp	.+40     	; 0x780 <usart_send+0x106>
		}
		break;
		case 3:
		for(int i = 0; i < strlen(data); i++)
		{
			while (! (UCSR3A & (1<<UDRE3)));
     758:	80 81       	ld	r24, Z
     75a:	85 ff       	sbrs	r24, 5
     75c:	fd cf       	rjmp	.-6      	; 0x758 <usart_send+0xde>
			UDR3 = data[i];
     75e:	ea 01       	movw	r28, r20
     760:	89 91       	ld	r24, Y+
     762:	ae 01       	movw	r20, r28
     764:	eb 01       	movw	r28, r22
     766:	88 83       	st	Y, r24
			while (! (UCSR2A & (1<<UDRE2)));
			UDR2 = data[i];
		}
		break;
		case 3:
		for(int i = 0; i < strlen(data); i++)
     768:	2f 5f       	subi	r18, 0xFF	; 255
     76a:	3f 4f       	sbci	r19, 0xFF	; 255
     76c:	ed 01       	movw	r28, r26
     76e:	09 90       	ld	r0, Y+
     770:	00 20       	and	r0, r0
     772:	e9 f7       	brne	.-6      	; 0x76e <usart_send+0xf4>
     774:	21 97       	sbiw	r28, 0x01	; 1
     776:	ca 1b       	sub	r28, r26
     778:	db 0b       	sbc	r29, r27
     77a:	2c 17       	cp	r18, r28
     77c:	3d 07       	cpc	r19, r29
     77e:	60 f3       	brcs	.-40     	; 0x758 <usart_send+0xde>
			UDR3 = data[i];
		}
		break;
	}
	return;
}
     780:	df 91       	pop	r29
     782:	cf 91       	pop	r28
     784:	08 95       	ret

00000786 <parse_GPS>:

void parse_GPS(char* in, char* out)
{
     786:	2f 92       	push	r2
     788:	3f 92       	push	r3
     78a:	4f 92       	push	r4
     78c:	5f 92       	push	r5
     78e:	6f 92       	push	r6
     790:	7f 92       	push	r7
     792:	8f 92       	push	r8
     794:	9f 92       	push	r9
     796:	af 92       	push	r10
     798:	bf 92       	push	r11
     79a:	cf 92       	push	r12
     79c:	df 92       	push	r13
     79e:	ef 92       	push	r14
     7a0:	ff 92       	push	r15
     7a2:	0f 93       	push	r16
     7a4:	1f 93       	push	r17
     7a6:	cf 93       	push	r28
     7a8:	df 93       	push	r29
     7aa:	cd b7       	in	r28, 0x3d	; 61
     7ac:	de b7       	in	r29, 0x3e	; 62
     7ae:	c8 58       	subi	r28, 0x88	; 136
     7b0:	d1 09       	sbc	r29, r1
     7b2:	0f b6       	in	r0, 0x3f	; 63
     7b4:	f8 94       	cli
     7b6:	de bf       	out	0x3e, r29	; 62
     7b8:	0f be       	out	0x3f, r0	; 63
     7ba:	cd bf       	out	0x3d, r28	; 61
     7bc:	7c 01       	movw	r14, r24
     7be:	5b 01       	movw	r10, r22
	int p = 0;
	int comma = 0;
	int i = 0;
	int hour, min, sec, fix, latd, lats, latm, lond, lonm, lons, ns, ew;
	char temp[100];
	if(in[1] == 'G')
     7c0:	dc 01       	movw	r26, r24
     7c2:	11 96       	adiw	r26, 0x01	; 1
     7c4:	8c 91       	ld	r24, X
     7c6:	87 34       	cpi	r24, 0x47	; 71
     7c8:	09 f0       	breq	.+2      	; 0x7cc <parse_GPS+0x46>
     7ca:	d3 c2       	rjmp	.+1446   	; 0xd72 <parse_GPS+0x5ec>
     7cc:	41 2c       	mov	r4, r1
     7ce:	51 2c       	mov	r5, r1
     7d0:	c1 2c       	mov	r12, r1
     7d2:	d1 2c       	mov	r13, r1
     7d4:	00 e0       	ldi	r16, 0x00	; 0
     7d6:	10 e0       	ldi	r17, 0x00	; 0
						temp[7] = in[p++];
						temp[8] = in[p++];
						temp[9] = in[p++];
						temp[10] = in[p++];
						temp[11] = 0;
						sscanf(temp, "%d.%d.%d", &lond, &lonm, &lons);
     7d8:	1e 01       	movw	r2, r28
     7da:	b1 e1       	ldi	r27, 0x11	; 17
     7dc:	2b 0e       	add	r2, r27
     7de:	31 1c       	adc	r3, r1
     7e0:	fe 01       	movw	r30, r28
     7e2:	3f 96       	adiw	r30, 0x0f	; 15
     7e4:	e9 96       	adiw	r28, 0x39	; 57
     7e6:	ff af       	std	Y+63, r31	; 0x3f
     7e8:	ee af       	std	Y+62, r30	; 0x3e
     7ea:	e9 97       	sbiw	r28, 0x39	; 57
     7ec:	9e 01       	movw	r18, r28
     7ee:	23 5f       	subi	r18, 0xF3	; 243
     7f0:	3f 4f       	sbci	r19, 0xFF	; 255
     7f2:	eb 96       	adiw	r28, 0x3b	; 59
     7f4:	3f af       	std	Y+63, r19	; 0x3f
     7f6:	2e af       	std	Y+62, r18	; 0x3e
     7f8:	eb 97       	sbiw	r28, 0x3b	; 59
     7fa:	4e 01       	movw	r8, r28
     7fc:	33 e1       	ldi	r19, 0x13	; 19
     7fe:	83 0e       	add	r8, r19
     800:	91 1c       	adc	r9, r1
						temp[6] = in[p++];
						temp[7] = in[p++];
						temp[8] = in[p++];
						temp[9] = in[p++];
						temp[10] = 0;
						sscanf(temp, "%d.%d.%d", &latd, &latm, &lats);
     802:	ce 01       	movw	r24, r28
     804:	09 96       	adiw	r24, 0x09	; 9
     806:	ed 96       	adiw	r28, 0x3d	; 61
     808:	9f af       	std	Y+63, r25	; 0x3f
     80a:	8e af       	std	Y+62, r24	; 0x3e
     80c:	ed 97       	sbiw	r28, 0x3d	; 61
     80e:	de 01       	movw	r26, r28
     810:	1b 96       	adiw	r26, 0x0b	; 11
     812:	ef 96       	adiw	r28, 0x3f	; 63
     814:	bf af       	std	Y+63, r27	; 0x3f
     816:	ae af       	std	Y+62, r26	; 0x3e
     818:	ef 97       	sbiw	r28, 0x3f	; 63
     81a:	38 97       	sbiw	r30, 0x08	; 8
     81c:	c1 58       	subi	r28, 0x81	; 129
     81e:	df 4f       	sbci	r29, 0xFF	; 255
     820:	f9 83       	std	Y+1, r31	; 0x01
     822:	e8 83       	st	Y, r30
     824:	cf 57       	subi	r28, 0x7F	; 127
     826:	d0 40       	sbci	r29, 0x00	; 0
						temp[4] = in[p++];
						temp[5] = ':';
						temp[6] = in[p++];
						temp[7] = in[p++];
						temp[8] = 0;
						sscanf(temp,"%d:%d:%d",&hour,&min,&sec);
     828:	9e 01       	movw	r18, r28
     82a:	2b 5f       	subi	r18, 0xFB	; 251
     82c:	3f 4f       	sbci	r19, 0xFF	; 255
     82e:	cf 57       	subi	r28, 0x7F	; 127
     830:	df 4f       	sbci	r29, 0xFF	; 255
     832:	39 83       	std	Y+1, r19	; 0x01
     834:	28 83       	st	Y, r18
     836:	c1 58       	subi	r28, 0x81	; 129
     838:	d0 40       	sbci	r29, 0x00	; 0
     83a:	3e 01       	movw	r6, r28
     83c:	33 e0       	ldi	r19, 0x03	; 3
     83e:	63 0e       	add	r6, r19
     840:	71 1c       	adc	r7, r1
	char temp[100];
	if(in[1] == 'G')
	{
		while(comma < 12)
		{
			if(in[p] == 44)
     842:	f7 01       	movw	r30, r14
     844:	e0 0f       	add	r30, r16
     846:	f1 1f       	adc	r31, r17
     848:	80 81       	ld	r24, Z
     84a:	8c 32       	cpi	r24, 0x2C	; 44
     84c:	09 f0       	breq	.+2      	; 0x850 <parse_GPS+0xca>
     84e:	5e c1       	rjmp	.+700    	; 0xb0c <parse_GPS+0x386>
			{
				comma++;
     850:	8f ef       	ldi	r24, 0xFF	; 255
     852:	c8 1a       	sub	r12, r24
     854:	d8 0a       	sbc	r13, r24
				p++;
     856:	a8 01       	movw	r20, r16
     858:	4f 5f       	subi	r20, 0xFF	; 255
     85a:	5f 4f       	sbci	r21, 0xFF	; 255
				switch(comma)
     85c:	f6 01       	movw	r30, r12
     85e:	31 97       	sbiw	r30, 0x01	; 1
     860:	e9 30       	cpi	r30, 0x09	; 9
     862:	f1 05       	cpc	r31, r1
     864:	08 f0       	brcs	.+2      	; 0x868 <parse_GPS+0xe2>
     866:	55 c1       	rjmp	.+682    	; 0xb12 <parse_GPS+0x38c>
     868:	88 27       	eor	r24, r24
     86a:	ee 58       	subi	r30, 0x8E	; 142
     86c:	ff 4f       	sbci	r31, 0xFF	; 255
     86e:	8f 4f       	sbci	r24, 0xFF	; 255
     870:	20 c6       	rjmp	.+3136   	; 0x14b2 <__tablejump2__>
							fix = 1;
						else
							fix = 0;
						break;
					case 9:
						while(in[p] != ',')
     872:	f7 01       	movw	r30, r14
     874:	e4 0f       	add	r30, r20
     876:	f5 1f       	adc	r31, r21
     878:	80 81       	ld	r24, Z
     87a:	8c 32       	cpi	r24, 0x2C	; 44
     87c:	09 f0       	breq	.+2      	; 0x880 <parse_GPS+0xfa>
     87e:	26 c1       	rjmp	.+588    	; 0xacc <parse_GPS+0x346>
     880:	92 01       	movw	r18, r4
     882:	8a 01       	movw	r16, r20
     884:	35 c1       	rjmp	.+618    	; 0xaf0 <parse_GPS+0x36a>
				comma++;
				p++;
				switch(comma)
				{
					case 1:
						strcat(out, "\nTime: ");
     886:	d5 01       	movw	r26, r10
     888:	0d 90       	ld	r0, X+
     88a:	00 20       	and	r0, r0
     88c:	e9 f7       	brne	.-6      	; 0x888 <parse_GPS+0x102>
     88e:	11 97       	sbiw	r26, 0x01	; 1
     890:	88 e0       	ldi	r24, 0x08	; 8
     892:	e0 e3       	ldi	r30, 0x30	; 48
     894:	f2 e0       	ldi	r31, 0x02	; 2
     896:	01 90       	ld	r0, Z+
     898:	0d 92       	st	X+, r0
     89a:	8a 95       	dec	r24
     89c:	e1 f7       	brne	.-8      	; 0x896 <parse_GPS+0x110>
						temp[0] = in[p++];
     89e:	f7 01       	movw	r30, r14
     8a0:	e4 0f       	add	r30, r20
     8a2:	f5 1f       	adc	r31, r21
     8a4:	80 81       	ld	r24, Z
     8a6:	8b 8b       	std	Y+19, r24	; 0x13
						temp[1] = in[p++];
     8a8:	f7 01       	movw	r30, r14
     8aa:	e0 0f       	add	r30, r16
     8ac:	f1 1f       	adc	r31, r17
     8ae:	82 81       	ldd	r24, Z+2	; 0x02
     8b0:	8c 8b       	std	Y+20, r24	; 0x14
						temp[2] = ':';
     8b2:	8a e3       	ldi	r24, 0x3A	; 58
     8b4:	8d 8b       	std	Y+21, r24	; 0x15
						temp[3] = in[p++];
     8b6:	93 81       	ldd	r25, Z+3	; 0x03
     8b8:	9e 8b       	std	Y+22, r25	; 0x16
						temp[4] = in[p++];
     8ba:	94 81       	ldd	r25, Z+4	; 0x04
     8bc:	9f 8b       	std	Y+23, r25	; 0x17
						temp[5] = ':';
     8be:	88 8f       	std	Y+24, r24	; 0x18
						temp[6] = in[p++];
     8c0:	85 81       	ldd	r24, Z+5	; 0x05
     8c2:	89 8f       	std	Y+25, r24	; 0x19
						temp[7] = in[p++];
     8c4:	f8 01       	movw	r30, r16
     8c6:	36 96       	adiw	r30, 0x06	; 6
     8c8:	ee 0d       	add	r30, r14
     8ca:	ff 1d       	adc	r31, r15
     8cc:	09 5f       	subi	r16, 0xF9	; 249
     8ce:	1f 4f       	sbci	r17, 0xFF	; 255
     8d0:	80 81       	ld	r24, Z
     8d2:	8a 8f       	std	Y+26, r24	; 0x1a
						temp[8] = 0;
     8d4:	1b 8e       	std	Y+27, r1	; 0x1b
						sscanf(temp,"%d:%d:%d",&hour,&min,&sec);
     8d6:	ce 57       	subi	r28, 0x7E	; 126
     8d8:	df 4f       	sbci	r29, 0xFF	; 255
     8da:	98 81       	ld	r25, Y
     8dc:	c2 58       	subi	r28, 0x82	; 130
     8de:	d0 40       	sbci	r29, 0x00	; 0
     8e0:	9f 93       	push	r25
     8e2:	cf 57       	subi	r28, 0x7F	; 127
     8e4:	df 4f       	sbci	r29, 0xFF	; 255
     8e6:	a8 81       	ld	r26, Y
     8e8:	c1 58       	subi	r28, 0x81	; 129
     8ea:	d0 40       	sbci	r29, 0x00	; 0
     8ec:	af 93       	push	r26
     8ee:	7f 92       	push	r7
     8f0:	6f 92       	push	r6
     8f2:	e1 e0       	ldi	r30, 0x01	; 1
     8f4:	f0 e0       	ldi	r31, 0x00	; 0
     8f6:	ec 0f       	add	r30, r28
     8f8:	fd 1f       	adc	r31, r29
     8fa:	ff 93       	push	r31
     8fc:	ef 93       	push	r30
     8fe:	88 e3       	ldi	r24, 0x38	; 56
     900:	92 e0       	ldi	r25, 0x02	; 2
     902:	9f 93       	push	r25
     904:	8f 93       	push	r24
     906:	9f 92       	push	r9
     908:	8f 92       	push	r8
     90a:	24 d6       	rcall	.+3144   	; 0x1554 <sscanf>
						if(hour > 6)
     90c:	89 81       	ldd	r24, Y+1	; 0x01
     90e:	9a 81       	ldd	r25, Y+2	; 0x02
     910:	0f b6       	in	r0, 0x3f	; 63
     912:	f8 94       	cli
     914:	de bf       	out	0x3e, r29	; 62
     916:	0f be       	out	0x3f, r0	; 63
     918:	cd bf       	out	0x3d, r28	; 61
     91a:	87 30       	cpi	r24, 0x07	; 7
     91c:	91 05       	cpc	r25, r1
     91e:	24 f0       	brlt	.+8      	; 0x928 <parse_GPS+0x1a2>
							hour = hour-7;
     920:	07 97       	sbiw	r24, 0x07	; 7
     922:	9a 83       	std	Y+2, r25	; 0x02
     924:	89 83       	std	Y+1, r24	; 0x01
     926:	8d cf       	rjmp	.-230    	; 0x842 <parse_GPS+0xbc>
						else
							hour = hour + 17;
     928:	41 96       	adiw	r24, 0x11	; 17
     92a:	9a 83       	std	Y+2, r25	; 0x02
     92c:	89 83       	std	Y+1, r24	; 0x01
     92e:	89 cf       	rjmp	.-238    	; 0x842 <parse_GPS+0xbc>
						break;
					case 2:
						temp[0] = in[p++];
     930:	f7 01       	movw	r30, r14
     932:	e4 0f       	add	r30, r20
     934:	f5 1f       	adc	r31, r21
     936:	80 81       	ld	r24, Z
     938:	8b 8b       	std	Y+19, r24	; 0x13
						temp[1] = in[p++];
     93a:	f7 01       	movw	r30, r14
     93c:	e0 0f       	add	r30, r16
     93e:	f1 1f       	adc	r31, r17
     940:	82 81       	ldd	r24, Z+2	; 0x02
     942:	8c 8b       	std	Y+20, r24	; 0x14
						temp[2] = '.';
     944:	8e e2       	ldi	r24, 0x2E	; 46
     946:	8d 8b       	std	Y+21, r24	; 0x15
						temp[3] = in[p++];
     948:	83 81       	ldd	r24, Z+3	; 0x03
     94a:	8e 8b       	std	Y+22, r24	; 0x16
						temp[4] = in[p++];
     94c:	84 81       	ldd	r24, Z+4	; 0x04
     94e:	8f 8b       	std	Y+23, r24	; 0x17
						temp[5] = in[p++];
     950:	85 81       	ldd	r24, Z+5	; 0x05
     952:	88 8f       	std	Y+24, r24	; 0x18
						temp[6] = in[p++];
     954:	86 81       	ldd	r24, Z+6	; 0x06
     956:	89 8f       	std	Y+25, r24	; 0x19
						temp[7] = in[p++];
     958:	87 81       	ldd	r24, Z+7	; 0x07
     95a:	8a 8f       	std	Y+26, r24	; 0x1a
						temp[8] = in[p++];
     95c:	80 85       	ldd	r24, Z+8	; 0x08
     95e:	8b 8f       	std	Y+27, r24	; 0x1b
						temp[9] = in[p++];
     960:	f8 01       	movw	r30, r16
     962:	39 96       	adiw	r30, 0x09	; 9
     964:	ee 0d       	add	r30, r14
     966:	ff 1d       	adc	r31, r15
     968:	06 5f       	subi	r16, 0xF6	; 246
     96a:	1f 4f       	sbci	r17, 0xFF	; 255
     96c:	80 81       	ld	r24, Z
     96e:	8c 8f       	std	Y+28, r24	; 0x1c
						temp[10] = 0;
     970:	1d 8e       	std	Y+29, r1	; 0x1d
						sscanf(temp, "%d.%d.%d", &latd, &latm, &lats);
     972:	ed 96       	adiw	r28, 0x3d	; 61
     974:	3f ad       	ldd	r19, Y+63	; 0x3f
     976:	ed 97       	sbiw	r28, 0x3d	; 61
     978:	3f 93       	push	r19
     97a:	ec 96       	adiw	r28, 0x3c	; 60
     97c:	8f ad       	ldd	r24, Y+63	; 0x3f
     97e:	ec 97       	sbiw	r28, 0x3c	; 60
     980:	8f 93       	push	r24
     982:	ef 96       	adiw	r28, 0x3f	; 63
     984:	9f ad       	ldd	r25, Y+63	; 0x3f
     986:	ef 97       	sbiw	r28, 0x3f	; 63
     988:	9f 93       	push	r25
     98a:	ee 96       	adiw	r28, 0x3e	; 62
     98c:	af ad       	ldd	r26, Y+63	; 0x3f
     98e:	ee 97       	sbiw	r28, 0x3e	; 62
     990:	af 93       	push	r26
     992:	c0 58       	subi	r28, 0x80	; 128
     994:	df 4f       	sbci	r29, 0xFF	; 255
     996:	b8 81       	ld	r27, Y
     998:	c0 58       	subi	r28, 0x80	; 128
     99a:	d0 40       	sbci	r29, 0x00	; 0
     99c:	bf 93       	push	r27
     99e:	c1 58       	subi	r28, 0x81	; 129
     9a0:	df 4f       	sbci	r29, 0xFF	; 255
     9a2:	e8 81       	ld	r30, Y
     9a4:	cf 57       	subi	r28, 0x7F	; 127
     9a6:	d0 40       	sbci	r29, 0x00	; 0
     9a8:	ef 93       	push	r30
     9aa:	a1 e4       	ldi	r26, 0x41	; 65
     9ac:	b2 e0       	ldi	r27, 0x02	; 2
     9ae:	bf 93       	push	r27
     9b0:	af 93       	push	r26
     9b2:	9f 92       	push	r9
     9b4:	8f 92       	push	r8
     9b6:	ce d5       	rcall	.+2972   	; 0x1554 <sscanf>
						break;
     9b8:	0f b6       	in	r0, 0x3f	; 63
     9ba:	f8 94       	cli
     9bc:	de bf       	out	0x3e, r29	; 62
     9be:	0f be       	out	0x3f, r0	; 63
     9c0:	cd bf       	out	0x3d, r28	; 61
     9c2:	3f cf       	rjmp	.-386    	; 0x842 <parse_GPS+0xbc>
					case 3:
						if(in[p++] == 'N')
     9c4:	0e 5f       	subi	r16, 0xFE	; 254
     9c6:	1f 4f       	sbci	r17, 0xFF	; 255
     9c8:	f7 01       	movw	r30, r14
     9ca:	e4 0f       	add	r30, r20
     9cc:	f5 1f       	adc	r31, r21
     9ce:	91 e0       	ldi	r25, 0x01	; 1
     9d0:	80 e0       	ldi	r24, 0x00	; 0
     9d2:	20 81       	ld	r18, Z
     9d4:	2e 34       	cpi	r18, 0x4E	; 78
     9d6:	09 f4       	brne	.+2      	; 0x9da <parse_GPS+0x254>
     9d8:	90 e0       	ldi	r25, 0x00	; 0
     9da:	cb 57       	subi	r28, 0x7B	; 123
     9dc:	df 4f       	sbci	r29, 0xFF	; 255
     9de:	98 83       	st	Y, r25
     9e0:	c5 58       	subi	r28, 0x85	; 133
     9e2:	d0 40       	sbci	r29, 0x00	; 0
     9e4:	ca 57       	subi	r28, 0x7A	; 122
     9e6:	df 4f       	sbci	r29, 0xFF	; 255
     9e8:	88 83       	st	Y, r24
     9ea:	c6 58       	subi	r28, 0x86	; 134
     9ec:	d0 40       	sbci	r29, 0x00	; 0
     9ee:	29 cf       	rjmp	.-430    	; 0x842 <parse_GPS+0xbc>
							ns = 0;
						else
							ns = 1;
						break;
					case 4:
						temp[0] = in[p++];
     9f0:	f7 01       	movw	r30, r14
     9f2:	e4 0f       	add	r30, r20
     9f4:	f5 1f       	adc	r31, r21
     9f6:	80 81       	ld	r24, Z
     9f8:	8b 8b       	std	Y+19, r24	; 0x13
						temp[1] = in[p++];
     9fa:	f7 01       	movw	r30, r14
     9fc:	e0 0f       	add	r30, r16
     9fe:	f1 1f       	adc	r31, r17
     a00:	82 81       	ldd	r24, Z+2	; 0x02
     a02:	8c 8b       	std	Y+20, r24	; 0x14
						temp[2] = in[p++];
     a04:	83 81       	ldd	r24, Z+3	; 0x03
     a06:	8d 8b       	std	Y+21, r24	; 0x15
						temp[3] = '.';
     a08:	8e e2       	ldi	r24, 0x2E	; 46
     a0a:	8e 8b       	std	Y+22, r24	; 0x16
						temp[4] = in[p++];
     a0c:	84 81       	ldd	r24, Z+4	; 0x04
     a0e:	8f 8b       	std	Y+23, r24	; 0x17
						temp[5] = in[p++];
     a10:	85 81       	ldd	r24, Z+5	; 0x05
     a12:	88 8f       	std	Y+24, r24	; 0x18
						temp[6] = in[p++];
     a14:	86 81       	ldd	r24, Z+6	; 0x06
     a16:	89 8f       	std	Y+25, r24	; 0x19
						temp[7] = in[p++];
     a18:	87 81       	ldd	r24, Z+7	; 0x07
     a1a:	8a 8f       	std	Y+26, r24	; 0x1a
						temp[8] = in[p++];
     a1c:	80 85       	ldd	r24, Z+8	; 0x08
     a1e:	8b 8f       	std	Y+27, r24	; 0x1b
						temp[9] = in[p++];
     a20:	81 85       	ldd	r24, Z+9	; 0x09
     a22:	8c 8f       	std	Y+28, r24	; 0x1c
						temp[10] = in[p++];
     a24:	f8 01       	movw	r30, r16
     a26:	3a 96       	adiw	r30, 0x0a	; 10
     a28:	ee 0d       	add	r30, r14
     a2a:	ff 1d       	adc	r31, r15
     a2c:	05 5f       	subi	r16, 0xF5	; 245
     a2e:	1f 4f       	sbci	r17, 0xFF	; 255
     a30:	80 81       	ld	r24, Z
     a32:	8d 8f       	std	Y+29, r24	; 0x1d
						temp[11] = 0;
     a34:	1e 8e       	std	Y+30, r1	; 0x1e
						sscanf(temp, "%d.%d.%d", &lond, &lonm, &lons);
     a36:	3f 92       	push	r3
     a38:	2f 92       	push	r2
     a3a:	e9 96       	adiw	r28, 0x39	; 57
     a3c:	3f ad       	ldd	r19, Y+63	; 0x3f
     a3e:	e9 97       	sbiw	r28, 0x39	; 57
     a40:	3f 93       	push	r19
     a42:	e8 96       	adiw	r28, 0x38	; 56
     a44:	8f ad       	ldd	r24, Y+63	; 0x3f
     a46:	e8 97       	sbiw	r28, 0x38	; 56
     a48:	8f 93       	push	r24
     a4a:	eb 96       	adiw	r28, 0x3b	; 59
     a4c:	9f ad       	ldd	r25, Y+63	; 0x3f
     a4e:	eb 97       	sbiw	r28, 0x3b	; 59
     a50:	9f 93       	push	r25
     a52:	ea 96       	adiw	r28, 0x3a	; 58
     a54:	af ad       	ldd	r26, Y+63	; 0x3f
     a56:	ea 97       	sbiw	r28, 0x3a	; 58
     a58:	af 93       	push	r26
     a5a:	a1 e4       	ldi	r26, 0x41	; 65
     a5c:	b2 e0       	ldi	r27, 0x02	; 2
     a5e:	bf 93       	push	r27
     a60:	af 93       	push	r26
     a62:	9f 92       	push	r9
     a64:	8f 92       	push	r8
     a66:	76 d5       	rcall	.+2796   	; 0x1554 <sscanf>
						break;
     a68:	0f b6       	in	r0, 0x3f	; 63
     a6a:	f8 94       	cli
     a6c:	de bf       	out	0x3e, r29	; 62
     a6e:	0f be       	out	0x3f, r0	; 63
     a70:	cd bf       	out	0x3d, r28	; 61
     a72:	e7 ce       	rjmp	.-562    	; 0x842 <parse_GPS+0xbc>
					case 5:
						if(in[p++] == 'E')
     a74:	0e 5f       	subi	r16, 0xFE	; 254
     a76:	1f 4f       	sbci	r17, 0xFF	; 255
     a78:	f7 01       	movw	r30, r14
     a7a:	e4 0f       	add	r30, r20
     a7c:	f5 1f       	adc	r31, r21
     a7e:	91 e0       	ldi	r25, 0x01	; 1
     a80:	80 e0       	ldi	r24, 0x00	; 0
     a82:	20 81       	ld	r18, Z
     a84:	25 34       	cpi	r18, 0x45	; 69
     a86:	09 f4       	brne	.+2      	; 0xa8a <parse_GPS+0x304>
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	c9 57       	subi	r28, 0x79	; 121
     a8c:	df 4f       	sbci	r29, 0xFF	; 255
     a8e:	98 83       	st	Y, r25
     a90:	c7 58       	subi	r28, 0x87	; 135
     a92:	d0 40       	sbci	r29, 0x00	; 0
     a94:	c8 57       	subi	r28, 0x78	; 120
     a96:	df 4f       	sbci	r29, 0xFF	; 255
     a98:	88 83       	st	Y, r24
     a9a:	c8 58       	subi	r28, 0x88	; 136
     a9c:	d0 40       	sbci	r29, 0x00	; 0
     a9e:	d1 ce       	rjmp	.-606    	; 0x842 <parse_GPS+0xbc>
							ew = 0;
						else
							ew = 1;
						break;
					case 6:
						if(in[p++] == '1')
     aa0:	0e 5f       	subi	r16, 0xFE	; 254
     aa2:	1f 4f       	sbci	r17, 0xFF	; 255
     aa4:	f7 01       	movw	r30, r14
     aa6:	e4 0f       	add	r30, r20
     aa8:	f5 1f       	adc	r31, r21
     aaa:	91 e0       	ldi	r25, 0x01	; 1
     aac:	80 e0       	ldi	r24, 0x00	; 0
     aae:	20 81       	ld	r18, Z
     ab0:	21 33       	cpi	r18, 0x31	; 49
     ab2:	09 f0       	breq	.+2      	; 0xab6 <parse_GPS+0x330>
     ab4:	90 e0       	ldi	r25, 0x00	; 0
     ab6:	cd 57       	subi	r28, 0x7D	; 125
     ab8:	df 4f       	sbci	r29, 0xFF	; 255
     aba:	98 83       	st	Y, r25
     abc:	c3 58       	subi	r28, 0x83	; 131
     abe:	d0 40       	sbci	r29, 0x00	; 0
     ac0:	cc 57       	subi	r28, 0x7C	; 124
     ac2:	df 4f       	sbci	r29, 0xFF	; 255
     ac4:	88 83       	st	Y, r24
     ac6:	c4 58       	subi	r28, 0x84	; 132
     ac8:	d0 40       	sbci	r29, 0x00	; 0
     aca:	bb ce       	rjmp	.-650    	; 0x842 <parse_GPS+0xbc>
     acc:	d4 01       	movw	r26, r8
     ace:	a4 0d       	add	r26, r4
     ad0:	b5 1d       	adc	r27, r5
     ad2:	0e 5f       	subi	r16, 0xFE	; 254
     ad4:	1f 4f       	sbci	r17, 0xFF	; 255
     ad6:	f7 01       	movw	r30, r14
     ad8:	e0 0f       	add	r30, r16
     ada:	f1 1f       	adc	r31, r17
							fix = 1;
						else
							fix = 0;
						break;
					case 9:
						while(in[p] != ',')
     adc:	92 01       	movw	r18, r4
     ade:	8f 01       	movw	r16, r30
     ae0:	0e 19       	sub	r16, r14
     ae2:	1f 09       	sbc	r17, r15
						{
							temp[i] = in[p++];
     ae4:	8d 93       	st	X+, r24
							i++;
     ae6:	2f 5f       	subi	r18, 0xFF	; 255
     ae8:	3f 4f       	sbci	r19, 0xFF	; 255
							fix = 1;
						else
							fix = 0;
						break;
					case 9:
						while(in[p] != ',')
     aea:	81 91       	ld	r24, Z+
     aec:	8c 32       	cpi	r24, 0x2C	; 44
     aee:	b9 f7       	brne	.-18     	; 0xade <parse_GPS+0x358>
						{
							temp[i] = in[p++];
							i++;
						}
						temp[i++] = '\n';
     af0:	29 01       	movw	r4, r18
     af2:	8f ef       	ldi	r24, 0xFF	; 255
     af4:	48 1a       	sub	r4, r24
     af6:	58 0a       	sbc	r5, r24
     af8:	f4 01       	movw	r30, r8
     afa:	e2 0f       	add	r30, r18
     afc:	f3 1f       	adc	r31, r19
     afe:	8a e0       	ldi	r24, 0x0A	; 10
     b00:	80 83       	st	Z, r24
						temp[i] = 0;
     b02:	f4 01       	movw	r30, r8
     b04:	e4 0d       	add	r30, r4
     b06:	f5 1d       	adc	r31, r5
     b08:	10 82       	st	Z, r1
						break;
     b0a:	9b ce       	rjmp	.-714    	; 0x842 <parse_GPS+0xbc>
				}
			}
			else
				p++;
     b0c:	0f 5f       	subi	r16, 0xFF	; 255
     b0e:	1f 4f       	sbci	r17, 0xFF	; 255
     b10:	01 c0       	rjmp	.+2      	; 0xb14 <parse_GPS+0x38e>
		while(comma < 12)
		{
			if(in[p] == 44)
			{
				comma++;
				p++;
     b12:	8a 01       	movw	r16, r20
	int i = 0;
	int hour, min, sec, fix, latd, lats, latm, lond, lonm, lons, ns, ew;
	char temp[100];
	if(in[1] == 'G')
	{
		while(comma < 12)
     b14:	9c e0       	ldi	r25, 0x0C	; 12
     b16:	c9 16       	cp	r12, r25
     b18:	d1 04       	cpc	r13, r1
     b1a:	0c f4       	brge	.+2      	; 0xb1e <parse_GPS+0x398>
     b1c:	92 ce       	rjmp	.-732    	; 0x842 <parse_GPS+0xbc>
				p++;
		}
	}
	else
		return;
	if(fix == 1)
     b1e:	cd 57       	subi	r28, 0x7D	; 125
     b20:	df 4f       	sbci	r29, 0xFF	; 255
     b22:	a8 81       	ld	r26, Y
     b24:	b9 81       	ldd	r27, Y+1	; 0x01
     b26:	c3 58       	subi	r28, 0x83	; 131
     b28:	d0 40       	sbci	r29, 0x00	; 0
     b2a:	11 97       	sbiw	r26, 0x01	; 1
     b2c:	09 f0       	breq	.+2      	; 0xb30 <parse_GPS+0x3aa>
     b2e:	fd c0       	rjmp	.+506    	; 0xd2a <parse_GPS+0x5a4>
	{
		if(ns == 0 && ew == 0)
     b30:	cb 57       	subi	r28, 0x7B	; 123
     b32:	df 4f       	sbci	r29, 0xFF	; 255
     b34:	e8 81       	ld	r30, Y
     b36:	f9 81       	ldd	r31, Y+1	; 0x01
     b38:	c5 58       	subi	r28, 0x85	; 133
     b3a:	d0 40       	sbci	r29, 0x00	; 0
     b3c:	ef 2b       	or	r30, r31
     b3e:	d1 f5       	brne	.+116    	; 0xbb4 <parse_GPS+0x42e>
     b40:	c9 57       	subi	r28, 0x79	; 121
     b42:	df 4f       	sbci	r29, 0xFF	; 255
     b44:	28 81       	ld	r18, Y
     b46:	39 81       	ldd	r19, Y+1	; 0x01
     b48:	c7 58       	subi	r28, 0x87	; 135
     b4a:	d0 40       	sbci	r29, 0x00	; 0
     b4c:	23 2b       	or	r18, r19
     b4e:	09 f0       	breq	.+2      	; 0xb52 <parse_GPS+0x3cc>
     b50:	74 c0       	rjmp	.+232    	; 0xc3a <parse_GPS+0x4b4>
			sprintf(out, "\nTime: %.2d:%.2d:%.2d\nLatitude: %d %d.%d\nLongitude: %d %d.%d\nAltitude: ", hour, min, sec, latd, latm, lats, lond, lonm, lons);
     b52:	8a 89       	ldd	r24, Y+18	; 0x12
     b54:	8f 93       	push	r24
     b56:	89 89       	ldd	r24, Y+17	; 0x11
     b58:	8f 93       	push	r24
     b5a:	88 89       	ldd	r24, Y+16	; 0x10
     b5c:	8f 93       	push	r24
     b5e:	8f 85       	ldd	r24, Y+15	; 0x0f
     b60:	8f 93       	push	r24
     b62:	8e 85       	ldd	r24, Y+14	; 0x0e
     b64:	8f 93       	push	r24
     b66:	8d 85       	ldd	r24, Y+13	; 0x0d
     b68:	8f 93       	push	r24
     b6a:	8a 85       	ldd	r24, Y+10	; 0x0a
     b6c:	8f 93       	push	r24
     b6e:	89 85       	ldd	r24, Y+9	; 0x09
     b70:	8f 93       	push	r24
     b72:	8c 85       	ldd	r24, Y+12	; 0x0c
     b74:	8f 93       	push	r24
     b76:	8b 85       	ldd	r24, Y+11	; 0x0b
     b78:	8f 93       	push	r24
     b7a:	88 85       	ldd	r24, Y+8	; 0x08
     b7c:	8f 93       	push	r24
     b7e:	8f 81       	ldd	r24, Y+7	; 0x07
     b80:	8f 93       	push	r24
     b82:	8e 81       	ldd	r24, Y+6	; 0x06
     b84:	8f 93       	push	r24
     b86:	8d 81       	ldd	r24, Y+5	; 0x05
     b88:	8f 93       	push	r24
     b8a:	8c 81       	ldd	r24, Y+4	; 0x04
     b8c:	8f 93       	push	r24
     b8e:	8b 81       	ldd	r24, Y+3	; 0x03
     b90:	8f 93       	push	r24
     b92:	8a 81       	ldd	r24, Y+2	; 0x02
     b94:	8f 93       	push	r24
     b96:	89 81       	ldd	r24, Y+1	; 0x01
     b98:	8f 93       	push	r24
     b9a:	8a e4       	ldi	r24, 0x4A	; 74
     b9c:	92 e0       	ldi	r25, 0x02	; 2
     b9e:	9f 93       	push	r25
     ba0:	8f 93       	push	r24
     ba2:	bf 92       	push	r11
     ba4:	af 92       	push	r10
     ba6:	a7 d4       	rcall	.+2382   	; 0x14f6 <sprintf>
     ba8:	0f b6       	in	r0, 0x3f	; 63
     baa:	f8 94       	cli
     bac:	de bf       	out	0x3e, r29	; 62
     bae:	0f be       	out	0x3f, r0	; 63
     bb0:	cd bf       	out	0x3d, r28	; 61
     bb2:	b5 c0       	rjmp	.+362    	; 0xd1e <parse_GPS+0x598>
		else if(ns == 1 && ew == 0)
     bb4:	cb 57       	subi	r28, 0x7B	; 123
     bb6:	df 4f       	sbci	r29, 0xFF	; 255
     bb8:	a8 81       	ld	r26, Y
     bba:	b9 81       	ldd	r27, Y+1	; 0x01
     bbc:	c5 58       	subi	r28, 0x85	; 133
     bbe:	d0 40       	sbci	r29, 0x00	; 0
     bc0:	11 97       	sbiw	r26, 0x01	; 1
     bc2:	09 f0       	breq	.+2      	; 0xbc6 <parse_GPS+0x440>
     bc4:	ac c0       	rjmp	.+344    	; 0xd1e <parse_GPS+0x598>
     bc6:	c9 57       	subi	r28, 0x79	; 121
     bc8:	df 4f       	sbci	r29, 0xFF	; 255
     bca:	e8 81       	ld	r30, Y
     bcc:	f9 81       	ldd	r31, Y+1	; 0x01
     bce:	c7 58       	subi	r28, 0x87	; 135
     bd0:	d0 40       	sbci	r29, 0x00	; 0
     bd2:	ef 2b       	or	r30, r31
     bd4:	09 f0       	breq	.+2      	; 0xbd8 <parse_GPS+0x452>
     bd6:	6b c0       	rjmp	.+214    	; 0xcae <parse_GPS+0x528>
			sprintf(out, "\nTime: %.2d:%.2d:%.2d\nLatitude: -%d %d.%d\nLongitude: %d %d.%d\nAltitude: ", hour, min, sec, latd, latm, lats, lond, lonm, lons);
     bd8:	8a 89       	ldd	r24, Y+18	; 0x12
     bda:	8f 93       	push	r24
     bdc:	89 89       	ldd	r24, Y+17	; 0x11
     bde:	8f 93       	push	r24
     be0:	88 89       	ldd	r24, Y+16	; 0x10
     be2:	8f 93       	push	r24
     be4:	8f 85       	ldd	r24, Y+15	; 0x0f
     be6:	8f 93       	push	r24
     be8:	8e 85       	ldd	r24, Y+14	; 0x0e
     bea:	8f 93       	push	r24
     bec:	8d 85       	ldd	r24, Y+13	; 0x0d
     bee:	8f 93       	push	r24
     bf0:	8a 85       	ldd	r24, Y+10	; 0x0a
     bf2:	8f 93       	push	r24
     bf4:	89 85       	ldd	r24, Y+9	; 0x09
     bf6:	8f 93       	push	r24
     bf8:	8c 85       	ldd	r24, Y+12	; 0x0c
     bfa:	8f 93       	push	r24
     bfc:	8b 85       	ldd	r24, Y+11	; 0x0b
     bfe:	8f 93       	push	r24
     c00:	88 85       	ldd	r24, Y+8	; 0x08
     c02:	8f 93       	push	r24
     c04:	8f 81       	ldd	r24, Y+7	; 0x07
     c06:	8f 93       	push	r24
     c08:	8e 81       	ldd	r24, Y+6	; 0x06
     c0a:	8f 93       	push	r24
     c0c:	8d 81       	ldd	r24, Y+5	; 0x05
     c0e:	8f 93       	push	r24
     c10:	8c 81       	ldd	r24, Y+4	; 0x04
     c12:	8f 93       	push	r24
     c14:	8b 81       	ldd	r24, Y+3	; 0x03
     c16:	8f 93       	push	r24
     c18:	8a 81       	ldd	r24, Y+2	; 0x02
     c1a:	8f 93       	push	r24
     c1c:	89 81       	ldd	r24, Y+1	; 0x01
     c1e:	8f 93       	push	r24
     c20:	82 e9       	ldi	r24, 0x92	; 146
     c22:	92 e0       	ldi	r25, 0x02	; 2
     c24:	9f 93       	push	r25
     c26:	8f 93       	push	r24
     c28:	bf 92       	push	r11
     c2a:	af 92       	push	r10
     c2c:	64 d4       	rcall	.+2248   	; 0x14f6 <sprintf>
     c2e:	0f b6       	in	r0, 0x3f	; 63
     c30:	f8 94       	cli
     c32:	de bf       	out	0x3e, r29	; 62
     c34:	0f be       	out	0x3f, r0	; 63
     c36:	cd bf       	out	0x3d, r28	; 61
     c38:	72 c0       	rjmp	.+228    	; 0xd1e <parse_GPS+0x598>
		else if(ns == 0 && ew == 1)
     c3a:	c9 57       	subi	r28, 0x79	; 121
     c3c:	df 4f       	sbci	r29, 0xFF	; 255
     c3e:	88 81       	ld	r24, Y
     c40:	99 81       	ldd	r25, Y+1	; 0x01
     c42:	c7 58       	subi	r28, 0x87	; 135
     c44:	d0 40       	sbci	r29, 0x00	; 0
     c46:	01 97       	sbiw	r24, 0x01	; 1
     c48:	09 f0       	breq	.+2      	; 0xc4c <parse_GPS+0x4c6>
     c4a:	69 c0       	rjmp	.+210    	; 0xd1e <parse_GPS+0x598>
			sprintf(out, "\nTime: %.2d:%.2d:%.2d\nLatitude: %d %d.%d\nLongitude: -%d %d.%d\nAltitude: ", hour, min, sec, latd, latm, lats, lond, lonm, lons);
     c4c:	8a 89       	ldd	r24, Y+18	; 0x12
     c4e:	8f 93       	push	r24
     c50:	89 89       	ldd	r24, Y+17	; 0x11
     c52:	8f 93       	push	r24
     c54:	88 89       	ldd	r24, Y+16	; 0x10
     c56:	8f 93       	push	r24
     c58:	8f 85       	ldd	r24, Y+15	; 0x0f
     c5a:	8f 93       	push	r24
     c5c:	8e 85       	ldd	r24, Y+14	; 0x0e
     c5e:	8f 93       	push	r24
     c60:	8d 85       	ldd	r24, Y+13	; 0x0d
     c62:	8f 93       	push	r24
     c64:	8a 85       	ldd	r24, Y+10	; 0x0a
     c66:	8f 93       	push	r24
     c68:	89 85       	ldd	r24, Y+9	; 0x09
     c6a:	8f 93       	push	r24
     c6c:	8c 85       	ldd	r24, Y+12	; 0x0c
     c6e:	8f 93       	push	r24
     c70:	8b 85       	ldd	r24, Y+11	; 0x0b
     c72:	8f 93       	push	r24
     c74:	88 85       	ldd	r24, Y+8	; 0x08
     c76:	8f 93       	push	r24
     c78:	8f 81       	ldd	r24, Y+7	; 0x07
     c7a:	8f 93       	push	r24
     c7c:	8e 81       	ldd	r24, Y+6	; 0x06
     c7e:	8f 93       	push	r24
     c80:	8d 81       	ldd	r24, Y+5	; 0x05
     c82:	8f 93       	push	r24
     c84:	8c 81       	ldd	r24, Y+4	; 0x04
     c86:	8f 93       	push	r24
     c88:	8b 81       	ldd	r24, Y+3	; 0x03
     c8a:	8f 93       	push	r24
     c8c:	8a 81       	ldd	r24, Y+2	; 0x02
     c8e:	8f 93       	push	r24
     c90:	89 81       	ldd	r24, Y+1	; 0x01
     c92:	8f 93       	push	r24
     c94:	8b ed       	ldi	r24, 0xDB	; 219
     c96:	92 e0       	ldi	r25, 0x02	; 2
     c98:	9f 93       	push	r25
     c9a:	8f 93       	push	r24
     c9c:	bf 92       	push	r11
     c9e:	af 92       	push	r10
     ca0:	2a d4       	rcall	.+2132   	; 0x14f6 <sprintf>
     ca2:	0f b6       	in	r0, 0x3f	; 63
     ca4:	f8 94       	cli
     ca6:	de bf       	out	0x3e, r29	; 62
     ca8:	0f be       	out	0x3f, r0	; 63
     caa:	cd bf       	out	0x3d, r28	; 61
     cac:	38 c0       	rjmp	.+112    	; 0xd1e <parse_GPS+0x598>
		else if(ns == 1 && ew == 1)
     cae:	c9 57       	subi	r28, 0x79	; 121
     cb0:	df 4f       	sbci	r29, 0xFF	; 255
     cb2:	e8 81       	ld	r30, Y
     cb4:	f9 81       	ldd	r31, Y+1	; 0x01
     cb6:	c7 58       	subi	r28, 0x87	; 135
     cb8:	d0 40       	sbci	r29, 0x00	; 0
     cba:	31 97       	sbiw	r30, 0x01	; 1
     cbc:	81 f5       	brne	.+96     	; 0xd1e <parse_GPS+0x598>
			sprintf(out, "\nTime: %.2d:%.2d:%.2d\nLatitude: -%d %d.%d\nLongitude: -%d %d.%d\nAltitude: ", hour, min, sec, latd, latm, lats, lond, lonm, lons);
     cbe:	8a 89       	ldd	r24, Y+18	; 0x12
     cc0:	8f 93       	push	r24
     cc2:	89 89       	ldd	r24, Y+17	; 0x11
     cc4:	8f 93       	push	r24
     cc6:	88 89       	ldd	r24, Y+16	; 0x10
     cc8:	8f 93       	push	r24
     cca:	8f 85       	ldd	r24, Y+15	; 0x0f
     ccc:	8f 93       	push	r24
     cce:	8e 85       	ldd	r24, Y+14	; 0x0e
     cd0:	8f 93       	push	r24
     cd2:	8d 85       	ldd	r24, Y+13	; 0x0d
     cd4:	8f 93       	push	r24
     cd6:	8a 85       	ldd	r24, Y+10	; 0x0a
     cd8:	8f 93       	push	r24
     cda:	89 85       	ldd	r24, Y+9	; 0x09
     cdc:	8f 93       	push	r24
     cde:	8c 85       	ldd	r24, Y+12	; 0x0c
     ce0:	8f 93       	push	r24
     ce2:	8b 85       	ldd	r24, Y+11	; 0x0b
     ce4:	8f 93       	push	r24
     ce6:	88 85       	ldd	r24, Y+8	; 0x08
     ce8:	8f 93       	push	r24
     cea:	8f 81       	ldd	r24, Y+7	; 0x07
     cec:	8f 93       	push	r24
     cee:	8e 81       	ldd	r24, Y+6	; 0x06
     cf0:	8f 93       	push	r24
     cf2:	8d 81       	ldd	r24, Y+5	; 0x05
     cf4:	8f 93       	push	r24
     cf6:	8c 81       	ldd	r24, Y+4	; 0x04
     cf8:	8f 93       	push	r24
     cfa:	8b 81       	ldd	r24, Y+3	; 0x03
     cfc:	8f 93       	push	r24
     cfe:	8a 81       	ldd	r24, Y+2	; 0x02
     d00:	8f 93       	push	r24
     d02:	89 81       	ldd	r24, Y+1	; 0x01
     d04:	8f 93       	push	r24
     d06:	84 e2       	ldi	r24, 0x24	; 36
     d08:	93 e0       	ldi	r25, 0x03	; 3
     d0a:	9f 93       	push	r25
     d0c:	8f 93       	push	r24
     d0e:	bf 92       	push	r11
     d10:	af 92       	push	r10
     d12:	f1 d3       	rcall	.+2018   	; 0x14f6 <sprintf>
     d14:	0f b6       	in	r0, 0x3f	; 63
     d16:	f8 94       	cli
     d18:	de bf       	out	0x3e, r29	; 62
     d1a:	0f be       	out	0x3f, r0	; 63
     d1c:	cd bf       	out	0x3d, r28	; 61
		strcat(out, temp);
     d1e:	be 01       	movw	r22, r28
     d20:	6d 5e       	subi	r22, 0xED	; 237
     d22:	7f 4f       	sbci	r23, 0xFF	; 255
     d24:	c5 01       	movw	r24, r10
     d26:	cd d3       	rcall	.+1946   	; 0x14c2 <strcat>
     d28:	24 c0       	rjmp	.+72     	; 0xd72 <parse_GPS+0x5ec>
	}
	else
	{
		sprintf(out, "\nTime: %.2d:%.2d:%.2d\n", hour, min, sec);
     d2a:	8e 81       	ldd	r24, Y+6	; 0x06
     d2c:	8f 93       	push	r24
     d2e:	8d 81       	ldd	r24, Y+5	; 0x05
     d30:	8f 93       	push	r24
     d32:	8c 81       	ldd	r24, Y+4	; 0x04
     d34:	8f 93       	push	r24
     d36:	8b 81       	ldd	r24, Y+3	; 0x03
     d38:	8f 93       	push	r24
     d3a:	8a 81       	ldd	r24, Y+2	; 0x02
     d3c:	8f 93       	push	r24
     d3e:	89 81       	ldd	r24, Y+1	; 0x01
     d40:	8f 93       	push	r24
     d42:	8e e6       	ldi	r24, 0x6E	; 110
     d44:	93 e0       	ldi	r25, 0x03	; 3
     d46:	9f 93       	push	r25
     d48:	8f 93       	push	r24
     d4a:	bf 92       	push	r11
     d4c:	af 92       	push	r10
     d4e:	d3 d3       	rcall	.+1958   	; 0x14f6 <sprintf>
		strcat(out, "NO GPS DATA AVAILABLE\n");
     d50:	d5 01       	movw	r26, r10
     d52:	0d 90       	ld	r0, X+
     d54:	00 20       	and	r0, r0
     d56:	e9 f7       	brne	.-6      	; 0xd52 <parse_GPS+0x5cc>
     d58:	11 97       	sbiw	r26, 0x01	; 1
     d5a:	87 e1       	ldi	r24, 0x17	; 23
     d5c:	e5 e8       	ldi	r30, 0x85	; 133
     d5e:	f3 e0       	ldi	r31, 0x03	; 3
     d60:	01 90       	ld	r0, Z+
     d62:	0d 92       	st	X+, r0
     d64:	8a 95       	dec	r24
     d66:	e1 f7       	brne	.-8      	; 0xd60 <parse_GPS+0x5da>
     d68:	0f b6       	in	r0, 0x3f	; 63
     d6a:	f8 94       	cli
     d6c:	de bf       	out	0x3e, r29	; 62
     d6e:	0f be       	out	0x3f, r0	; 63
     d70:	cd bf       	out	0x3d, r28	; 61
	}

	return;
}
     d72:	c8 57       	subi	r28, 0x78	; 120
     d74:	df 4f       	sbci	r29, 0xFF	; 255
     d76:	0f b6       	in	r0, 0x3f	; 63
     d78:	f8 94       	cli
     d7a:	de bf       	out	0x3e, r29	; 62
     d7c:	0f be       	out	0x3f, r0	; 63
     d7e:	cd bf       	out	0x3d, r28	; 61
     d80:	df 91       	pop	r29
     d82:	cf 91       	pop	r28
     d84:	1f 91       	pop	r17
     d86:	0f 91       	pop	r16
     d88:	ff 90       	pop	r15
     d8a:	ef 90       	pop	r14
     d8c:	df 90       	pop	r13
     d8e:	cf 90       	pop	r12
     d90:	bf 90       	pop	r11
     d92:	af 90       	pop	r10
     d94:	9f 90       	pop	r9
     d96:	8f 90       	pop	r8
     d98:	7f 90       	pop	r7
     d9a:	6f 90       	pop	r6
     d9c:	5f 90       	pop	r5
     d9e:	4f 90       	pop	r4
     da0:	3f 90       	pop	r3
     da2:	2f 90       	pop	r2
     da4:	08 95       	ret

00000da6 <parse_dylos>:

void parse_dylos(char* in, char* out)
{
     da6:	cf 92       	push	r12
     da8:	df 92       	push	r13
     daa:	ef 92       	push	r14
     dac:	ff 92       	push	r15
     dae:	0f 93       	push	r16
     db0:	1f 93       	push	r17
     db2:	cf 93       	push	r28
     db4:	df 93       	push	r29
     db6:	cd b7       	in	r28, 0x3d	; 61
     db8:	de b7       	in	r29, 0x3e	; 62
     dba:	2e 97       	sbiw	r28, 0x0e	; 14
     dbc:	0f b6       	in	r0, 0x3f	; 63
     dbe:	f8 94       	cli
     dc0:	de bf       	out	0x3e, r29	; 62
     dc2:	0f be       	out	0x3f, r0	; 63
     dc4:	cd bf       	out	0x3d, r28	; 61
     dc6:	7b 01       	movw	r14, r22
	int small, large;
	char temp[10];
	sscanf(in, "%d,%d", &small, &large);	
     dc8:	9e 01       	movw	r18, r28
     dca:	2d 5f       	subi	r18, 0xFD	; 253
     dcc:	3f 4f       	sbci	r19, 0xFF	; 255
     dce:	3f 93       	push	r19
     dd0:	2f 93       	push	r18
     dd2:	22 50       	subi	r18, 0x02	; 2
     dd4:	31 09       	sbc	r19, r1
     dd6:	3f 93       	push	r19
     dd8:	2f 93       	push	r18
     dda:	2c e9       	ldi	r18, 0x9C	; 156
     ddc:	33 e0       	ldi	r19, 0x03	; 3
     dde:	3f 93       	push	r19
     de0:	2f 93       	push	r18
     de2:	9f 93       	push	r25
     de4:	8f 93       	push	r24
     de6:	b6 d3       	rcall	.+1900   	; 0x1554 <sscanf>
	strcat(out, "Small: ");
     de8:	d7 01       	movw	r26, r14
     dea:	0d 90       	ld	r0, X+
     dec:	00 20       	and	r0, r0
     dee:	e9 f7       	brne	.-6      	; 0xdea <parse_dylos+0x44>
     df0:	11 97       	sbiw	r26, 0x01	; 1
     df2:	88 e0       	ldi	r24, 0x08	; 8
     df4:	e2 ea       	ldi	r30, 0xA2	; 162
     df6:	f3 e0       	ldi	r31, 0x03	; 3
     df8:	01 90       	ld	r0, Z+
     dfa:	0d 92       	st	X+, r0
     dfc:	8a 95       	dec	r24
     dfe:	e1 f7       	brne	.-8      	; 0xdf8 <parse_dylos+0x52>
	sprintf(temp, "%d\n", small);
     e00:	8a 81       	ldd	r24, Y+2	; 0x02
     e02:	8f 93       	push	r24
     e04:	89 81       	ldd	r24, Y+1	; 0x01
     e06:	8f 93       	push	r24
     e08:	0f 2e       	mov	r0, r31
     e0a:	fa ea       	ldi	r31, 0xAA	; 170
     e0c:	cf 2e       	mov	r12, r31
     e0e:	f3 e0       	ldi	r31, 0x03	; 3
     e10:	df 2e       	mov	r13, r31
     e12:	f0 2d       	mov	r31, r0
     e14:	df 92       	push	r13
     e16:	cf 92       	push	r12
     e18:	8e 01       	movw	r16, r28
     e1a:	0b 5f       	subi	r16, 0xFB	; 251
     e1c:	1f 4f       	sbci	r17, 0xFF	; 255
     e1e:	1f 93       	push	r17
     e20:	0f 93       	push	r16
     e22:	69 d3       	rcall	.+1746   	; 0x14f6 <sprintf>
	strcat(out, temp);
     e24:	b8 01       	movw	r22, r16
     e26:	c7 01       	movw	r24, r14
     e28:	4c d3       	rcall	.+1688   	; 0x14c2 <strcat>
	strcat(out, "Large: ");
     e2a:	d7 01       	movw	r26, r14
     e2c:	0d 90       	ld	r0, X+
     e2e:	00 20       	and	r0, r0
     e30:	e9 f7       	brne	.-6      	; 0xe2c <parse_dylos+0x86>
     e32:	11 97       	sbiw	r26, 0x01	; 1
     e34:	88 e0       	ldi	r24, 0x08	; 8
     e36:	ee ea       	ldi	r30, 0xAE	; 174
     e38:	f3 e0       	ldi	r31, 0x03	; 3
     e3a:	01 90       	ld	r0, Z+
     e3c:	0d 92       	st	X+, r0
     e3e:	8a 95       	dec	r24
     e40:	e1 f7       	brne	.-8      	; 0xe3a <parse_dylos+0x94>
	sprintf(temp,"%d\n", large);
     e42:	8c 81       	ldd	r24, Y+4	; 0x04
     e44:	8f 93       	push	r24
     e46:	8b 81       	ldd	r24, Y+3	; 0x03
     e48:	8f 93       	push	r24
     e4a:	df 92       	push	r13
     e4c:	cf 92       	push	r12
     e4e:	1f 93       	push	r17
     e50:	0f 93       	push	r16
     e52:	51 d3       	rcall	.+1698   	; 0x14f6 <sprintf>
	strcat(out, temp);
     e54:	b8 01       	movw	r22, r16
     e56:	c7 01       	movw	r24, r14
     e58:	34 d3       	rcall	.+1640   	; 0x14c2 <strcat>
     e5a:	0f b6       	in	r0, 0x3f	; 63
     e5c:	f8 94       	cli
     e5e:	de bf       	out	0x3e, r29	; 62
     e60:	0f be       	out	0x3f, r0	; 63
     e62:	cd bf       	out	0x3d, r28	; 61
	return;
}
     e64:	2e 96       	adiw	r28, 0x0e	; 14
     e66:	0f b6       	in	r0, 0x3f	; 63
     e68:	f8 94       	cli
     e6a:	de bf       	out	0x3e, r29	; 62
     e6c:	0f be       	out	0x3f, r0	; 63
     e6e:	cd bf       	out	0x3d, r28	; 61
     e70:	df 91       	pop	r29
     e72:	cf 91       	pop	r28
     e74:	1f 91       	pop	r17
     e76:	0f 91       	pop	r16
     e78:	ff 90       	pop	r15
     e7a:	ef 90       	pop	r14
     e7c:	df 90       	pop	r13
     e7e:	cf 90       	pop	r12
     e80:	08 95       	ret

00000e82 <strclr>:

void strclr(char* s)
{	
	for(int i = strlen(s); i > 0; i--)
     e82:	fc 01       	movw	r30, r24
     e84:	01 90       	ld	r0, Z+
     e86:	00 20       	and	r0, r0
     e88:	e9 f7       	brne	.-6      	; 0xe84 <strclr+0x2>
     e8a:	31 97       	sbiw	r30, 0x01	; 1
     e8c:	e8 1b       	sub	r30, r24
     e8e:	f9 0b       	sbc	r31, r25
     e90:	1e 16       	cp	r1, r30
     e92:	1f 06       	cpc	r1, r31
     e94:	34 f4       	brge	.+12     	; 0xea2 <strclr+0x20>
     e96:	e8 0f       	add	r30, r24
     e98:	f9 1f       	adc	r31, r25
		s[i-1] = 0;
     e9a:	12 92       	st	-Z, r1
	return;
}

void strclr(char* s)
{	
	for(int i = strlen(s); i > 0; i--)
     e9c:	e8 17       	cp	r30, r24
     e9e:	f9 07       	cpc	r31, r25
     ea0:	e1 f7       	brne	.-8      	; 0xe9a <strclr+0x18>
     ea2:	08 95       	ret

00000ea4 <init_GPS>:
		s[i-1] = 0;
}

void init_GPS()
{
	usart_send(1,"$PGCMD,33,0*6D\r\n");
     ea4:	66 eb       	ldi	r22, 0xB6	; 182
     ea6:	73 e0       	ldi	r23, 0x03	; 3
     ea8:	81 e0       	ldi	r24, 0x01	; 1
     eaa:	90 e0       	ldi	r25, 0x00	; 0
     eac:	e6 db       	rcall	.-2100   	; 0x67a <usart_send>
	usart_send(1,"$PMTK220,1000*1F\r\n");
     eae:	67 ec       	ldi	r22, 0xC7	; 199
     eb0:	73 e0       	ldi	r23, 0x03	; 3
     eb2:	81 e0       	ldi	r24, 0x01	; 1
     eb4:	90 e0       	ldi	r25, 0x00	; 0
     eb6:	e1 db       	rcall	.-2110   	; 0x67a <usart_send>
	usart_send(1,"$PMTK314,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0*29\r\n");
     eb8:	6a ed       	ldi	r22, 0xDA	; 218
     eba:	73 e0       	ldi	r23, 0x03	; 3
     ebc:	81 e0       	ldi	r24, 0x01	; 1
     ebe:	90 e0       	ldi	r25, 0x00	; 0
     ec0:	dc cb       	rjmp	.-2120   	; 0x67a <usart_send>
     ec2:	08 95       	ret

00000ec4 <main>:
	rec_GPS[strlen(rec_GPS)] = UDR1;
	rec_GPS_flag = 1;
}

int main(void)
{
     ec4:	cf 93       	push	r28
     ec6:	df 93       	push	r29
     ec8:	cd b7       	in	r28, 0x3d	; 61
     eca:	de b7       	in	r29, 0x3e	; 62
     ecc:	ca 5e       	subi	r28, 0xEA	; 234
     ece:	d1 40       	sbci	r29, 0x01	; 1
     ed0:	0f b6       	in	r0, 0x3f	; 63
     ed2:	f8 94       	cli
     ed4:	de bf       	out	0x3e, r29	; 62
     ed6:	0f be       	out	0x3f, r0	; 63
     ed8:	cd bf       	out	0x3d, r28	; 61
	DDRB = 0xFF;
     eda:	8f ef       	ldi	r24, 0xFF	; 255
     edc:	84 b9       	out	0x04, r24	; 4
	DDRC = 0xFF;
     ede:	87 b9       	out	0x07, r24	; 7
	DDRD = 0XFF;
     ee0:	8a b9       	out	0x0a, r24	; 10
	DDRF = 0;
     ee2:	10 ba       	out	0x10, r1	; 16
	DDRA = 0;
     ee4:	11 b8       	out	0x01, r1	; 1
	char dylos_line = 0;
	char GPS_parsed[100];
	char dylos_parsed[30];
	char buffer[100];
	char tx[150];
	usart_init(0);
     ee6:	80 e0       	ldi	r24, 0x00	; 0
     ee8:	90 e0       	ldi	r25, 0x00	; 0
     eea:	86 db       	rcall	.-2292   	; 0x5f8 <usart_init>
	usart_init(1);
     eec:	81 e0       	ldi	r24, 0x01	; 1
     eee:	90 e0       	ldi	r25, 0x00	; 0
     ef0:	83 db       	rcall	.-2298   	; 0x5f8 <usart_init>
	usart_init(2);
     ef2:	82 e0       	ldi	r24, 0x02	; 2
     ef4:	90 e0       	ldi	r25, 0x00	; 0
     ef6:	80 db       	rcall	.-2304   	; 0x5f8 <usart_init>
	usart_init(3);
     ef8:	83 e0       	ldi	r24, 0x03	; 3
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	7d db       	rcall	.-2310   	; 0x5f8 <usart_init>
	init_GPS();
     efe:	d2 df       	rcall	.-92     	; 0xea4 <init_GPS>
	int a = 0;
	sei();
     f00:	78 94       	sei
	DDRF = 0;
	DDRA = 0;
	char GPS[100];
	char dylos[10];
	char GPS_line = 0;
	char dylos_line = 0;
     f02:	a1 2c       	mov	r10, r1
	DDRD = 0XFF;
	DDRF = 0;
	DDRA = 0;
	char GPS[100];
	char dylos[10];
	char GPS_line = 0;
     f04:	b1 2c       	mov	r11, r1
			dylos_line = 0;
		}
		
		if(GPS_line == 1)
		{
			strclr(GPS_parsed);
     f06:	8e 01       	movw	r16, r28
     f08:	01 59       	subi	r16, 0x91	; 145
     f0a:	1f 4f       	sbci	r17, 0xFF	; 255
			parse_GPS(GPS, GPS_parsed);
			GPS_line = 0;
     f0c:	91 2c       	mov	r9, r1
		}

		if(rec_GPS_flag == 1)
		{
			rec_GPS_flag = 0;
			if(rec_GPS[strlen(rec_GPS) - 1] == '\n')
     f0e:	0f 2e       	mov	r0, r31
     f10:	f0 e1       	ldi	r31, 0x10	; 16
     f12:	ef 2e       	mov	r14, r31
     f14:	f4 e0       	ldi	r31, 0x04	; 4
     f16:	ff 2e       	mov	r15, r31
     f18:	f0 2d       	mov	r31, r0
			{
				GPS_line = 1;
     f1a:	88 24       	eor	r8, r8
     f1c:	83 94       	inc	r8
    while (1) 
    {
		if(rec_dylos_flag == 1)
		{
			rec_dylos_flag = 0;
			if(rec_dylos[strlen(rec_dylos) - 1] == '\n')
     f1e:	0f 2e       	mov	r0, r31
     f20:	f4 e7       	ldi	r31, 0x74	; 116
     f22:	cf 2e       	mov	r12, r31
     f24:	f4 e0       	ldi	r31, 0x04	; 4
     f26:	df 2e       	mov	r13, r31
     f28:	f0 2d       	mov	r31, r0
	int a = 0;
	sei();

    while (1) 
    {
		if(rec_dylos_flag == 1)
     f2a:	90 91 0f 04 	lds	r25, 0x040F
     f2e:	91 30       	cpi	r25, 0x01	; 1
     f30:	e1 f4       	brne	.+56     	; 0xf6a <main+0xa6>
		{
			rec_dylos_flag = 0;
     f32:	90 92 0f 04 	sts	0x040F, r9
			if(rec_dylos[strlen(rec_dylos) - 1] == '\n')
     f36:	f6 01       	movw	r30, r12
     f38:	01 90       	ld	r0, Z+
     f3a:	00 20       	and	r0, r0
     f3c:	e9 f7       	brne	.-6      	; 0xf38 <main+0x74>
     f3e:	31 97       	sbiw	r30, 0x01	; 1
     f40:	af 01       	movw	r20, r30
     f42:	44 57       	subi	r20, 0x74	; 116
     f44:	54 40       	sbci	r21, 0x04	; 4
     f46:	da 01       	movw	r26, r20
     f48:	ad 58       	subi	r26, 0x8D	; 141
     f4a:	bb 4f       	sbci	r27, 0xFB	; 251
     f4c:	8c 91       	ld	r24, X
     f4e:	8a 30       	cpi	r24, 0x0A	; 10
     f50:	61 f4       	brne	.+24     	; 0xf6a <main+0xa6>
			{
				dylos_line = 1;
				strncpy(dylos, rec_dylos, strlen(rec_dylos));
     f52:	b6 01       	movw	r22, r12
     f54:	ce 01       	movw	r24, r28
     f56:	8b 59       	subi	r24, 0x9B	; 155
     f58:	9f 4f       	sbci	r25, 0xFF	; 255
     f5a:	be d2       	rcall	.+1404   	; 0x14d8 <strncpy>
				strclr(rec_dylos);			
     f5c:	c6 01       	movw	r24, r12
     f5e:	91 df       	rcall	.-222    	; 0xe82 <strclr>
			}
		}

		if(rec_GPS_flag == 1)
     f60:	80 91 0e 04 	lds	r24, 0x040E
     f64:	81 30       	cpi	r24, 0x01	; 1
     f66:	21 f5       	brne	.+72     	; 0xfb0 <main+0xec>
     f68:	7b c0       	rjmp	.+246    	; 0x1060 <main+0x19c>
     f6a:	90 91 0e 04 	lds	r25, 0x040E
     f6e:	91 30       	cpi	r25, 0x01	; 1
     f70:	d1 f4       	brne	.+52     	; 0xfa6 <main+0xe2>
		{
			rec_GPS_flag = 0;
     f72:	90 92 0e 04 	sts	0x040E, r9
			if(rec_GPS[strlen(rec_GPS) - 1] == '\n')
     f76:	f7 01       	movw	r30, r14
     f78:	01 90       	ld	r0, Z+
     f7a:	00 20       	and	r0, r0
     f7c:	e9 f7       	brne	.-6      	; 0xf78 <main+0xb4>
     f7e:	31 97       	sbiw	r30, 0x01	; 1
     f80:	af 01       	movw	r20, r30
     f82:	40 51       	subi	r20, 0x10	; 16
     f84:	54 40       	sbci	r21, 0x04	; 4
     f86:	da 01       	movw	r26, r20
     f88:	a1 5f       	subi	r26, 0xF1	; 241
     f8a:	bb 4f       	sbci	r27, 0xFB	; 251
     f8c:	8c 91       	ld	r24, X
     f8e:	8a 30       	cpi	r24, 0x0A	; 10
     f90:	51 f4       	brne	.+20     	; 0xfa6 <main+0xe2>
			{
				GPS_line = 1;
				strncpy(GPS, rec_GPS, strlen(rec_GPS));
     f92:	b7 01       	movw	r22, r14
     f94:	ce 01       	movw	r24, r28
     f96:	01 96       	adiw	r24, 0x01	; 1
     f98:	9f d2       	rcall	.+1342   	; 0x14d8 <strncpy>
				strclr(rec_GPS);
     f9a:	c7 01       	movw	r24, r14
     f9c:	72 df       	rcall	.-284    	; 0xe82 <strclr>
			}
		}
		
		if(dylos_line == 1)
     f9e:	81 e0       	ldi	r24, 0x01	; 1
     fa0:	a8 12       	cpse	r10, r24
     fa2:	15 c0       	rjmp	.+42     	; 0xfce <main+0x10a>
     fa4:	04 c0       	rjmp	.+8      	; 0xfae <main+0xea>
     fa6:	81 e0       	ldi	r24, 0x01	; 1
     fa8:	a8 12       	cpse	r10, r24
     faa:	0e c0       	rjmp	.+28     	; 0xfc8 <main+0x104>
     fac:	01 c0       	rjmp	.+2      	; 0xfb0 <main+0xec>
		if(rec_GPS_flag == 1)
		{
			rec_GPS_flag = 0;
			if(rec_GPS[strlen(rec_GPS) - 1] == '\n')
			{
				GPS_line = 1;
     fae:	b8 2c       	mov	r11, r8
			}
		}
		
		if(dylos_line == 1)
		{
			strclr(dylos_parsed);
     fb0:	ce 01       	movw	r24, r28
     fb2:	8d 52       	subi	r24, 0x2D	; 45
     fb4:	9f 4f       	sbci	r25, 0xFF	; 255
     fb6:	65 df       	rcall	.-310    	; 0xe82 <strclr>
			parse_dylos(dylos, dylos_parsed);
     fb8:	be 01       	movw	r22, r28
     fba:	6d 52       	subi	r22, 0x2D	; 45
     fbc:	7f 4f       	sbci	r23, 0xFF	; 255
     fbe:	ce 01       	movw	r24, r28
     fc0:	8b 59       	subi	r24, 0x9B	; 155
     fc2:	9f 4f       	sbci	r25, 0xFF	; 255
     fc4:	f0 de       	rcall	.-544    	; 0xda6 <parse_dylos>
			dylos_line = 0;
     fc6:	a9 2c       	mov	r10, r9
		}
		
		if(GPS_line == 1)
     fc8:	81 e0       	ldi	r24, 0x01	; 1
     fca:	b8 12       	cpse	r11, r24
     fcc:	ae cf       	rjmp	.-164    	; 0xf2a <main+0x66>
		{
			strclr(GPS_parsed);
     fce:	c8 01       	movw	r24, r16
     fd0:	58 df       	rcall	.-336    	; 0xe82 <strclr>
			parse_GPS(GPS, GPS_parsed);
     fd2:	b8 01       	movw	r22, r16
     fd4:	ce 01       	movw	r24, r28
     fd6:	01 96       	adiw	r24, 0x01	; 1
     fd8:	d6 db       	rcall	.-2132   	; 0x786 <parse_GPS>
			GPS_line = 0;
			strncpy(tx, GPS_parsed, strlen(GPS_parsed));
     fda:	f8 01       	movw	r30, r16
     fdc:	01 90       	ld	r0, Z+
     fde:	00 20       	and	r0, r0
     fe0:	e9 f7       	brne	.-6      	; 0xfdc <main+0x118>
     fe2:	31 97       	sbiw	r30, 0x01	; 1
     fe4:	af 01       	movw	r20, r30
     fe6:	40 1b       	sub	r20, r16
     fe8:	51 0b       	sbc	r21, r17
     fea:	b8 01       	movw	r22, r16
     fec:	ce 01       	movw	r24, r28
     fee:	8b 5a       	subi	r24, 0xAB	; 171
     ff0:	9e 4f       	sbci	r25, 0xFE	; 254
     ff2:	72 d2       	rcall	.+1252   	; 0x14d8 <strncpy>
			strcat(tx, dylos_parsed);
     ff4:	be 01       	movw	r22, r28
     ff6:	6d 52       	subi	r22, 0x2D	; 45
     ff8:	7f 4f       	sbci	r23, 0xFF	; 255
     ffa:	ce 01       	movw	r24, r28
     ffc:	8b 5a       	subi	r24, 0xAB	; 171
     ffe:	9e 4f       	sbci	r25, 0xFE	; 254
    1000:	60 d2       	rcall	.+1216   	; 0x14c2 <strcat>
			read_temp(buffer);
    1002:	ce 01       	movw	r24, r28
    1004:	8f 50       	subi	r24, 0x0F	; 15
    1006:	9f 4f       	sbci	r25, 0xFF	; 255
    1008:	dd d8       	rcall	.-3654   	; 0x1c4 <read_temp>
			read_MQ2(buffer);
    100a:	ce 01       	movw	r24, r28
    100c:	8f 50       	subi	r24, 0x0F	; 15
    100e:	9f 4f       	sbci	r25, 0xFF	; 255
    1010:	3f d9       	rcall	.-3458   	; 0x290 <read_MQ2>
			read_MQ5(buffer);
    1012:	ce 01       	movw	r24, r28
    1014:	8f 50       	subi	r24, 0x0F	; 15
    1016:	9f 4f       	sbci	r25, 0xFF	; 255
    1018:	cf d9       	rcall	.-3170   	; 0x3b8 <read_MQ5>
			read_MQ7(buffer);
    101a:	ce 01       	movw	r24, r28
    101c:	8f 50       	subi	r24, 0x0F	; 15
    101e:	9f 4f       	sbci	r25, 0xFF	; 255
    1020:	5c da       	rcall	.-2888   	; 0x4da <read_MQ7>
			strcat(tx, buffer);
    1022:	be 01       	movw	r22, r28
    1024:	6f 50       	subi	r22, 0x0F	; 15
    1026:	7f 4f       	sbci	r23, 0xFF	; 255
    1028:	ce 01       	movw	r24, r28
    102a:	8b 5a       	subi	r24, 0xAB	; 171
    102c:	9e 4f       	sbci	r25, 0xFE	; 254
    102e:	49 d2       	rcall	.+1170   	; 0x14c2 <strcat>
			usart_send(3, tx);
    1030:	be 01       	movw	r22, r28
    1032:	6b 5a       	subi	r22, 0xAB	; 171
    1034:	7e 4f       	sbci	r23, 0xFE	; 254
    1036:	83 e0       	ldi	r24, 0x03	; 3
    1038:	90 e0       	ldi	r25, 0x00	; 0
    103a:	1f db       	rcall	.-2498   	; 0x67a <usart_send>
			strclr(tx);
    103c:	ce 01       	movw	r24, r28
    103e:	8b 5a       	subi	r24, 0xAB	; 171
    1040:	9e 4f       	sbci	r25, 0xFE	; 254
    1042:	1f df       	rcall	.-450    	; 0xe82 <strclr>
			strclr(buffer);
    1044:	ce 01       	movw	r24, r28
    1046:	8f 50       	subi	r24, 0x0F	; 15
    1048:	9f 4f       	sbci	r25, 0xFF	; 255
    104a:	1b df       	rcall	.-458    	; 0xe82 <strclr>
		
		if(GPS_line == 1)
		{
			strclr(GPS_parsed);
			parse_GPS(GPS, GPS_parsed);
			GPS_line = 0;
    104c:	b9 2c       	mov	r11, r9
    104e:	6d cf       	rjmp	.-294    	; 0xf2a <main+0x66>
		{
			rec_GPS_flag = 0;
			if(rec_GPS[strlen(rec_GPS) - 1] == '\n')
			{
				GPS_line = 1;
				strncpy(GPS, rec_GPS, strlen(rec_GPS));
    1050:	b7 01       	movw	r22, r14
    1052:	ce 01       	movw	r24, r28
    1054:	01 96       	adiw	r24, 0x01	; 1
    1056:	40 d2       	rcall	.+1152   	; 0x14d8 <strncpy>
				strclr(rec_GPS);
    1058:	c7 01       	movw	r24, r14
    105a:	13 df       	rcall	.-474    	; 0xe82 <strclr>
		if(rec_GPS_flag == 1)
		{
			rec_GPS_flag = 0;
			if(rec_GPS[strlen(rec_GPS) - 1] == '\n')
			{
				GPS_line = 1;
    105c:	b8 2c       	mov	r11, r8
    105e:	a8 cf       	rjmp	.-176    	; 0xfb0 <main+0xec>
			}
		}

		if(rec_GPS_flag == 1)
		{
			rec_GPS_flag = 0;
    1060:	90 92 0e 04 	sts	0x040E, r9
			if(rec_GPS[strlen(rec_GPS) - 1] == '\n')
    1064:	f7 01       	movw	r30, r14
    1066:	01 90       	ld	r0, Z+
    1068:	00 20       	and	r0, r0
    106a:	e9 f7       	brne	.-6      	; 0x1066 <main+0x1a2>
    106c:	31 97       	sbiw	r30, 0x01	; 1
    106e:	af 01       	movw	r20, r30
    1070:	40 51       	subi	r20, 0x10	; 16
    1072:	54 40       	sbci	r21, 0x04	; 4
    1074:	da 01       	movw	r26, r20
    1076:	a1 5f       	subi	r26, 0xF1	; 241
    1078:	bb 4f       	sbci	r27, 0xFB	; 251
    107a:	8c 91       	ld	r24, X
    107c:	8a 30       	cpi	r24, 0x0A	; 10
    107e:	41 f3       	breq	.-48     	; 0x1050 <main+0x18c>
		if(rec_dylos_flag == 1)
		{
			rec_dylos_flag = 0;
			if(rec_dylos[strlen(rec_dylos) - 1] == '\n')
			{
				dylos_line = 1;
    1080:	a8 2c       	mov	r10, r8
    1082:	91 cf       	rjmp	.-222    	; 0xfa6 <main+0xe2>

00001084 <__subsf3>:
    1084:	50 58       	subi	r21, 0x80	; 128

00001086 <__addsf3>:
    1086:	bb 27       	eor	r27, r27
    1088:	aa 27       	eor	r26, r26
    108a:	0e d0       	rcall	.+28     	; 0x10a8 <__addsf3x>
    108c:	4d c1       	rjmp	.+666    	; 0x1328 <__fp_round>
    108e:	3e d1       	rcall	.+636    	; 0x130c <__fp_pscA>
    1090:	30 f0       	brcs	.+12     	; 0x109e <__addsf3+0x18>
    1092:	43 d1       	rcall	.+646    	; 0x131a <__fp_pscB>
    1094:	20 f0       	brcs	.+8      	; 0x109e <__addsf3+0x18>
    1096:	31 f4       	brne	.+12     	; 0x10a4 <__addsf3+0x1e>
    1098:	9f 3f       	cpi	r25, 0xFF	; 255
    109a:	11 f4       	brne	.+4      	; 0x10a0 <__addsf3+0x1a>
    109c:	1e f4       	brtc	.+6      	; 0x10a4 <__addsf3+0x1e>
    109e:	33 c1       	rjmp	.+614    	; 0x1306 <__fp_nan>
    10a0:	0e f4       	brtc	.+2      	; 0x10a4 <__addsf3+0x1e>
    10a2:	e0 95       	com	r30
    10a4:	e7 fb       	bst	r30, 7
    10a6:	29 c1       	rjmp	.+594    	; 0x12fa <__fp_inf>

000010a8 <__addsf3x>:
    10a8:	e9 2f       	mov	r30, r25
    10aa:	4f d1       	rcall	.+670    	; 0x134a <__fp_split3>
    10ac:	80 f3       	brcs	.-32     	; 0x108e <__addsf3+0x8>
    10ae:	ba 17       	cp	r27, r26
    10b0:	62 07       	cpc	r22, r18
    10b2:	73 07       	cpc	r23, r19
    10b4:	84 07       	cpc	r24, r20
    10b6:	95 07       	cpc	r25, r21
    10b8:	18 f0       	brcs	.+6      	; 0x10c0 <__addsf3x+0x18>
    10ba:	71 f4       	brne	.+28     	; 0x10d8 <__addsf3x+0x30>
    10bc:	9e f5       	brtc	.+102    	; 0x1124 <__addsf3x+0x7c>
    10be:	67 c1       	rjmp	.+718    	; 0x138e <__fp_zero>
    10c0:	0e f4       	brtc	.+2      	; 0x10c4 <__addsf3x+0x1c>
    10c2:	e0 95       	com	r30
    10c4:	0b 2e       	mov	r0, r27
    10c6:	ba 2f       	mov	r27, r26
    10c8:	a0 2d       	mov	r26, r0
    10ca:	0b 01       	movw	r0, r22
    10cc:	b9 01       	movw	r22, r18
    10ce:	90 01       	movw	r18, r0
    10d0:	0c 01       	movw	r0, r24
    10d2:	ca 01       	movw	r24, r20
    10d4:	a0 01       	movw	r20, r0
    10d6:	11 24       	eor	r1, r1
    10d8:	ff 27       	eor	r31, r31
    10da:	59 1b       	sub	r21, r25
    10dc:	99 f0       	breq	.+38     	; 0x1104 <__addsf3x+0x5c>
    10de:	59 3f       	cpi	r21, 0xF9	; 249
    10e0:	50 f4       	brcc	.+20     	; 0x10f6 <__addsf3x+0x4e>
    10e2:	50 3e       	cpi	r21, 0xE0	; 224
    10e4:	68 f1       	brcs	.+90     	; 0x1140 <__addsf3x+0x98>
    10e6:	1a 16       	cp	r1, r26
    10e8:	f0 40       	sbci	r31, 0x00	; 0
    10ea:	a2 2f       	mov	r26, r18
    10ec:	23 2f       	mov	r18, r19
    10ee:	34 2f       	mov	r19, r20
    10f0:	44 27       	eor	r20, r20
    10f2:	58 5f       	subi	r21, 0xF8	; 248
    10f4:	f3 cf       	rjmp	.-26     	; 0x10dc <__addsf3x+0x34>
    10f6:	46 95       	lsr	r20
    10f8:	37 95       	ror	r19
    10fa:	27 95       	ror	r18
    10fc:	a7 95       	ror	r26
    10fe:	f0 40       	sbci	r31, 0x00	; 0
    1100:	53 95       	inc	r21
    1102:	c9 f7       	brne	.-14     	; 0x10f6 <__addsf3x+0x4e>
    1104:	7e f4       	brtc	.+30     	; 0x1124 <__addsf3x+0x7c>
    1106:	1f 16       	cp	r1, r31
    1108:	ba 0b       	sbc	r27, r26
    110a:	62 0b       	sbc	r22, r18
    110c:	73 0b       	sbc	r23, r19
    110e:	84 0b       	sbc	r24, r20
    1110:	ba f0       	brmi	.+46     	; 0x1140 <__addsf3x+0x98>
    1112:	91 50       	subi	r25, 0x01	; 1
    1114:	a1 f0       	breq	.+40     	; 0x113e <__addsf3x+0x96>
    1116:	ff 0f       	add	r31, r31
    1118:	bb 1f       	adc	r27, r27
    111a:	66 1f       	adc	r22, r22
    111c:	77 1f       	adc	r23, r23
    111e:	88 1f       	adc	r24, r24
    1120:	c2 f7       	brpl	.-16     	; 0x1112 <__addsf3x+0x6a>
    1122:	0e c0       	rjmp	.+28     	; 0x1140 <__addsf3x+0x98>
    1124:	ba 0f       	add	r27, r26
    1126:	62 1f       	adc	r22, r18
    1128:	73 1f       	adc	r23, r19
    112a:	84 1f       	adc	r24, r20
    112c:	48 f4       	brcc	.+18     	; 0x1140 <__addsf3x+0x98>
    112e:	87 95       	ror	r24
    1130:	77 95       	ror	r23
    1132:	67 95       	ror	r22
    1134:	b7 95       	ror	r27
    1136:	f7 95       	ror	r31
    1138:	9e 3f       	cpi	r25, 0xFE	; 254
    113a:	08 f0       	brcs	.+2      	; 0x113e <__addsf3x+0x96>
    113c:	b3 cf       	rjmp	.-154    	; 0x10a4 <__addsf3+0x1e>
    113e:	93 95       	inc	r25
    1140:	88 0f       	add	r24, r24
    1142:	08 f0       	brcs	.+2      	; 0x1146 <__addsf3x+0x9e>
    1144:	99 27       	eor	r25, r25
    1146:	ee 0f       	add	r30, r30
    1148:	97 95       	ror	r25
    114a:	87 95       	ror	r24
    114c:	08 95       	ret

0000114e <__divsf3>:
    114e:	0c d0       	rcall	.+24     	; 0x1168 <__divsf3x>
    1150:	eb c0       	rjmp	.+470    	; 0x1328 <__fp_round>
    1152:	e3 d0       	rcall	.+454    	; 0x131a <__fp_pscB>
    1154:	40 f0       	brcs	.+16     	; 0x1166 <__divsf3+0x18>
    1156:	da d0       	rcall	.+436    	; 0x130c <__fp_pscA>
    1158:	30 f0       	brcs	.+12     	; 0x1166 <__divsf3+0x18>
    115a:	21 f4       	brne	.+8      	; 0x1164 <__divsf3+0x16>
    115c:	5f 3f       	cpi	r21, 0xFF	; 255
    115e:	19 f0       	breq	.+6      	; 0x1166 <__divsf3+0x18>
    1160:	cc c0       	rjmp	.+408    	; 0x12fa <__fp_inf>
    1162:	51 11       	cpse	r21, r1
    1164:	15 c1       	rjmp	.+554    	; 0x1390 <__fp_szero>
    1166:	cf c0       	rjmp	.+414    	; 0x1306 <__fp_nan>

00001168 <__divsf3x>:
    1168:	f0 d0       	rcall	.+480    	; 0x134a <__fp_split3>
    116a:	98 f3       	brcs	.-26     	; 0x1152 <__divsf3+0x4>

0000116c <__divsf3_pse>:
    116c:	99 23       	and	r25, r25
    116e:	c9 f3       	breq	.-14     	; 0x1162 <__divsf3+0x14>
    1170:	55 23       	and	r21, r21
    1172:	b1 f3       	breq	.-20     	; 0x1160 <__divsf3+0x12>
    1174:	95 1b       	sub	r25, r21
    1176:	55 0b       	sbc	r21, r21
    1178:	bb 27       	eor	r27, r27
    117a:	aa 27       	eor	r26, r26
    117c:	62 17       	cp	r22, r18
    117e:	73 07       	cpc	r23, r19
    1180:	84 07       	cpc	r24, r20
    1182:	38 f0       	brcs	.+14     	; 0x1192 <__divsf3_pse+0x26>
    1184:	9f 5f       	subi	r25, 0xFF	; 255
    1186:	5f 4f       	sbci	r21, 0xFF	; 255
    1188:	22 0f       	add	r18, r18
    118a:	33 1f       	adc	r19, r19
    118c:	44 1f       	adc	r20, r20
    118e:	aa 1f       	adc	r26, r26
    1190:	a9 f3       	breq	.-22     	; 0x117c <__divsf3_pse+0x10>
    1192:	33 d0       	rcall	.+102    	; 0x11fa <__divsf3_pse+0x8e>
    1194:	0e 2e       	mov	r0, r30
    1196:	3a f0       	brmi	.+14     	; 0x11a6 <__divsf3_pse+0x3a>
    1198:	e0 e8       	ldi	r30, 0x80	; 128
    119a:	30 d0       	rcall	.+96     	; 0x11fc <__divsf3_pse+0x90>
    119c:	91 50       	subi	r25, 0x01	; 1
    119e:	50 40       	sbci	r21, 0x00	; 0
    11a0:	e6 95       	lsr	r30
    11a2:	00 1c       	adc	r0, r0
    11a4:	ca f7       	brpl	.-14     	; 0x1198 <__divsf3_pse+0x2c>
    11a6:	29 d0       	rcall	.+82     	; 0x11fa <__divsf3_pse+0x8e>
    11a8:	fe 2f       	mov	r31, r30
    11aa:	27 d0       	rcall	.+78     	; 0x11fa <__divsf3_pse+0x8e>
    11ac:	66 0f       	add	r22, r22
    11ae:	77 1f       	adc	r23, r23
    11b0:	88 1f       	adc	r24, r24
    11b2:	bb 1f       	adc	r27, r27
    11b4:	26 17       	cp	r18, r22
    11b6:	37 07       	cpc	r19, r23
    11b8:	48 07       	cpc	r20, r24
    11ba:	ab 07       	cpc	r26, r27
    11bc:	b0 e8       	ldi	r27, 0x80	; 128
    11be:	09 f0       	breq	.+2      	; 0x11c2 <__divsf3_pse+0x56>
    11c0:	bb 0b       	sbc	r27, r27
    11c2:	80 2d       	mov	r24, r0
    11c4:	bf 01       	movw	r22, r30
    11c6:	ff 27       	eor	r31, r31
    11c8:	93 58       	subi	r25, 0x83	; 131
    11ca:	5f 4f       	sbci	r21, 0xFF	; 255
    11cc:	2a f0       	brmi	.+10     	; 0x11d8 <__divsf3_pse+0x6c>
    11ce:	9e 3f       	cpi	r25, 0xFE	; 254
    11d0:	51 05       	cpc	r21, r1
    11d2:	68 f0       	brcs	.+26     	; 0x11ee <__divsf3_pse+0x82>
    11d4:	92 c0       	rjmp	.+292    	; 0x12fa <__fp_inf>
    11d6:	dc c0       	rjmp	.+440    	; 0x1390 <__fp_szero>
    11d8:	5f 3f       	cpi	r21, 0xFF	; 255
    11da:	ec f3       	brlt	.-6      	; 0x11d6 <__divsf3_pse+0x6a>
    11dc:	98 3e       	cpi	r25, 0xE8	; 232
    11de:	dc f3       	brlt	.-10     	; 0x11d6 <__divsf3_pse+0x6a>
    11e0:	86 95       	lsr	r24
    11e2:	77 95       	ror	r23
    11e4:	67 95       	ror	r22
    11e6:	b7 95       	ror	r27
    11e8:	f7 95       	ror	r31
    11ea:	9f 5f       	subi	r25, 0xFF	; 255
    11ec:	c9 f7       	brne	.-14     	; 0x11e0 <__divsf3_pse+0x74>
    11ee:	88 0f       	add	r24, r24
    11f0:	91 1d       	adc	r25, r1
    11f2:	96 95       	lsr	r25
    11f4:	87 95       	ror	r24
    11f6:	97 f9       	bld	r25, 7
    11f8:	08 95       	ret
    11fa:	e1 e0       	ldi	r30, 0x01	; 1
    11fc:	66 0f       	add	r22, r22
    11fe:	77 1f       	adc	r23, r23
    1200:	88 1f       	adc	r24, r24
    1202:	bb 1f       	adc	r27, r27
    1204:	62 17       	cp	r22, r18
    1206:	73 07       	cpc	r23, r19
    1208:	84 07       	cpc	r24, r20
    120a:	ba 07       	cpc	r27, r26
    120c:	20 f0       	brcs	.+8      	; 0x1216 <__divsf3_pse+0xaa>
    120e:	62 1b       	sub	r22, r18
    1210:	73 0b       	sbc	r23, r19
    1212:	84 0b       	sbc	r24, r20
    1214:	ba 0b       	sbc	r27, r26
    1216:	ee 1f       	adc	r30, r30
    1218:	88 f7       	brcc	.-30     	; 0x11fc <__divsf3_pse+0x90>
    121a:	e0 95       	com	r30
    121c:	08 95       	ret

0000121e <__fixsfsi>:
    121e:	04 d0       	rcall	.+8      	; 0x1228 <__fixunssfsi>
    1220:	68 94       	set
    1222:	b1 11       	cpse	r27, r1
    1224:	b5 c0       	rjmp	.+362    	; 0x1390 <__fp_szero>
    1226:	08 95       	ret

00001228 <__fixunssfsi>:
    1228:	98 d0       	rcall	.+304    	; 0x135a <__fp_splitA>
    122a:	88 f0       	brcs	.+34     	; 0x124e <__fixunssfsi+0x26>
    122c:	9f 57       	subi	r25, 0x7F	; 127
    122e:	90 f0       	brcs	.+36     	; 0x1254 <__fixunssfsi+0x2c>
    1230:	b9 2f       	mov	r27, r25
    1232:	99 27       	eor	r25, r25
    1234:	b7 51       	subi	r27, 0x17	; 23
    1236:	a0 f0       	brcs	.+40     	; 0x1260 <__fixunssfsi+0x38>
    1238:	d1 f0       	breq	.+52     	; 0x126e <__fixunssfsi+0x46>
    123a:	66 0f       	add	r22, r22
    123c:	77 1f       	adc	r23, r23
    123e:	88 1f       	adc	r24, r24
    1240:	99 1f       	adc	r25, r25
    1242:	1a f0       	brmi	.+6      	; 0x124a <__fixunssfsi+0x22>
    1244:	ba 95       	dec	r27
    1246:	c9 f7       	brne	.-14     	; 0x123a <__fixunssfsi+0x12>
    1248:	12 c0       	rjmp	.+36     	; 0x126e <__fixunssfsi+0x46>
    124a:	b1 30       	cpi	r27, 0x01	; 1
    124c:	81 f0       	breq	.+32     	; 0x126e <__fixunssfsi+0x46>
    124e:	9f d0       	rcall	.+318    	; 0x138e <__fp_zero>
    1250:	b1 e0       	ldi	r27, 0x01	; 1
    1252:	08 95       	ret
    1254:	9c c0       	rjmp	.+312    	; 0x138e <__fp_zero>
    1256:	67 2f       	mov	r22, r23
    1258:	78 2f       	mov	r23, r24
    125a:	88 27       	eor	r24, r24
    125c:	b8 5f       	subi	r27, 0xF8	; 248
    125e:	39 f0       	breq	.+14     	; 0x126e <__fixunssfsi+0x46>
    1260:	b9 3f       	cpi	r27, 0xF9	; 249
    1262:	cc f3       	brlt	.-14     	; 0x1256 <__fixunssfsi+0x2e>
    1264:	86 95       	lsr	r24
    1266:	77 95       	ror	r23
    1268:	67 95       	ror	r22
    126a:	b3 95       	inc	r27
    126c:	d9 f7       	brne	.-10     	; 0x1264 <__fixunssfsi+0x3c>
    126e:	3e f4       	brtc	.+14     	; 0x127e <__fixunssfsi+0x56>
    1270:	90 95       	com	r25
    1272:	80 95       	com	r24
    1274:	70 95       	com	r23
    1276:	61 95       	neg	r22
    1278:	7f 4f       	sbci	r23, 0xFF	; 255
    127a:	8f 4f       	sbci	r24, 0xFF	; 255
    127c:	9f 4f       	sbci	r25, 0xFF	; 255
    127e:	08 95       	ret

00001280 <__floatunsisf>:
    1280:	e8 94       	clt
    1282:	09 c0       	rjmp	.+18     	; 0x1296 <__floatsisf+0x12>

00001284 <__floatsisf>:
    1284:	97 fb       	bst	r25, 7
    1286:	3e f4       	brtc	.+14     	; 0x1296 <__floatsisf+0x12>
    1288:	90 95       	com	r25
    128a:	80 95       	com	r24
    128c:	70 95       	com	r23
    128e:	61 95       	neg	r22
    1290:	7f 4f       	sbci	r23, 0xFF	; 255
    1292:	8f 4f       	sbci	r24, 0xFF	; 255
    1294:	9f 4f       	sbci	r25, 0xFF	; 255
    1296:	99 23       	and	r25, r25
    1298:	a9 f0       	breq	.+42     	; 0x12c4 <__floatsisf+0x40>
    129a:	f9 2f       	mov	r31, r25
    129c:	96 e9       	ldi	r25, 0x96	; 150
    129e:	bb 27       	eor	r27, r27
    12a0:	93 95       	inc	r25
    12a2:	f6 95       	lsr	r31
    12a4:	87 95       	ror	r24
    12a6:	77 95       	ror	r23
    12a8:	67 95       	ror	r22
    12aa:	b7 95       	ror	r27
    12ac:	f1 11       	cpse	r31, r1
    12ae:	f8 cf       	rjmp	.-16     	; 0x12a0 <__floatsisf+0x1c>
    12b0:	fa f4       	brpl	.+62     	; 0x12f0 <__floatsisf+0x6c>
    12b2:	bb 0f       	add	r27, r27
    12b4:	11 f4       	brne	.+4      	; 0x12ba <__floatsisf+0x36>
    12b6:	60 ff       	sbrs	r22, 0
    12b8:	1b c0       	rjmp	.+54     	; 0x12f0 <__floatsisf+0x6c>
    12ba:	6f 5f       	subi	r22, 0xFF	; 255
    12bc:	7f 4f       	sbci	r23, 0xFF	; 255
    12be:	8f 4f       	sbci	r24, 0xFF	; 255
    12c0:	9f 4f       	sbci	r25, 0xFF	; 255
    12c2:	16 c0       	rjmp	.+44     	; 0x12f0 <__floatsisf+0x6c>
    12c4:	88 23       	and	r24, r24
    12c6:	11 f0       	breq	.+4      	; 0x12cc <__floatsisf+0x48>
    12c8:	96 e9       	ldi	r25, 0x96	; 150
    12ca:	11 c0       	rjmp	.+34     	; 0x12ee <__floatsisf+0x6a>
    12cc:	77 23       	and	r23, r23
    12ce:	21 f0       	breq	.+8      	; 0x12d8 <__floatsisf+0x54>
    12d0:	9e e8       	ldi	r25, 0x8E	; 142
    12d2:	87 2f       	mov	r24, r23
    12d4:	76 2f       	mov	r23, r22
    12d6:	05 c0       	rjmp	.+10     	; 0x12e2 <__floatsisf+0x5e>
    12d8:	66 23       	and	r22, r22
    12da:	71 f0       	breq	.+28     	; 0x12f8 <__floatsisf+0x74>
    12dc:	96 e8       	ldi	r25, 0x86	; 134
    12de:	86 2f       	mov	r24, r22
    12e0:	70 e0       	ldi	r23, 0x00	; 0
    12e2:	60 e0       	ldi	r22, 0x00	; 0
    12e4:	2a f0       	brmi	.+10     	; 0x12f0 <__floatsisf+0x6c>
    12e6:	9a 95       	dec	r25
    12e8:	66 0f       	add	r22, r22
    12ea:	77 1f       	adc	r23, r23
    12ec:	88 1f       	adc	r24, r24
    12ee:	da f7       	brpl	.-10     	; 0x12e6 <__floatsisf+0x62>
    12f0:	88 0f       	add	r24, r24
    12f2:	96 95       	lsr	r25
    12f4:	87 95       	ror	r24
    12f6:	97 f9       	bld	r25, 7
    12f8:	08 95       	ret

000012fa <__fp_inf>:
    12fa:	97 f9       	bld	r25, 7
    12fc:	9f 67       	ori	r25, 0x7F	; 127
    12fe:	80 e8       	ldi	r24, 0x80	; 128
    1300:	70 e0       	ldi	r23, 0x00	; 0
    1302:	60 e0       	ldi	r22, 0x00	; 0
    1304:	08 95       	ret

00001306 <__fp_nan>:
    1306:	9f ef       	ldi	r25, 0xFF	; 255
    1308:	80 ec       	ldi	r24, 0xC0	; 192
    130a:	08 95       	ret

0000130c <__fp_pscA>:
    130c:	00 24       	eor	r0, r0
    130e:	0a 94       	dec	r0
    1310:	16 16       	cp	r1, r22
    1312:	17 06       	cpc	r1, r23
    1314:	18 06       	cpc	r1, r24
    1316:	09 06       	cpc	r0, r25
    1318:	08 95       	ret

0000131a <__fp_pscB>:
    131a:	00 24       	eor	r0, r0
    131c:	0a 94       	dec	r0
    131e:	12 16       	cp	r1, r18
    1320:	13 06       	cpc	r1, r19
    1322:	14 06       	cpc	r1, r20
    1324:	05 06       	cpc	r0, r21
    1326:	08 95       	ret

00001328 <__fp_round>:
    1328:	09 2e       	mov	r0, r25
    132a:	03 94       	inc	r0
    132c:	00 0c       	add	r0, r0
    132e:	11 f4       	brne	.+4      	; 0x1334 <__fp_round+0xc>
    1330:	88 23       	and	r24, r24
    1332:	52 f0       	brmi	.+20     	; 0x1348 <__fp_round+0x20>
    1334:	bb 0f       	add	r27, r27
    1336:	40 f4       	brcc	.+16     	; 0x1348 <__fp_round+0x20>
    1338:	bf 2b       	or	r27, r31
    133a:	11 f4       	brne	.+4      	; 0x1340 <__fp_round+0x18>
    133c:	60 ff       	sbrs	r22, 0
    133e:	04 c0       	rjmp	.+8      	; 0x1348 <__fp_round+0x20>
    1340:	6f 5f       	subi	r22, 0xFF	; 255
    1342:	7f 4f       	sbci	r23, 0xFF	; 255
    1344:	8f 4f       	sbci	r24, 0xFF	; 255
    1346:	9f 4f       	sbci	r25, 0xFF	; 255
    1348:	08 95       	ret

0000134a <__fp_split3>:
    134a:	57 fd       	sbrc	r21, 7
    134c:	90 58       	subi	r25, 0x80	; 128
    134e:	44 0f       	add	r20, r20
    1350:	55 1f       	adc	r21, r21
    1352:	59 f0       	breq	.+22     	; 0x136a <__fp_splitA+0x10>
    1354:	5f 3f       	cpi	r21, 0xFF	; 255
    1356:	71 f0       	breq	.+28     	; 0x1374 <__fp_splitA+0x1a>
    1358:	47 95       	ror	r20

0000135a <__fp_splitA>:
    135a:	88 0f       	add	r24, r24
    135c:	97 fb       	bst	r25, 7
    135e:	99 1f       	adc	r25, r25
    1360:	61 f0       	breq	.+24     	; 0x137a <__fp_splitA+0x20>
    1362:	9f 3f       	cpi	r25, 0xFF	; 255
    1364:	79 f0       	breq	.+30     	; 0x1384 <__fp_splitA+0x2a>
    1366:	87 95       	ror	r24
    1368:	08 95       	ret
    136a:	12 16       	cp	r1, r18
    136c:	13 06       	cpc	r1, r19
    136e:	14 06       	cpc	r1, r20
    1370:	55 1f       	adc	r21, r21
    1372:	f2 cf       	rjmp	.-28     	; 0x1358 <__fp_split3+0xe>
    1374:	46 95       	lsr	r20
    1376:	f1 df       	rcall	.-30     	; 0x135a <__fp_splitA>
    1378:	08 c0       	rjmp	.+16     	; 0x138a <__fp_splitA+0x30>
    137a:	16 16       	cp	r1, r22
    137c:	17 06       	cpc	r1, r23
    137e:	18 06       	cpc	r1, r24
    1380:	99 1f       	adc	r25, r25
    1382:	f1 cf       	rjmp	.-30     	; 0x1366 <__fp_splitA+0xc>
    1384:	86 95       	lsr	r24
    1386:	71 05       	cpc	r23, r1
    1388:	61 05       	cpc	r22, r1
    138a:	08 94       	sec
    138c:	08 95       	ret

0000138e <__fp_zero>:
    138e:	e8 94       	clt

00001390 <__fp_szero>:
    1390:	bb 27       	eor	r27, r27
    1392:	66 27       	eor	r22, r22
    1394:	77 27       	eor	r23, r23
    1396:	cb 01       	movw	r24, r22
    1398:	97 f9       	bld	r25, 7
    139a:	08 95       	ret

0000139c <__gesf2>:
    139c:	66 d0       	rcall	.+204    	; 0x146a <__fp_cmp>
    139e:	08 f4       	brcc	.+2      	; 0x13a2 <__gesf2+0x6>
    13a0:	8f ef       	ldi	r24, 0xFF	; 255
    13a2:	08 95       	ret

000013a4 <__mulsf3>:
    13a4:	0b d0       	rcall	.+22     	; 0x13bc <__mulsf3x>
    13a6:	c0 cf       	rjmp	.-128    	; 0x1328 <__fp_round>
    13a8:	b1 df       	rcall	.-158    	; 0x130c <__fp_pscA>
    13aa:	28 f0       	brcs	.+10     	; 0x13b6 <__mulsf3+0x12>
    13ac:	b6 df       	rcall	.-148    	; 0x131a <__fp_pscB>
    13ae:	18 f0       	brcs	.+6      	; 0x13b6 <__mulsf3+0x12>
    13b0:	95 23       	and	r25, r21
    13b2:	09 f0       	breq	.+2      	; 0x13b6 <__mulsf3+0x12>
    13b4:	a2 cf       	rjmp	.-188    	; 0x12fa <__fp_inf>
    13b6:	a7 cf       	rjmp	.-178    	; 0x1306 <__fp_nan>
    13b8:	11 24       	eor	r1, r1
    13ba:	ea cf       	rjmp	.-44     	; 0x1390 <__fp_szero>

000013bc <__mulsf3x>:
    13bc:	c6 df       	rcall	.-116    	; 0x134a <__fp_split3>
    13be:	a0 f3       	brcs	.-24     	; 0x13a8 <__mulsf3+0x4>

000013c0 <__mulsf3_pse>:
    13c0:	95 9f       	mul	r25, r21
    13c2:	d1 f3       	breq	.-12     	; 0x13b8 <__mulsf3+0x14>
    13c4:	95 0f       	add	r25, r21
    13c6:	50 e0       	ldi	r21, 0x00	; 0
    13c8:	55 1f       	adc	r21, r21
    13ca:	62 9f       	mul	r22, r18
    13cc:	f0 01       	movw	r30, r0
    13ce:	72 9f       	mul	r23, r18
    13d0:	bb 27       	eor	r27, r27
    13d2:	f0 0d       	add	r31, r0
    13d4:	b1 1d       	adc	r27, r1
    13d6:	63 9f       	mul	r22, r19
    13d8:	aa 27       	eor	r26, r26
    13da:	f0 0d       	add	r31, r0
    13dc:	b1 1d       	adc	r27, r1
    13de:	aa 1f       	adc	r26, r26
    13e0:	64 9f       	mul	r22, r20
    13e2:	66 27       	eor	r22, r22
    13e4:	b0 0d       	add	r27, r0
    13e6:	a1 1d       	adc	r26, r1
    13e8:	66 1f       	adc	r22, r22
    13ea:	82 9f       	mul	r24, r18
    13ec:	22 27       	eor	r18, r18
    13ee:	b0 0d       	add	r27, r0
    13f0:	a1 1d       	adc	r26, r1
    13f2:	62 1f       	adc	r22, r18
    13f4:	73 9f       	mul	r23, r19
    13f6:	b0 0d       	add	r27, r0
    13f8:	a1 1d       	adc	r26, r1
    13fa:	62 1f       	adc	r22, r18
    13fc:	83 9f       	mul	r24, r19
    13fe:	a0 0d       	add	r26, r0
    1400:	61 1d       	adc	r22, r1
    1402:	22 1f       	adc	r18, r18
    1404:	74 9f       	mul	r23, r20
    1406:	33 27       	eor	r19, r19
    1408:	a0 0d       	add	r26, r0
    140a:	61 1d       	adc	r22, r1
    140c:	23 1f       	adc	r18, r19
    140e:	84 9f       	mul	r24, r20
    1410:	60 0d       	add	r22, r0
    1412:	21 1d       	adc	r18, r1
    1414:	82 2f       	mov	r24, r18
    1416:	76 2f       	mov	r23, r22
    1418:	6a 2f       	mov	r22, r26
    141a:	11 24       	eor	r1, r1
    141c:	9f 57       	subi	r25, 0x7F	; 127
    141e:	50 40       	sbci	r21, 0x00	; 0
    1420:	8a f0       	brmi	.+34     	; 0x1444 <__mulsf3_pse+0x84>
    1422:	e1 f0       	breq	.+56     	; 0x145c <__mulsf3_pse+0x9c>
    1424:	88 23       	and	r24, r24
    1426:	4a f0       	brmi	.+18     	; 0x143a <__mulsf3_pse+0x7a>
    1428:	ee 0f       	add	r30, r30
    142a:	ff 1f       	adc	r31, r31
    142c:	bb 1f       	adc	r27, r27
    142e:	66 1f       	adc	r22, r22
    1430:	77 1f       	adc	r23, r23
    1432:	88 1f       	adc	r24, r24
    1434:	91 50       	subi	r25, 0x01	; 1
    1436:	50 40       	sbci	r21, 0x00	; 0
    1438:	a9 f7       	brne	.-22     	; 0x1424 <__mulsf3_pse+0x64>
    143a:	9e 3f       	cpi	r25, 0xFE	; 254
    143c:	51 05       	cpc	r21, r1
    143e:	70 f0       	brcs	.+28     	; 0x145c <__mulsf3_pse+0x9c>
    1440:	5c cf       	rjmp	.-328    	; 0x12fa <__fp_inf>
    1442:	a6 cf       	rjmp	.-180    	; 0x1390 <__fp_szero>
    1444:	5f 3f       	cpi	r21, 0xFF	; 255
    1446:	ec f3       	brlt	.-6      	; 0x1442 <__mulsf3_pse+0x82>
    1448:	98 3e       	cpi	r25, 0xE8	; 232
    144a:	dc f3       	brlt	.-10     	; 0x1442 <__mulsf3_pse+0x82>
    144c:	86 95       	lsr	r24
    144e:	77 95       	ror	r23
    1450:	67 95       	ror	r22
    1452:	b7 95       	ror	r27
    1454:	f7 95       	ror	r31
    1456:	e7 95       	ror	r30
    1458:	9f 5f       	subi	r25, 0xFF	; 255
    145a:	c1 f7       	brne	.-16     	; 0x144c <__mulsf3_pse+0x8c>
    145c:	fe 2b       	or	r31, r30
    145e:	88 0f       	add	r24, r24
    1460:	91 1d       	adc	r25, r1
    1462:	96 95       	lsr	r25
    1464:	87 95       	ror	r24
    1466:	97 f9       	bld	r25, 7
    1468:	08 95       	ret

0000146a <__fp_cmp>:
    146a:	99 0f       	add	r25, r25
    146c:	00 08       	sbc	r0, r0
    146e:	55 0f       	add	r21, r21
    1470:	aa 0b       	sbc	r26, r26
    1472:	e0 e8       	ldi	r30, 0x80	; 128
    1474:	fe ef       	ldi	r31, 0xFE	; 254
    1476:	16 16       	cp	r1, r22
    1478:	17 06       	cpc	r1, r23
    147a:	e8 07       	cpc	r30, r24
    147c:	f9 07       	cpc	r31, r25
    147e:	c0 f0       	brcs	.+48     	; 0x14b0 <__fp_cmp+0x46>
    1480:	12 16       	cp	r1, r18
    1482:	13 06       	cpc	r1, r19
    1484:	e4 07       	cpc	r30, r20
    1486:	f5 07       	cpc	r31, r21
    1488:	98 f0       	brcs	.+38     	; 0x14b0 <__fp_cmp+0x46>
    148a:	62 1b       	sub	r22, r18
    148c:	73 0b       	sbc	r23, r19
    148e:	84 0b       	sbc	r24, r20
    1490:	95 0b       	sbc	r25, r21
    1492:	39 f4       	brne	.+14     	; 0x14a2 <__fp_cmp+0x38>
    1494:	0a 26       	eor	r0, r26
    1496:	61 f0       	breq	.+24     	; 0x14b0 <__fp_cmp+0x46>
    1498:	23 2b       	or	r18, r19
    149a:	24 2b       	or	r18, r20
    149c:	25 2b       	or	r18, r21
    149e:	21 f4       	brne	.+8      	; 0x14a8 <__fp_cmp+0x3e>
    14a0:	08 95       	ret
    14a2:	0a 26       	eor	r0, r26
    14a4:	09 f4       	brne	.+2      	; 0x14a8 <__fp_cmp+0x3e>
    14a6:	a1 40       	sbci	r26, 0x01	; 1
    14a8:	a6 95       	lsr	r26
    14aa:	8f ef       	ldi	r24, 0xFF	; 255
    14ac:	81 1d       	adc	r24, r1
    14ae:	81 1d       	adc	r24, r1
    14b0:	08 95       	ret

000014b2 <__tablejump2__>:
    14b2:	ee 0f       	add	r30, r30
    14b4:	ff 1f       	adc	r31, r31
    14b6:	88 1f       	adc	r24, r24
    14b8:	8b bf       	out	0x3b, r24	; 59
    14ba:	07 90       	elpm	r0, Z+
    14bc:	f6 91       	elpm	r31, Z
    14be:	e0 2d       	mov	r30, r0
    14c0:	19 94       	eijmp

000014c2 <strcat>:
    14c2:	fb 01       	movw	r30, r22
    14c4:	dc 01       	movw	r26, r24
    14c6:	0d 90       	ld	r0, X+
    14c8:	00 20       	and	r0, r0
    14ca:	e9 f7       	brne	.-6      	; 0x14c6 <strcat+0x4>
    14cc:	11 97       	sbiw	r26, 0x01	; 1
    14ce:	01 90       	ld	r0, Z+
    14d0:	0d 92       	st	X+, r0
    14d2:	00 20       	and	r0, r0
    14d4:	e1 f7       	brne	.-8      	; 0x14ce <strcat+0xc>
    14d6:	08 95       	ret

000014d8 <strncpy>:
    14d8:	fb 01       	movw	r30, r22
    14da:	dc 01       	movw	r26, r24
    14dc:	41 50       	subi	r20, 0x01	; 1
    14de:	50 40       	sbci	r21, 0x00	; 0
    14e0:	48 f0       	brcs	.+18     	; 0x14f4 <strncpy+0x1c>
    14e2:	01 90       	ld	r0, Z+
    14e4:	0d 92       	st	X+, r0
    14e6:	00 20       	and	r0, r0
    14e8:	c9 f7       	brne	.-14     	; 0x14dc <strncpy+0x4>
    14ea:	01 c0       	rjmp	.+2      	; 0x14ee <strncpy+0x16>
    14ec:	1d 92       	st	X+, r1
    14ee:	41 50       	subi	r20, 0x01	; 1
    14f0:	50 40       	sbci	r21, 0x00	; 0
    14f2:	e0 f7       	brcc	.-8      	; 0x14ec <strncpy+0x14>
    14f4:	08 95       	ret

000014f6 <sprintf>:
    14f6:	0f 93       	push	r16
    14f8:	1f 93       	push	r17
    14fa:	cf 93       	push	r28
    14fc:	df 93       	push	r29
    14fe:	cd b7       	in	r28, 0x3d	; 61
    1500:	de b7       	in	r29, 0x3e	; 62
    1502:	2e 97       	sbiw	r28, 0x0e	; 14
    1504:	0f b6       	in	r0, 0x3f	; 63
    1506:	f8 94       	cli
    1508:	de bf       	out	0x3e, r29	; 62
    150a:	0f be       	out	0x3f, r0	; 63
    150c:	cd bf       	out	0x3d, r28	; 61
    150e:	0e 89       	ldd	r16, Y+22	; 0x16
    1510:	1f 89       	ldd	r17, Y+23	; 0x17
    1512:	86 e0       	ldi	r24, 0x06	; 6
    1514:	8c 83       	std	Y+4, r24	; 0x04
    1516:	1a 83       	std	Y+2, r17	; 0x02
    1518:	09 83       	std	Y+1, r16	; 0x01
    151a:	8f ef       	ldi	r24, 0xFF	; 255
    151c:	9f e7       	ldi	r25, 0x7F	; 127
    151e:	9e 83       	std	Y+6, r25	; 0x06
    1520:	8d 83       	std	Y+5, r24	; 0x05
    1522:	ae 01       	movw	r20, r28
    1524:	46 5e       	subi	r20, 0xE6	; 230
    1526:	5f 4f       	sbci	r21, 0xFF	; 255
    1528:	68 8d       	ldd	r22, Y+24	; 0x18
    152a:	79 8d       	ldd	r23, Y+25	; 0x19
    152c:	ce 01       	movw	r24, r28
    152e:	01 96       	adiw	r24, 0x01	; 1
    1530:	32 d0       	rcall	.+100    	; 0x1596 <vfprintf>
    1532:	2f 81       	ldd	r18, Y+7	; 0x07
    1534:	38 85       	ldd	r19, Y+8	; 0x08
    1536:	f8 01       	movw	r30, r16
    1538:	e2 0f       	add	r30, r18
    153a:	f3 1f       	adc	r31, r19
    153c:	10 82       	st	Z, r1
    153e:	2e 96       	adiw	r28, 0x0e	; 14
    1540:	0f b6       	in	r0, 0x3f	; 63
    1542:	f8 94       	cli
    1544:	de bf       	out	0x3e, r29	; 62
    1546:	0f be       	out	0x3f, r0	; 63
    1548:	cd bf       	out	0x3d, r28	; 61
    154a:	df 91       	pop	r29
    154c:	cf 91       	pop	r28
    154e:	1f 91       	pop	r17
    1550:	0f 91       	pop	r16
    1552:	08 95       	ret

00001554 <sscanf>:
    1554:	cf 93       	push	r28
    1556:	df 93       	push	r29
    1558:	cd b7       	in	r28, 0x3d	; 61
    155a:	de b7       	in	r29, 0x3e	; 62
    155c:	2e 97       	sbiw	r28, 0x0e	; 14
    155e:	0f b6       	in	r0, 0x3f	; 63
    1560:	f8 94       	cli
    1562:	de bf       	out	0x3e, r29	; 62
    1564:	0f be       	out	0x3f, r0	; 63
    1566:	cd bf       	out	0x3d, r28	; 61
    1568:	85 e0       	ldi	r24, 0x05	; 5
    156a:	8c 83       	std	Y+4, r24	; 0x04
    156c:	8c 89       	ldd	r24, Y+20	; 0x14
    156e:	9d 89       	ldd	r25, Y+21	; 0x15
    1570:	9a 83       	std	Y+2, r25	; 0x02
    1572:	89 83       	std	Y+1, r24	; 0x01
    1574:	ae 01       	movw	r20, r28
    1576:	48 5e       	subi	r20, 0xE8	; 232
    1578:	5f 4f       	sbci	r21, 0xFF	; 255
    157a:	6e 89       	ldd	r22, Y+22	; 0x16
    157c:	7f 89       	ldd	r23, Y+23	; 0x17
    157e:	ce 01       	movw	r24, r28
    1580:	01 96       	adiw	r24, 0x01	; 1
    1582:	9e d3       	rcall	.+1852   	; 0x1cc0 <vfscanf>
    1584:	2e 96       	adiw	r28, 0x0e	; 14
    1586:	0f b6       	in	r0, 0x3f	; 63
    1588:	f8 94       	cli
    158a:	de bf       	out	0x3e, r29	; 62
    158c:	0f be       	out	0x3f, r0	; 63
    158e:	cd bf       	out	0x3d, r28	; 61
    1590:	df 91       	pop	r29
    1592:	cf 91       	pop	r28
    1594:	08 95       	ret

00001596 <vfprintf>:
    1596:	2f 92       	push	r2
    1598:	3f 92       	push	r3
    159a:	4f 92       	push	r4
    159c:	5f 92       	push	r5
    159e:	6f 92       	push	r6
    15a0:	7f 92       	push	r7
    15a2:	8f 92       	push	r8
    15a4:	9f 92       	push	r9
    15a6:	af 92       	push	r10
    15a8:	bf 92       	push	r11
    15aa:	cf 92       	push	r12
    15ac:	df 92       	push	r13
    15ae:	ef 92       	push	r14
    15b0:	ff 92       	push	r15
    15b2:	0f 93       	push	r16
    15b4:	1f 93       	push	r17
    15b6:	cf 93       	push	r28
    15b8:	df 93       	push	r29
    15ba:	cd b7       	in	r28, 0x3d	; 61
    15bc:	de b7       	in	r29, 0x3e	; 62
    15be:	2c 97       	sbiw	r28, 0x0c	; 12
    15c0:	0f b6       	in	r0, 0x3f	; 63
    15c2:	f8 94       	cli
    15c4:	de bf       	out	0x3e, r29	; 62
    15c6:	0f be       	out	0x3f, r0	; 63
    15c8:	cd bf       	out	0x3d, r28	; 61
    15ca:	7c 01       	movw	r14, r24
    15cc:	6b 01       	movw	r12, r22
    15ce:	8a 01       	movw	r16, r20
    15d0:	fc 01       	movw	r30, r24
    15d2:	17 82       	std	Z+7, r1	; 0x07
    15d4:	16 82       	std	Z+6, r1	; 0x06
    15d6:	83 81       	ldd	r24, Z+3	; 0x03
    15d8:	81 ff       	sbrs	r24, 1
    15da:	b0 c1       	rjmp	.+864    	; 0x193c <vfprintf+0x3a6>
    15dc:	ce 01       	movw	r24, r28
    15de:	01 96       	adiw	r24, 0x01	; 1
    15e0:	4c 01       	movw	r8, r24
    15e2:	f7 01       	movw	r30, r14
    15e4:	93 81       	ldd	r25, Z+3	; 0x03
    15e6:	f6 01       	movw	r30, r12
    15e8:	93 fd       	sbrc	r25, 3
    15ea:	85 91       	lpm	r24, Z+
    15ec:	93 ff       	sbrs	r25, 3
    15ee:	81 91       	ld	r24, Z+
    15f0:	6f 01       	movw	r12, r30
    15f2:	88 23       	and	r24, r24
    15f4:	09 f4       	brne	.+2      	; 0x15f8 <vfprintf+0x62>
    15f6:	9e c1       	rjmp	.+828    	; 0x1934 <vfprintf+0x39e>
    15f8:	85 32       	cpi	r24, 0x25	; 37
    15fa:	39 f4       	brne	.+14     	; 0x160a <vfprintf+0x74>
    15fc:	93 fd       	sbrc	r25, 3
    15fe:	85 91       	lpm	r24, Z+
    1600:	93 ff       	sbrs	r25, 3
    1602:	81 91       	ld	r24, Z+
    1604:	6f 01       	movw	r12, r30
    1606:	85 32       	cpi	r24, 0x25	; 37
    1608:	21 f4       	brne	.+8      	; 0x1612 <vfprintf+0x7c>
    160a:	b7 01       	movw	r22, r14
    160c:	90 e0       	ldi	r25, 0x00	; 0
    160e:	df d4       	rcall	.+2494   	; 0x1fce <fputc>
    1610:	e8 cf       	rjmp	.-48     	; 0x15e2 <vfprintf+0x4c>
    1612:	51 2c       	mov	r5, r1
    1614:	31 2c       	mov	r3, r1
    1616:	20 e0       	ldi	r18, 0x00	; 0
    1618:	20 32       	cpi	r18, 0x20	; 32
    161a:	a0 f4       	brcc	.+40     	; 0x1644 <vfprintf+0xae>
    161c:	8b 32       	cpi	r24, 0x2B	; 43
    161e:	69 f0       	breq	.+26     	; 0x163a <vfprintf+0xa4>
    1620:	30 f4       	brcc	.+12     	; 0x162e <vfprintf+0x98>
    1622:	80 32       	cpi	r24, 0x20	; 32
    1624:	59 f0       	breq	.+22     	; 0x163c <vfprintf+0xa6>
    1626:	83 32       	cpi	r24, 0x23	; 35
    1628:	69 f4       	brne	.+26     	; 0x1644 <vfprintf+0xae>
    162a:	20 61       	ori	r18, 0x10	; 16
    162c:	2c c0       	rjmp	.+88     	; 0x1686 <vfprintf+0xf0>
    162e:	8d 32       	cpi	r24, 0x2D	; 45
    1630:	39 f0       	breq	.+14     	; 0x1640 <vfprintf+0xaa>
    1632:	80 33       	cpi	r24, 0x30	; 48
    1634:	39 f4       	brne	.+14     	; 0x1644 <vfprintf+0xae>
    1636:	21 60       	ori	r18, 0x01	; 1
    1638:	26 c0       	rjmp	.+76     	; 0x1686 <vfprintf+0xf0>
    163a:	22 60       	ori	r18, 0x02	; 2
    163c:	24 60       	ori	r18, 0x04	; 4
    163e:	23 c0       	rjmp	.+70     	; 0x1686 <vfprintf+0xf0>
    1640:	28 60       	ori	r18, 0x08	; 8
    1642:	21 c0       	rjmp	.+66     	; 0x1686 <vfprintf+0xf0>
    1644:	27 fd       	sbrc	r18, 7
    1646:	27 c0       	rjmp	.+78     	; 0x1696 <vfprintf+0x100>
    1648:	30 ed       	ldi	r19, 0xD0	; 208
    164a:	38 0f       	add	r19, r24
    164c:	3a 30       	cpi	r19, 0x0A	; 10
    164e:	78 f4       	brcc	.+30     	; 0x166e <vfprintf+0xd8>
    1650:	26 ff       	sbrs	r18, 6
    1652:	06 c0       	rjmp	.+12     	; 0x1660 <vfprintf+0xca>
    1654:	fa e0       	ldi	r31, 0x0A	; 10
    1656:	5f 9e       	mul	r5, r31
    1658:	30 0d       	add	r19, r0
    165a:	11 24       	eor	r1, r1
    165c:	53 2e       	mov	r5, r19
    165e:	13 c0       	rjmp	.+38     	; 0x1686 <vfprintf+0xf0>
    1660:	8a e0       	ldi	r24, 0x0A	; 10
    1662:	38 9e       	mul	r3, r24
    1664:	30 0d       	add	r19, r0
    1666:	11 24       	eor	r1, r1
    1668:	33 2e       	mov	r3, r19
    166a:	20 62       	ori	r18, 0x20	; 32
    166c:	0c c0       	rjmp	.+24     	; 0x1686 <vfprintf+0xf0>
    166e:	8e 32       	cpi	r24, 0x2E	; 46
    1670:	21 f4       	brne	.+8      	; 0x167a <vfprintf+0xe4>
    1672:	26 fd       	sbrc	r18, 6
    1674:	5f c1       	rjmp	.+702    	; 0x1934 <vfprintf+0x39e>
    1676:	20 64       	ori	r18, 0x40	; 64
    1678:	06 c0       	rjmp	.+12     	; 0x1686 <vfprintf+0xf0>
    167a:	8c 36       	cpi	r24, 0x6C	; 108
    167c:	11 f4       	brne	.+4      	; 0x1682 <vfprintf+0xec>
    167e:	20 68       	ori	r18, 0x80	; 128
    1680:	02 c0       	rjmp	.+4      	; 0x1686 <vfprintf+0xf0>
    1682:	88 36       	cpi	r24, 0x68	; 104
    1684:	41 f4       	brne	.+16     	; 0x1696 <vfprintf+0x100>
    1686:	f6 01       	movw	r30, r12
    1688:	93 fd       	sbrc	r25, 3
    168a:	85 91       	lpm	r24, Z+
    168c:	93 ff       	sbrs	r25, 3
    168e:	81 91       	ld	r24, Z+
    1690:	6f 01       	movw	r12, r30
    1692:	81 11       	cpse	r24, r1
    1694:	c1 cf       	rjmp	.-126    	; 0x1618 <vfprintf+0x82>
    1696:	98 2f       	mov	r25, r24
    1698:	9f 7d       	andi	r25, 0xDF	; 223
    169a:	95 54       	subi	r25, 0x45	; 69
    169c:	93 30       	cpi	r25, 0x03	; 3
    169e:	28 f4       	brcc	.+10     	; 0x16aa <vfprintf+0x114>
    16a0:	0c 5f       	subi	r16, 0xFC	; 252
    16a2:	1f 4f       	sbci	r17, 0xFF	; 255
    16a4:	ff e3       	ldi	r31, 0x3F	; 63
    16a6:	f9 83       	std	Y+1, r31	; 0x01
    16a8:	0d c0       	rjmp	.+26     	; 0x16c4 <vfprintf+0x12e>
    16aa:	83 36       	cpi	r24, 0x63	; 99
    16ac:	31 f0       	breq	.+12     	; 0x16ba <vfprintf+0x124>
    16ae:	83 37       	cpi	r24, 0x73	; 115
    16b0:	71 f0       	breq	.+28     	; 0x16ce <vfprintf+0x138>
    16b2:	83 35       	cpi	r24, 0x53	; 83
    16b4:	09 f0       	breq	.+2      	; 0x16b8 <vfprintf+0x122>
    16b6:	57 c0       	rjmp	.+174    	; 0x1766 <vfprintf+0x1d0>
    16b8:	21 c0       	rjmp	.+66     	; 0x16fc <vfprintf+0x166>
    16ba:	f8 01       	movw	r30, r16
    16bc:	80 81       	ld	r24, Z
    16be:	89 83       	std	Y+1, r24	; 0x01
    16c0:	0e 5f       	subi	r16, 0xFE	; 254
    16c2:	1f 4f       	sbci	r17, 0xFF	; 255
    16c4:	44 24       	eor	r4, r4
    16c6:	43 94       	inc	r4
    16c8:	51 2c       	mov	r5, r1
    16ca:	54 01       	movw	r10, r8
    16cc:	14 c0       	rjmp	.+40     	; 0x16f6 <vfprintf+0x160>
    16ce:	38 01       	movw	r6, r16
    16d0:	f2 e0       	ldi	r31, 0x02	; 2
    16d2:	6f 0e       	add	r6, r31
    16d4:	71 1c       	adc	r7, r1
    16d6:	f8 01       	movw	r30, r16
    16d8:	a0 80       	ld	r10, Z
    16da:	b1 80       	ldd	r11, Z+1	; 0x01
    16dc:	26 ff       	sbrs	r18, 6
    16de:	03 c0       	rjmp	.+6      	; 0x16e6 <vfprintf+0x150>
    16e0:	65 2d       	mov	r22, r5
    16e2:	70 e0       	ldi	r23, 0x00	; 0
    16e4:	02 c0       	rjmp	.+4      	; 0x16ea <vfprintf+0x154>
    16e6:	6f ef       	ldi	r22, 0xFF	; 255
    16e8:	7f ef       	ldi	r23, 0xFF	; 255
    16ea:	c5 01       	movw	r24, r10
    16ec:	2c 87       	std	Y+12, r18	; 0x0c
    16ee:	26 d4       	rcall	.+2124   	; 0x1f3c <strnlen>
    16f0:	2c 01       	movw	r4, r24
    16f2:	83 01       	movw	r16, r6
    16f4:	2c 85       	ldd	r18, Y+12	; 0x0c
    16f6:	2f 77       	andi	r18, 0x7F	; 127
    16f8:	22 2e       	mov	r2, r18
    16fa:	16 c0       	rjmp	.+44     	; 0x1728 <vfprintf+0x192>
    16fc:	38 01       	movw	r6, r16
    16fe:	f2 e0       	ldi	r31, 0x02	; 2
    1700:	6f 0e       	add	r6, r31
    1702:	71 1c       	adc	r7, r1
    1704:	f8 01       	movw	r30, r16
    1706:	a0 80       	ld	r10, Z
    1708:	b1 80       	ldd	r11, Z+1	; 0x01
    170a:	26 ff       	sbrs	r18, 6
    170c:	03 c0       	rjmp	.+6      	; 0x1714 <vfprintf+0x17e>
    170e:	65 2d       	mov	r22, r5
    1710:	70 e0       	ldi	r23, 0x00	; 0
    1712:	02 c0       	rjmp	.+4      	; 0x1718 <vfprintf+0x182>
    1714:	6f ef       	ldi	r22, 0xFF	; 255
    1716:	7f ef       	ldi	r23, 0xFF	; 255
    1718:	c5 01       	movw	r24, r10
    171a:	2c 87       	std	Y+12, r18	; 0x0c
    171c:	04 d4       	rcall	.+2056   	; 0x1f26 <strnlen_P>
    171e:	2c 01       	movw	r4, r24
    1720:	2c 85       	ldd	r18, Y+12	; 0x0c
    1722:	20 68       	ori	r18, 0x80	; 128
    1724:	22 2e       	mov	r2, r18
    1726:	83 01       	movw	r16, r6
    1728:	23 fc       	sbrc	r2, 3
    172a:	19 c0       	rjmp	.+50     	; 0x175e <vfprintf+0x1c8>
    172c:	83 2d       	mov	r24, r3
    172e:	90 e0       	ldi	r25, 0x00	; 0
    1730:	48 16       	cp	r4, r24
    1732:	59 06       	cpc	r5, r25
    1734:	a0 f4       	brcc	.+40     	; 0x175e <vfprintf+0x1c8>
    1736:	b7 01       	movw	r22, r14
    1738:	80 e2       	ldi	r24, 0x20	; 32
    173a:	90 e0       	ldi	r25, 0x00	; 0
    173c:	48 d4       	rcall	.+2192   	; 0x1fce <fputc>
    173e:	3a 94       	dec	r3
    1740:	f5 cf       	rjmp	.-22     	; 0x172c <vfprintf+0x196>
    1742:	f5 01       	movw	r30, r10
    1744:	27 fc       	sbrc	r2, 7
    1746:	85 91       	lpm	r24, Z+
    1748:	27 fe       	sbrs	r2, 7
    174a:	81 91       	ld	r24, Z+
    174c:	5f 01       	movw	r10, r30
    174e:	b7 01       	movw	r22, r14
    1750:	90 e0       	ldi	r25, 0x00	; 0
    1752:	3d d4       	rcall	.+2170   	; 0x1fce <fputc>
    1754:	31 10       	cpse	r3, r1
    1756:	3a 94       	dec	r3
    1758:	f1 e0       	ldi	r31, 0x01	; 1
    175a:	4f 1a       	sub	r4, r31
    175c:	51 08       	sbc	r5, r1
    175e:	41 14       	cp	r4, r1
    1760:	51 04       	cpc	r5, r1
    1762:	79 f7       	brne	.-34     	; 0x1742 <vfprintf+0x1ac>
    1764:	de c0       	rjmp	.+444    	; 0x1922 <vfprintf+0x38c>
    1766:	84 36       	cpi	r24, 0x64	; 100
    1768:	11 f0       	breq	.+4      	; 0x176e <vfprintf+0x1d8>
    176a:	89 36       	cpi	r24, 0x69	; 105
    176c:	31 f5       	brne	.+76     	; 0x17ba <vfprintf+0x224>
    176e:	f8 01       	movw	r30, r16
    1770:	27 ff       	sbrs	r18, 7
    1772:	07 c0       	rjmp	.+14     	; 0x1782 <vfprintf+0x1ec>
    1774:	60 81       	ld	r22, Z
    1776:	71 81       	ldd	r23, Z+1	; 0x01
    1778:	82 81       	ldd	r24, Z+2	; 0x02
    177a:	93 81       	ldd	r25, Z+3	; 0x03
    177c:	0c 5f       	subi	r16, 0xFC	; 252
    177e:	1f 4f       	sbci	r17, 0xFF	; 255
    1780:	08 c0       	rjmp	.+16     	; 0x1792 <vfprintf+0x1fc>
    1782:	60 81       	ld	r22, Z
    1784:	71 81       	ldd	r23, Z+1	; 0x01
    1786:	07 2e       	mov	r0, r23
    1788:	00 0c       	add	r0, r0
    178a:	88 0b       	sbc	r24, r24
    178c:	99 0b       	sbc	r25, r25
    178e:	0e 5f       	subi	r16, 0xFE	; 254
    1790:	1f 4f       	sbci	r17, 0xFF	; 255
    1792:	2f 76       	andi	r18, 0x6F	; 111
    1794:	72 2e       	mov	r7, r18
    1796:	97 ff       	sbrs	r25, 7
    1798:	09 c0       	rjmp	.+18     	; 0x17ac <vfprintf+0x216>
    179a:	90 95       	com	r25
    179c:	80 95       	com	r24
    179e:	70 95       	com	r23
    17a0:	61 95       	neg	r22
    17a2:	7f 4f       	sbci	r23, 0xFF	; 255
    17a4:	8f 4f       	sbci	r24, 0xFF	; 255
    17a6:	9f 4f       	sbci	r25, 0xFF	; 255
    17a8:	20 68       	ori	r18, 0x80	; 128
    17aa:	72 2e       	mov	r7, r18
    17ac:	2a e0       	ldi	r18, 0x0A	; 10
    17ae:	30 e0       	ldi	r19, 0x00	; 0
    17b0:	a4 01       	movw	r20, r8
    17b2:	5e d4       	rcall	.+2236   	; 0x2070 <__ultoa_invert>
    17b4:	a8 2e       	mov	r10, r24
    17b6:	a8 18       	sub	r10, r8
    17b8:	43 c0       	rjmp	.+134    	; 0x1840 <vfprintf+0x2aa>
    17ba:	85 37       	cpi	r24, 0x75	; 117
    17bc:	29 f4       	brne	.+10     	; 0x17c8 <vfprintf+0x232>
    17be:	2f 7e       	andi	r18, 0xEF	; 239
    17c0:	b2 2e       	mov	r11, r18
    17c2:	2a e0       	ldi	r18, 0x0A	; 10
    17c4:	30 e0       	ldi	r19, 0x00	; 0
    17c6:	25 c0       	rjmp	.+74     	; 0x1812 <vfprintf+0x27c>
    17c8:	f2 2f       	mov	r31, r18
    17ca:	f9 7f       	andi	r31, 0xF9	; 249
    17cc:	bf 2e       	mov	r11, r31
    17ce:	8f 36       	cpi	r24, 0x6F	; 111
    17d0:	c1 f0       	breq	.+48     	; 0x1802 <vfprintf+0x26c>
    17d2:	18 f4       	brcc	.+6      	; 0x17da <vfprintf+0x244>
    17d4:	88 35       	cpi	r24, 0x58	; 88
    17d6:	79 f0       	breq	.+30     	; 0x17f6 <vfprintf+0x260>
    17d8:	ad c0       	rjmp	.+346    	; 0x1934 <vfprintf+0x39e>
    17da:	80 37       	cpi	r24, 0x70	; 112
    17dc:	19 f0       	breq	.+6      	; 0x17e4 <vfprintf+0x24e>
    17de:	88 37       	cpi	r24, 0x78	; 120
    17e0:	21 f0       	breq	.+8      	; 0x17ea <vfprintf+0x254>
    17e2:	a8 c0       	rjmp	.+336    	; 0x1934 <vfprintf+0x39e>
    17e4:	2f 2f       	mov	r18, r31
    17e6:	20 61       	ori	r18, 0x10	; 16
    17e8:	b2 2e       	mov	r11, r18
    17ea:	b4 fe       	sbrs	r11, 4
    17ec:	0d c0       	rjmp	.+26     	; 0x1808 <vfprintf+0x272>
    17ee:	8b 2d       	mov	r24, r11
    17f0:	84 60       	ori	r24, 0x04	; 4
    17f2:	b8 2e       	mov	r11, r24
    17f4:	09 c0       	rjmp	.+18     	; 0x1808 <vfprintf+0x272>
    17f6:	24 ff       	sbrs	r18, 4
    17f8:	0a c0       	rjmp	.+20     	; 0x180e <vfprintf+0x278>
    17fa:	9f 2f       	mov	r25, r31
    17fc:	96 60       	ori	r25, 0x06	; 6
    17fe:	b9 2e       	mov	r11, r25
    1800:	06 c0       	rjmp	.+12     	; 0x180e <vfprintf+0x278>
    1802:	28 e0       	ldi	r18, 0x08	; 8
    1804:	30 e0       	ldi	r19, 0x00	; 0
    1806:	05 c0       	rjmp	.+10     	; 0x1812 <vfprintf+0x27c>
    1808:	20 e1       	ldi	r18, 0x10	; 16
    180a:	30 e0       	ldi	r19, 0x00	; 0
    180c:	02 c0       	rjmp	.+4      	; 0x1812 <vfprintf+0x27c>
    180e:	20 e1       	ldi	r18, 0x10	; 16
    1810:	32 e0       	ldi	r19, 0x02	; 2
    1812:	f8 01       	movw	r30, r16
    1814:	b7 fe       	sbrs	r11, 7
    1816:	07 c0       	rjmp	.+14     	; 0x1826 <vfprintf+0x290>
    1818:	60 81       	ld	r22, Z
    181a:	71 81       	ldd	r23, Z+1	; 0x01
    181c:	82 81       	ldd	r24, Z+2	; 0x02
    181e:	93 81       	ldd	r25, Z+3	; 0x03
    1820:	0c 5f       	subi	r16, 0xFC	; 252
    1822:	1f 4f       	sbci	r17, 0xFF	; 255
    1824:	06 c0       	rjmp	.+12     	; 0x1832 <vfprintf+0x29c>
    1826:	60 81       	ld	r22, Z
    1828:	71 81       	ldd	r23, Z+1	; 0x01
    182a:	80 e0       	ldi	r24, 0x00	; 0
    182c:	90 e0       	ldi	r25, 0x00	; 0
    182e:	0e 5f       	subi	r16, 0xFE	; 254
    1830:	1f 4f       	sbci	r17, 0xFF	; 255
    1832:	a4 01       	movw	r20, r8
    1834:	1d d4       	rcall	.+2106   	; 0x2070 <__ultoa_invert>
    1836:	a8 2e       	mov	r10, r24
    1838:	a8 18       	sub	r10, r8
    183a:	fb 2d       	mov	r31, r11
    183c:	ff 77       	andi	r31, 0x7F	; 127
    183e:	7f 2e       	mov	r7, r31
    1840:	76 fe       	sbrs	r7, 6
    1842:	0b c0       	rjmp	.+22     	; 0x185a <vfprintf+0x2c4>
    1844:	37 2d       	mov	r19, r7
    1846:	3e 7f       	andi	r19, 0xFE	; 254
    1848:	a5 14       	cp	r10, r5
    184a:	50 f4       	brcc	.+20     	; 0x1860 <vfprintf+0x2ca>
    184c:	74 fe       	sbrs	r7, 4
    184e:	0a c0       	rjmp	.+20     	; 0x1864 <vfprintf+0x2ce>
    1850:	72 fc       	sbrc	r7, 2
    1852:	08 c0       	rjmp	.+16     	; 0x1864 <vfprintf+0x2ce>
    1854:	37 2d       	mov	r19, r7
    1856:	3e 7e       	andi	r19, 0xEE	; 238
    1858:	05 c0       	rjmp	.+10     	; 0x1864 <vfprintf+0x2ce>
    185a:	ba 2c       	mov	r11, r10
    185c:	37 2d       	mov	r19, r7
    185e:	03 c0       	rjmp	.+6      	; 0x1866 <vfprintf+0x2d0>
    1860:	ba 2c       	mov	r11, r10
    1862:	01 c0       	rjmp	.+2      	; 0x1866 <vfprintf+0x2d0>
    1864:	b5 2c       	mov	r11, r5
    1866:	34 ff       	sbrs	r19, 4
    1868:	0d c0       	rjmp	.+26     	; 0x1884 <vfprintf+0x2ee>
    186a:	fe 01       	movw	r30, r28
    186c:	ea 0d       	add	r30, r10
    186e:	f1 1d       	adc	r31, r1
    1870:	80 81       	ld	r24, Z
    1872:	80 33       	cpi	r24, 0x30	; 48
    1874:	11 f4       	brne	.+4      	; 0x187a <vfprintf+0x2e4>
    1876:	39 7e       	andi	r19, 0xE9	; 233
    1878:	09 c0       	rjmp	.+18     	; 0x188c <vfprintf+0x2f6>
    187a:	32 ff       	sbrs	r19, 2
    187c:	06 c0       	rjmp	.+12     	; 0x188a <vfprintf+0x2f4>
    187e:	b3 94       	inc	r11
    1880:	b3 94       	inc	r11
    1882:	04 c0       	rjmp	.+8      	; 0x188c <vfprintf+0x2f6>
    1884:	83 2f       	mov	r24, r19
    1886:	86 78       	andi	r24, 0x86	; 134
    1888:	09 f0       	breq	.+2      	; 0x188c <vfprintf+0x2f6>
    188a:	b3 94       	inc	r11
    188c:	33 fd       	sbrc	r19, 3
    188e:	12 c0       	rjmp	.+36     	; 0x18b4 <vfprintf+0x31e>
    1890:	30 ff       	sbrs	r19, 0
    1892:	06 c0       	rjmp	.+12     	; 0x18a0 <vfprintf+0x30a>
    1894:	5a 2c       	mov	r5, r10
    1896:	b3 14       	cp	r11, r3
    1898:	18 f4       	brcc	.+6      	; 0x18a0 <vfprintf+0x30a>
    189a:	53 0c       	add	r5, r3
    189c:	5b 18       	sub	r5, r11
    189e:	b3 2c       	mov	r11, r3
    18a0:	b3 14       	cp	r11, r3
    18a2:	60 f4       	brcc	.+24     	; 0x18bc <vfprintf+0x326>
    18a4:	b7 01       	movw	r22, r14
    18a6:	80 e2       	ldi	r24, 0x20	; 32
    18a8:	90 e0       	ldi	r25, 0x00	; 0
    18aa:	3c 87       	std	Y+12, r19	; 0x0c
    18ac:	90 d3       	rcall	.+1824   	; 0x1fce <fputc>
    18ae:	b3 94       	inc	r11
    18b0:	3c 85       	ldd	r19, Y+12	; 0x0c
    18b2:	f6 cf       	rjmp	.-20     	; 0x18a0 <vfprintf+0x30a>
    18b4:	b3 14       	cp	r11, r3
    18b6:	10 f4       	brcc	.+4      	; 0x18bc <vfprintf+0x326>
    18b8:	3b 18       	sub	r3, r11
    18ba:	01 c0       	rjmp	.+2      	; 0x18be <vfprintf+0x328>
    18bc:	31 2c       	mov	r3, r1
    18be:	34 ff       	sbrs	r19, 4
    18c0:	11 c0       	rjmp	.+34     	; 0x18e4 <vfprintf+0x34e>
    18c2:	b7 01       	movw	r22, r14
    18c4:	80 e3       	ldi	r24, 0x30	; 48
    18c6:	90 e0       	ldi	r25, 0x00	; 0
    18c8:	3c 87       	std	Y+12, r19	; 0x0c
    18ca:	81 d3       	rcall	.+1794   	; 0x1fce <fputc>
    18cc:	3c 85       	ldd	r19, Y+12	; 0x0c
    18ce:	32 ff       	sbrs	r19, 2
    18d0:	16 c0       	rjmp	.+44     	; 0x18fe <vfprintf+0x368>
    18d2:	31 fd       	sbrc	r19, 1
    18d4:	03 c0       	rjmp	.+6      	; 0x18dc <vfprintf+0x346>
    18d6:	88 e7       	ldi	r24, 0x78	; 120
    18d8:	90 e0       	ldi	r25, 0x00	; 0
    18da:	02 c0       	rjmp	.+4      	; 0x18e0 <vfprintf+0x34a>
    18dc:	88 e5       	ldi	r24, 0x58	; 88
    18de:	90 e0       	ldi	r25, 0x00	; 0
    18e0:	b7 01       	movw	r22, r14
    18e2:	0c c0       	rjmp	.+24     	; 0x18fc <vfprintf+0x366>
    18e4:	83 2f       	mov	r24, r19
    18e6:	86 78       	andi	r24, 0x86	; 134
    18e8:	51 f0       	breq	.+20     	; 0x18fe <vfprintf+0x368>
    18ea:	31 ff       	sbrs	r19, 1
    18ec:	02 c0       	rjmp	.+4      	; 0x18f2 <vfprintf+0x35c>
    18ee:	8b e2       	ldi	r24, 0x2B	; 43
    18f0:	01 c0       	rjmp	.+2      	; 0x18f4 <vfprintf+0x35e>
    18f2:	80 e2       	ldi	r24, 0x20	; 32
    18f4:	37 fd       	sbrc	r19, 7
    18f6:	8d e2       	ldi	r24, 0x2D	; 45
    18f8:	b7 01       	movw	r22, r14
    18fa:	90 e0       	ldi	r25, 0x00	; 0
    18fc:	68 d3       	rcall	.+1744   	; 0x1fce <fputc>
    18fe:	a5 14       	cp	r10, r5
    1900:	30 f4       	brcc	.+12     	; 0x190e <vfprintf+0x378>
    1902:	b7 01       	movw	r22, r14
    1904:	80 e3       	ldi	r24, 0x30	; 48
    1906:	90 e0       	ldi	r25, 0x00	; 0
    1908:	62 d3       	rcall	.+1732   	; 0x1fce <fputc>
    190a:	5a 94       	dec	r5
    190c:	f8 cf       	rjmp	.-16     	; 0x18fe <vfprintf+0x368>
    190e:	aa 94       	dec	r10
    1910:	f4 01       	movw	r30, r8
    1912:	ea 0d       	add	r30, r10
    1914:	f1 1d       	adc	r31, r1
    1916:	80 81       	ld	r24, Z
    1918:	b7 01       	movw	r22, r14
    191a:	90 e0       	ldi	r25, 0x00	; 0
    191c:	58 d3       	rcall	.+1712   	; 0x1fce <fputc>
    191e:	a1 10       	cpse	r10, r1
    1920:	f6 cf       	rjmp	.-20     	; 0x190e <vfprintf+0x378>
    1922:	33 20       	and	r3, r3
    1924:	09 f4       	brne	.+2      	; 0x1928 <vfprintf+0x392>
    1926:	5d ce       	rjmp	.-838    	; 0x15e2 <vfprintf+0x4c>
    1928:	b7 01       	movw	r22, r14
    192a:	80 e2       	ldi	r24, 0x20	; 32
    192c:	90 e0       	ldi	r25, 0x00	; 0
    192e:	4f d3       	rcall	.+1694   	; 0x1fce <fputc>
    1930:	3a 94       	dec	r3
    1932:	f7 cf       	rjmp	.-18     	; 0x1922 <vfprintf+0x38c>
    1934:	f7 01       	movw	r30, r14
    1936:	86 81       	ldd	r24, Z+6	; 0x06
    1938:	97 81       	ldd	r25, Z+7	; 0x07
    193a:	02 c0       	rjmp	.+4      	; 0x1940 <vfprintf+0x3aa>
    193c:	8f ef       	ldi	r24, 0xFF	; 255
    193e:	9f ef       	ldi	r25, 0xFF	; 255
    1940:	2c 96       	adiw	r28, 0x0c	; 12
    1942:	0f b6       	in	r0, 0x3f	; 63
    1944:	f8 94       	cli
    1946:	de bf       	out	0x3e, r29	; 62
    1948:	0f be       	out	0x3f, r0	; 63
    194a:	cd bf       	out	0x3d, r28	; 61
    194c:	df 91       	pop	r29
    194e:	cf 91       	pop	r28
    1950:	1f 91       	pop	r17
    1952:	0f 91       	pop	r16
    1954:	ff 90       	pop	r15
    1956:	ef 90       	pop	r14
    1958:	df 90       	pop	r13
    195a:	cf 90       	pop	r12
    195c:	bf 90       	pop	r11
    195e:	af 90       	pop	r10
    1960:	9f 90       	pop	r9
    1962:	8f 90       	pop	r8
    1964:	7f 90       	pop	r7
    1966:	6f 90       	pop	r6
    1968:	5f 90       	pop	r5
    196a:	4f 90       	pop	r4
    196c:	3f 90       	pop	r3
    196e:	2f 90       	pop	r2
    1970:	08 95       	ret

00001972 <putval>:
    1972:	20 fd       	sbrc	r18, 0
    1974:	09 c0       	rjmp	.+18     	; 0x1988 <putval+0x16>
    1976:	fc 01       	movw	r30, r24
    1978:	23 fd       	sbrc	r18, 3
    197a:	05 c0       	rjmp	.+10     	; 0x1986 <putval+0x14>
    197c:	22 ff       	sbrs	r18, 2
    197e:	02 c0       	rjmp	.+4      	; 0x1984 <putval+0x12>
    1980:	73 83       	std	Z+3, r23	; 0x03
    1982:	62 83       	std	Z+2, r22	; 0x02
    1984:	51 83       	std	Z+1, r21	; 0x01
    1986:	40 83       	st	Z, r20
    1988:	08 95       	ret

0000198a <mulacc>:
    198a:	44 fd       	sbrc	r20, 4
    198c:	10 c0       	rjmp	.+32     	; 0x19ae <mulacc+0x24>
    198e:	46 fd       	sbrc	r20, 6
    1990:	10 c0       	rjmp	.+32     	; 0x19b2 <mulacc+0x28>
    1992:	db 01       	movw	r26, r22
    1994:	fc 01       	movw	r30, r24
    1996:	aa 0f       	add	r26, r26
    1998:	bb 1f       	adc	r27, r27
    199a:	ee 1f       	adc	r30, r30
    199c:	ff 1f       	adc	r31, r31
    199e:	10 94       	com	r1
    19a0:	d1 f7       	brne	.-12     	; 0x1996 <mulacc+0xc>
    19a2:	6a 0f       	add	r22, r26
    19a4:	7b 1f       	adc	r23, r27
    19a6:	8e 1f       	adc	r24, r30
    19a8:	9f 1f       	adc	r25, r31
    19aa:	31 e0       	ldi	r19, 0x01	; 1
    19ac:	03 c0       	rjmp	.+6      	; 0x19b4 <mulacc+0x2a>
    19ae:	33 e0       	ldi	r19, 0x03	; 3
    19b0:	01 c0       	rjmp	.+2      	; 0x19b4 <mulacc+0x2a>
    19b2:	34 e0       	ldi	r19, 0x04	; 4
    19b4:	66 0f       	add	r22, r22
    19b6:	77 1f       	adc	r23, r23
    19b8:	88 1f       	adc	r24, r24
    19ba:	99 1f       	adc	r25, r25
    19bc:	31 50       	subi	r19, 0x01	; 1
    19be:	d1 f7       	brne	.-12     	; 0x19b4 <mulacc+0x2a>
    19c0:	62 0f       	add	r22, r18
    19c2:	71 1d       	adc	r23, r1
    19c4:	81 1d       	adc	r24, r1
    19c6:	91 1d       	adc	r25, r1
    19c8:	08 95       	ret

000019ca <skip_spaces>:
    19ca:	0f 93       	push	r16
    19cc:	1f 93       	push	r17
    19ce:	cf 93       	push	r28
    19d0:	df 93       	push	r29
    19d2:	8c 01       	movw	r16, r24
    19d4:	c8 01       	movw	r24, r16
    19d6:	bd d2       	rcall	.+1402   	; 0x1f52 <fgetc>
    19d8:	ec 01       	movw	r28, r24
    19da:	97 fd       	sbrc	r25, 7
    19dc:	06 c0       	rjmp	.+12     	; 0x19ea <skip_spaces+0x20>
    19de:	90 d2       	rcall	.+1312   	; 0x1f00 <isspace>
    19e0:	89 2b       	or	r24, r25
    19e2:	c1 f7       	brne	.-16     	; 0x19d4 <skip_spaces+0xa>
    19e4:	b8 01       	movw	r22, r16
    19e6:	ce 01       	movw	r24, r28
    19e8:	2a d3       	rcall	.+1620   	; 0x203e <ungetc>
    19ea:	ce 01       	movw	r24, r28
    19ec:	df 91       	pop	r29
    19ee:	cf 91       	pop	r28
    19f0:	1f 91       	pop	r17
    19f2:	0f 91       	pop	r16
    19f4:	08 95       	ret

000019f6 <conv_int>:
    19f6:	8f 92       	push	r8
    19f8:	9f 92       	push	r9
    19fa:	af 92       	push	r10
    19fc:	bf 92       	push	r11
    19fe:	cf 92       	push	r12
    1a00:	df 92       	push	r13
    1a02:	ef 92       	push	r14
    1a04:	ff 92       	push	r15
    1a06:	0f 93       	push	r16
    1a08:	1f 93       	push	r17
    1a0a:	cf 93       	push	r28
    1a0c:	df 93       	push	r29
    1a0e:	1f 92       	push	r1
    1a10:	cd b7       	in	r28, 0x3d	; 61
    1a12:	de b7       	in	r29, 0x3e	; 62
    1a14:	8c 01       	movw	r16, r24
    1a16:	c6 2e       	mov	r12, r22
    1a18:	7a 01       	movw	r14, r20
    1a1a:	29 83       	std	Y+1, r18	; 0x01
    1a1c:	9a d2       	rcall	.+1332   	; 0x1f52 <fgetc>
    1a1e:	ac 01       	movw	r20, r24
    1a20:	55 27       	eor	r21, r21
    1a22:	29 81       	ldd	r18, Y+1	; 0x01
    1a24:	4b 32       	cpi	r20, 0x2B	; 43
    1a26:	51 05       	cpc	r21, r1
    1a28:	21 f0       	breq	.+8      	; 0x1a32 <conv_int+0x3c>
    1a2a:	4d 32       	cpi	r20, 0x2D	; 45
    1a2c:	51 05       	cpc	r21, r1
    1a2e:	61 f4       	brne	.+24     	; 0x1a48 <conv_int+0x52>
    1a30:	20 68       	ori	r18, 0x80	; 128
    1a32:	ca 94       	dec	r12
    1a34:	c1 10       	cpse	r12, r1
    1a36:	02 c0       	rjmp	.+4      	; 0x1a3c <conv_int+0x46>
    1a38:	80 e0       	ldi	r24, 0x00	; 0
    1a3a:	6f c0       	rjmp	.+222    	; 0x1b1a <conv_int+0x124>
    1a3c:	c8 01       	movw	r24, r16
    1a3e:	29 83       	std	Y+1, r18	; 0x01
    1a40:	88 d2       	rcall	.+1296   	; 0x1f52 <fgetc>
    1a42:	29 81       	ldd	r18, Y+1	; 0x01
    1a44:	97 fd       	sbrc	r25, 7
    1a46:	f8 cf       	rjmp	.-16     	; 0x1a38 <conv_int+0x42>
    1a48:	32 2f       	mov	r19, r18
    1a4a:	3d 7f       	andi	r19, 0xFD	; 253
    1a4c:	d3 2e       	mov	r13, r19
    1a4e:	32 2f       	mov	r19, r18
    1a50:	30 73       	andi	r19, 0x30	; 48
    1a52:	39 f5       	brne	.+78     	; 0x1aa2 <conv_int+0xac>
    1a54:	80 33       	cpi	r24, 0x30	; 48
    1a56:	29 f5       	brne	.+74     	; 0x1aa2 <conv_int+0xac>
    1a58:	bb 24       	eor	r11, r11
    1a5a:	ba 94       	dec	r11
    1a5c:	bc 0c       	add	r11, r12
    1a5e:	09 f4       	brne	.+2      	; 0x1a62 <conv_int+0x6c>
    1a60:	49 c0       	rjmp	.+146    	; 0x1af4 <conv_int+0xfe>
    1a62:	c8 01       	movw	r24, r16
    1a64:	29 83       	std	Y+1, r18	; 0x01
    1a66:	75 d2       	rcall	.+1258   	; 0x1f52 <fgetc>
    1a68:	29 81       	ldd	r18, Y+1	; 0x01
    1a6a:	97 fd       	sbrc	r25, 7
    1a6c:	43 c0       	rjmp	.+134    	; 0x1af4 <conv_int+0xfe>
    1a6e:	38 2f       	mov	r19, r24
    1a70:	3f 7d       	andi	r19, 0xDF	; 223
    1a72:	38 35       	cpi	r19, 0x58	; 88
    1a74:	61 f4       	brne	.+24     	; 0x1a8e <conv_int+0x98>
    1a76:	8d 2d       	mov	r24, r13
    1a78:	82 64       	ori	r24, 0x42	; 66
    1a7a:	d8 2e       	mov	r13, r24
    1a7c:	ca 94       	dec	r12
    1a7e:	ca 94       	dec	r12
    1a80:	cc 20       	and	r12, r12
    1a82:	c1 f1       	breq	.+112    	; 0x1af4 <conv_int+0xfe>
    1a84:	c8 01       	movw	r24, r16
    1a86:	65 d2       	rcall	.+1226   	; 0x1f52 <fgetc>
    1a88:	97 ff       	sbrs	r25, 7
    1a8a:	0b c0       	rjmp	.+22     	; 0x1aa2 <conv_int+0xac>
    1a8c:	33 c0       	rjmp	.+102    	; 0x1af4 <conv_int+0xfe>
    1a8e:	26 ff       	sbrs	r18, 6
    1a90:	04 c0       	rjmp	.+8      	; 0x1a9a <conv_int+0xa4>
    1a92:	2d 2d       	mov	r18, r13
    1a94:	22 60       	ori	r18, 0x02	; 2
    1a96:	d2 2e       	mov	r13, r18
    1a98:	03 c0       	rjmp	.+6      	; 0x1aa0 <conv_int+0xaa>
    1a9a:	3d 2d       	mov	r19, r13
    1a9c:	32 61       	ori	r19, 0x12	; 18
    1a9e:	d3 2e       	mov	r13, r19
    1aa0:	cb 2c       	mov	r12, r11
    1aa2:	81 2c       	mov	r8, r1
    1aa4:	91 2c       	mov	r9, r1
    1aa6:	54 01       	movw	r10, r8
    1aa8:	20 ed       	ldi	r18, 0xD0	; 208
    1aaa:	28 0f       	add	r18, r24
    1aac:	28 30       	cpi	r18, 0x08	; 8
    1aae:	78 f0       	brcs	.+30     	; 0x1ace <conv_int+0xd8>
    1ab0:	d4 fe       	sbrs	r13, 4
    1ab2:	03 c0       	rjmp	.+6      	; 0x1aba <conv_int+0xc4>
    1ab4:	b8 01       	movw	r22, r16
    1ab6:	c3 d2       	rcall	.+1414   	; 0x203e <ungetc>
    1ab8:	1a c0       	rjmp	.+52     	; 0x1aee <conv_int+0xf8>
    1aba:	2a 30       	cpi	r18, 0x0A	; 10
    1abc:	40 f0       	brcs	.+16     	; 0x1ace <conv_int+0xd8>
    1abe:	d6 fe       	sbrs	r13, 6
    1ac0:	f9 cf       	rjmp	.-14     	; 0x1ab4 <conv_int+0xbe>
    1ac2:	2f 7d       	andi	r18, 0xDF	; 223
    1ac4:	3f ee       	ldi	r19, 0xEF	; 239
    1ac6:	32 0f       	add	r19, r18
    1ac8:	36 30       	cpi	r19, 0x06	; 6
    1aca:	a0 f7       	brcc	.-24     	; 0x1ab4 <conv_int+0xbe>
    1acc:	27 50       	subi	r18, 0x07	; 7
    1ace:	4d 2d       	mov	r20, r13
    1ad0:	c5 01       	movw	r24, r10
    1ad2:	b4 01       	movw	r22, r8
    1ad4:	5a df       	rcall	.-332    	; 0x198a <mulacc>
    1ad6:	4b 01       	movw	r8, r22
    1ad8:	5c 01       	movw	r10, r24
    1ada:	8d 2d       	mov	r24, r13
    1adc:	82 60       	ori	r24, 0x02	; 2
    1ade:	d8 2e       	mov	r13, r24
    1ae0:	ca 94       	dec	r12
    1ae2:	cc 20       	and	r12, r12
    1ae4:	51 f0       	breq	.+20     	; 0x1afa <conv_int+0x104>
    1ae6:	c8 01       	movw	r24, r16
    1ae8:	34 d2       	rcall	.+1128   	; 0x1f52 <fgetc>
    1aea:	97 ff       	sbrs	r25, 7
    1aec:	dd cf       	rjmp	.-70     	; 0x1aa8 <conv_int+0xb2>
    1aee:	d1 fc       	sbrc	r13, 1
    1af0:	04 c0       	rjmp	.+8      	; 0x1afa <conv_int+0x104>
    1af2:	a2 cf       	rjmp	.-188    	; 0x1a38 <conv_int+0x42>
    1af4:	81 2c       	mov	r8, r1
    1af6:	91 2c       	mov	r9, r1
    1af8:	54 01       	movw	r10, r8
    1afa:	d7 fe       	sbrs	r13, 7
    1afc:	08 c0       	rjmp	.+16     	; 0x1b0e <conv_int+0x118>
    1afe:	b0 94       	com	r11
    1b00:	a0 94       	com	r10
    1b02:	90 94       	com	r9
    1b04:	80 94       	com	r8
    1b06:	81 1c       	adc	r8, r1
    1b08:	91 1c       	adc	r9, r1
    1b0a:	a1 1c       	adc	r10, r1
    1b0c:	b1 1c       	adc	r11, r1
    1b0e:	2d 2d       	mov	r18, r13
    1b10:	b5 01       	movw	r22, r10
    1b12:	a4 01       	movw	r20, r8
    1b14:	c7 01       	movw	r24, r14
    1b16:	2d df       	rcall	.-422    	; 0x1972 <putval>
    1b18:	81 e0       	ldi	r24, 0x01	; 1
    1b1a:	0f 90       	pop	r0
    1b1c:	df 91       	pop	r29
    1b1e:	cf 91       	pop	r28
    1b20:	1f 91       	pop	r17
    1b22:	0f 91       	pop	r16
    1b24:	ff 90       	pop	r15
    1b26:	ef 90       	pop	r14
    1b28:	df 90       	pop	r13
    1b2a:	cf 90       	pop	r12
    1b2c:	bf 90       	pop	r11
    1b2e:	af 90       	pop	r10
    1b30:	9f 90       	pop	r9
    1b32:	8f 90       	pop	r8
    1b34:	08 95       	ret

00001b36 <conv_brk>:
    1b36:	6f 92       	push	r6
    1b38:	7f 92       	push	r7
    1b3a:	8f 92       	push	r8
    1b3c:	9f 92       	push	r9
    1b3e:	af 92       	push	r10
    1b40:	bf 92       	push	r11
    1b42:	cf 92       	push	r12
    1b44:	df 92       	push	r13
    1b46:	ef 92       	push	r14
    1b48:	ff 92       	push	r15
    1b4a:	0f 93       	push	r16
    1b4c:	1f 93       	push	r17
    1b4e:	cf 93       	push	r28
    1b50:	df 93       	push	r29
    1b52:	cd b7       	in	r28, 0x3d	; 61
    1b54:	de b7       	in	r29, 0x3e	; 62
    1b56:	a1 97       	sbiw	r28, 0x21	; 33
    1b58:	0f b6       	in	r0, 0x3f	; 63
    1b5a:	f8 94       	cli
    1b5c:	de bf       	out	0x3e, r29	; 62
    1b5e:	0f be       	out	0x3f, r0	; 63
    1b60:	cd bf       	out	0x3d, r28	; 61
    1b62:	5c 01       	movw	r10, r24
    1b64:	7a 01       	movw	r14, r20
    1b66:	ce 01       	movw	r24, r28
    1b68:	01 96       	adiw	r24, 0x01	; 1
    1b6a:	6c 01       	movw	r12, r24
    1b6c:	80 e2       	ldi	r24, 0x20	; 32
    1b6e:	f6 01       	movw	r30, r12
    1b70:	11 92       	st	Z+, r1
    1b72:	8a 95       	dec	r24
    1b74:	e9 f7       	brne	.-6      	; 0x1b70 <conv_brk+0x3a>
    1b76:	f5 01       	movw	r30, r10
    1b78:	83 80       	ldd	r8, Z+3	; 0x03
    1b7a:	40 e0       	ldi	r20, 0x00	; 0
    1b7c:	50 e0       	ldi	r21, 0x00	; 0
    1b7e:	91 2c       	mov	r9, r1
    1b80:	71 2c       	mov	r7, r1
    1b82:	70 e0       	ldi	r23, 0x00	; 0
    1b84:	a1 e0       	ldi	r26, 0x01	; 1
    1b86:	b0 e0       	ldi	r27, 0x00	; 0
    1b88:	f9 01       	movw	r30, r18
    1b8a:	83 fc       	sbrc	r8, 3
    1b8c:	85 91       	lpm	r24, Z+
    1b8e:	83 fe       	sbrs	r8, 3
    1b90:	81 91       	ld	r24, Z+
    1b92:	8f 01       	movw	r16, r30
    1b94:	98 2f       	mov	r25, r24
    1b96:	9f 01       	movw	r18, r30
    1b98:	81 11       	cpse	r24, r1
    1b9a:	03 c0       	rjmp	.+6      	; 0x1ba2 <conv_brk+0x6c>
    1b9c:	80 e0       	ldi	r24, 0x00	; 0
    1b9e:	90 e0       	ldi	r25, 0x00	; 0
    1ba0:	7a c0       	rjmp	.+244    	; 0x1c96 <conv_brk+0x160>
    1ba2:	8e 35       	cpi	r24, 0x5E	; 94
    1ba4:	19 f4       	brne	.+6      	; 0x1bac <conv_brk+0x76>
    1ba6:	41 15       	cp	r20, r1
    1ba8:	51 05       	cpc	r21, r1
    1baa:	49 f1       	breq	.+82     	; 0x1bfe <conv_brk+0xc8>
    1bac:	e7 2f       	mov	r30, r23
    1bae:	f0 e0       	ldi	r31, 0x00	; 0
    1bb0:	e4 17       	cp	r30, r20
    1bb2:	f5 07       	cpc	r31, r21
    1bb4:	3c f4       	brge	.+14     	; 0x1bc4 <conv_brk+0x8e>
    1bb6:	8d 35       	cpi	r24, 0x5D	; 93
    1bb8:	59 f1       	breq	.+86     	; 0x1c10 <conv_brk+0xda>
    1bba:	8d 32       	cpi	r24, 0x2D	; 45
    1bbc:	19 f4       	brne	.+6      	; 0x1bc4 <conv_brk+0x8e>
    1bbe:	77 20       	and	r7, r7
    1bc0:	01 f1       	breq	.+64     	; 0x1c02 <conv_brk+0xcc>
    1bc2:	03 c0       	rjmp	.+6      	; 0x1bca <conv_brk+0x94>
    1bc4:	71 10       	cpse	r7, r1
    1bc6:	01 c0       	rjmp	.+2      	; 0x1bca <conv_brk+0x94>
    1bc8:	98 2e       	mov	r9, r24
    1bca:	89 2f       	mov	r24, r25
    1bcc:	86 95       	lsr	r24
    1bce:	86 95       	lsr	r24
    1bd0:	86 95       	lsr	r24
    1bd2:	86 01       	movw	r16, r12
    1bd4:	08 0f       	add	r16, r24
    1bd6:	11 1d       	adc	r17, r1
    1bd8:	89 2f       	mov	r24, r25
    1bda:	87 70       	andi	r24, 0x07	; 7
    1bdc:	3d 01       	movw	r6, r26
    1bde:	01 c0       	rjmp	.+2      	; 0x1be2 <conv_brk+0xac>
    1be0:	66 0c       	add	r6, r6
    1be2:	8a 95       	dec	r24
    1be4:	ea f7       	brpl	.-6      	; 0x1be0 <conv_brk+0xaa>
    1be6:	f8 01       	movw	r30, r16
    1be8:	80 81       	ld	r24, Z
    1bea:	86 29       	or	r24, r6
    1bec:	80 83       	st	Z, r24
    1bee:	99 15       	cp	r25, r9
    1bf0:	59 f0       	breq	.+22     	; 0x1c08 <conv_brk+0xd2>
    1bf2:	99 15       	cp	r25, r9
    1bf4:	10 f4       	brcc	.+4      	; 0x1bfa <conv_brk+0xc4>
    1bf6:	9f 5f       	subi	r25, 0xFF	; 255
    1bf8:	e8 cf       	rjmp	.-48     	; 0x1bca <conv_brk+0x94>
    1bfa:	91 50       	subi	r25, 0x01	; 1
    1bfc:	e6 cf       	rjmp	.-52     	; 0x1bca <conv_brk+0x94>
    1bfe:	71 e0       	ldi	r23, 0x01	; 1
    1c00:	04 c0       	rjmp	.+8      	; 0x1c0a <conv_brk+0xd4>
    1c02:	77 24       	eor	r7, r7
    1c04:	73 94       	inc	r7
    1c06:	01 c0       	rjmp	.+2      	; 0x1c0a <conv_brk+0xd4>
    1c08:	71 2c       	mov	r7, r1
    1c0a:	4f 5f       	subi	r20, 0xFF	; 255
    1c0c:	5f 4f       	sbci	r21, 0xFF	; 255
    1c0e:	bc cf       	rjmp	.-136    	; 0x1b88 <conv_brk+0x52>
    1c10:	77 20       	and	r7, r7
    1c12:	19 f0       	breq	.+6      	; 0x1c1a <conv_brk+0xe4>
    1c14:	8e 81       	ldd	r24, Y+6	; 0x06
    1c16:	80 62       	ori	r24, 0x20	; 32
    1c18:	8e 83       	std	Y+6, r24	; 0x06
    1c1a:	71 11       	cpse	r23, r1
    1c1c:	03 c0       	rjmp	.+6      	; 0x1c24 <conv_brk+0xee>
    1c1e:	99 24       	eor	r9, r9
    1c20:	93 94       	inc	r9
    1c22:	16 c0       	rjmp	.+44     	; 0x1c50 <conv_brk+0x11a>
    1c24:	f6 01       	movw	r30, r12
    1c26:	9e 01       	movw	r18, r28
    1c28:	2f 5d       	subi	r18, 0xDF	; 223
    1c2a:	3f 4f       	sbci	r19, 0xFF	; 255
    1c2c:	80 81       	ld	r24, Z
    1c2e:	80 95       	com	r24
    1c30:	81 93       	st	Z+, r24
    1c32:	e2 17       	cp	r30, r18
    1c34:	f3 07       	cpc	r31, r19
    1c36:	d1 f7       	brne	.-12     	; 0x1c2c <conv_brk+0xf6>
    1c38:	f2 cf       	rjmp	.-28     	; 0x1c1e <conv_brk+0xe8>
    1c3a:	e1 14       	cp	r14, r1
    1c3c:	f1 04       	cpc	r15, r1
    1c3e:	29 f0       	breq	.+10     	; 0x1c4a <conv_brk+0x114>
    1c40:	f7 01       	movw	r30, r14
    1c42:	80 83       	st	Z, r24
    1c44:	c7 01       	movw	r24, r14
    1c46:	01 96       	adiw	r24, 0x01	; 1
    1c48:	7c 01       	movw	r14, r24
    1c4a:	61 50       	subi	r22, 0x01	; 1
    1c4c:	91 2c       	mov	r9, r1
    1c4e:	e9 f0       	breq	.+58     	; 0x1c8a <conv_brk+0x154>
    1c50:	c5 01       	movw	r24, r10
    1c52:	69 a3       	std	Y+33, r22	; 0x21
    1c54:	7e d1       	rcall	.+764    	; 0x1f52 <fgetc>
    1c56:	69 a1       	ldd	r22, Y+33	; 0x21
    1c58:	97 fd       	sbrc	r25, 7
    1c5a:	15 c0       	rjmp	.+42     	; 0x1c86 <conv_brk+0x150>
    1c5c:	28 2f       	mov	r18, r24
    1c5e:	26 95       	lsr	r18
    1c60:	26 95       	lsr	r18
    1c62:	26 95       	lsr	r18
    1c64:	f6 01       	movw	r30, r12
    1c66:	e2 0f       	add	r30, r18
    1c68:	f1 1d       	adc	r31, r1
    1c6a:	20 81       	ld	r18, Z
    1c6c:	30 e0       	ldi	r19, 0x00	; 0
    1c6e:	ac 01       	movw	r20, r24
    1c70:	47 70       	andi	r20, 0x07	; 7
    1c72:	55 27       	eor	r21, r21
    1c74:	02 c0       	rjmp	.+4      	; 0x1c7a <conv_brk+0x144>
    1c76:	35 95       	asr	r19
    1c78:	27 95       	ror	r18
    1c7a:	4a 95       	dec	r20
    1c7c:	e2 f7       	brpl	.-8      	; 0x1c76 <conv_brk+0x140>
    1c7e:	20 fd       	sbrc	r18, 0
    1c80:	dc cf       	rjmp	.-72     	; 0x1c3a <conv_brk+0x104>
    1c82:	b5 01       	movw	r22, r10
    1c84:	dc d1       	rcall	.+952    	; 0x203e <ungetc>
    1c86:	91 10       	cpse	r9, r1
    1c88:	89 cf       	rjmp	.-238    	; 0x1b9c <conv_brk+0x66>
    1c8a:	e1 14       	cp	r14, r1
    1c8c:	f1 04       	cpc	r15, r1
    1c8e:	11 f0       	breq	.+4      	; 0x1c94 <conv_brk+0x15e>
    1c90:	f7 01       	movw	r30, r14
    1c92:	10 82       	st	Z, r1
    1c94:	c8 01       	movw	r24, r16
    1c96:	a1 96       	adiw	r28, 0x21	; 33
    1c98:	0f b6       	in	r0, 0x3f	; 63
    1c9a:	f8 94       	cli
    1c9c:	de bf       	out	0x3e, r29	; 62
    1c9e:	0f be       	out	0x3f, r0	; 63
    1ca0:	cd bf       	out	0x3d, r28	; 61
    1ca2:	df 91       	pop	r29
    1ca4:	cf 91       	pop	r28
    1ca6:	1f 91       	pop	r17
    1ca8:	0f 91       	pop	r16
    1caa:	ff 90       	pop	r15
    1cac:	ef 90       	pop	r14
    1cae:	df 90       	pop	r13
    1cb0:	cf 90       	pop	r12
    1cb2:	bf 90       	pop	r11
    1cb4:	af 90       	pop	r10
    1cb6:	9f 90       	pop	r9
    1cb8:	8f 90       	pop	r8
    1cba:	7f 90       	pop	r7
    1cbc:	6f 90       	pop	r6
    1cbe:	08 95       	ret

00001cc0 <vfscanf>:
    1cc0:	4f 92       	push	r4
    1cc2:	5f 92       	push	r5
    1cc4:	7f 92       	push	r7
    1cc6:	8f 92       	push	r8
    1cc8:	9f 92       	push	r9
    1cca:	af 92       	push	r10
    1ccc:	bf 92       	push	r11
    1cce:	cf 92       	push	r12
    1cd0:	df 92       	push	r13
    1cd2:	ef 92       	push	r14
    1cd4:	ff 92       	push	r15
    1cd6:	0f 93       	push	r16
    1cd8:	1f 93       	push	r17
    1cda:	cf 93       	push	r28
    1cdc:	df 93       	push	r29
    1cde:	1f 92       	push	r1
    1ce0:	cd b7       	in	r28, 0x3d	; 61
    1ce2:	de b7       	in	r29, 0x3e	; 62
    1ce4:	6c 01       	movw	r12, r24
    1ce6:	2b 01       	movw	r4, r22
    1ce8:	5a 01       	movw	r10, r20
    1cea:	fc 01       	movw	r30, r24
    1cec:	17 82       	std	Z+7, r1	; 0x07
    1cee:	16 82       	std	Z+6, r1	; 0x06
    1cf0:	71 2c       	mov	r7, r1
    1cf2:	f6 01       	movw	r30, r12
    1cf4:	f3 80       	ldd	r15, Z+3	; 0x03
    1cf6:	f2 01       	movw	r30, r4
    1cf8:	f3 fc       	sbrc	r15, 3
    1cfa:	85 91       	lpm	r24, Z+
    1cfc:	f3 fe       	sbrs	r15, 3
    1cfe:	81 91       	ld	r24, Z+
    1d00:	38 2f       	mov	r19, r24
    1d02:	2f 01       	movw	r4, r30
    1d04:	88 23       	and	r24, r24
    1d06:	09 f4       	brne	.+2      	; 0x1d0a <vfscanf+0x4a>
    1d08:	e5 c0       	rjmp	.+458    	; 0x1ed4 <vfscanf+0x214>
    1d0a:	90 e0       	ldi	r25, 0x00	; 0
    1d0c:	39 83       	std	Y+1, r19	; 0x01
    1d0e:	f8 d0       	rcall	.+496    	; 0x1f00 <isspace>
    1d10:	39 81       	ldd	r19, Y+1	; 0x01
    1d12:	89 2b       	or	r24, r25
    1d14:	19 f0       	breq	.+6      	; 0x1d1c <vfscanf+0x5c>
    1d16:	c6 01       	movw	r24, r12
    1d18:	58 de       	rcall	.-848    	; 0x19ca <skip_spaces>
    1d1a:	eb cf       	rjmp	.-42     	; 0x1cf2 <vfscanf+0x32>
    1d1c:	35 32       	cpi	r19, 0x25	; 37
    1d1e:	41 f4       	brne	.+16     	; 0x1d30 <vfscanf+0x70>
    1d20:	f2 01       	movw	r30, r4
    1d22:	f3 fc       	sbrc	r15, 3
    1d24:	35 91       	lpm	r19, Z+
    1d26:	f3 fe       	sbrs	r15, 3
    1d28:	31 91       	ld	r19, Z+
    1d2a:	2f 01       	movw	r4, r30
    1d2c:	35 32       	cpi	r19, 0x25	; 37
    1d2e:	59 f4       	brne	.+22     	; 0x1d46 <vfscanf+0x86>
    1d30:	c6 01       	movw	r24, r12
    1d32:	39 83       	std	Y+1, r19	; 0x01
    1d34:	0e d1       	rcall	.+540    	; 0x1f52 <fgetc>
    1d36:	39 81       	ldd	r19, Y+1	; 0x01
    1d38:	97 fd       	sbrc	r25, 7
    1d3a:	ca c0       	rjmp	.+404    	; 0x1ed0 <vfscanf+0x210>
    1d3c:	38 17       	cp	r19, r24
    1d3e:	c9 f2       	breq	.-78     	; 0x1cf2 <vfscanf+0x32>
    1d40:	b6 01       	movw	r22, r12
    1d42:	7d d1       	rcall	.+762    	; 0x203e <ungetc>
    1d44:	c7 c0       	rjmp	.+398    	; 0x1ed4 <vfscanf+0x214>
    1d46:	3a 32       	cpi	r19, 0x2A	; 42
    1d48:	39 f4       	brne	.+14     	; 0x1d58 <vfscanf+0x98>
    1d4a:	f3 fc       	sbrc	r15, 3
    1d4c:	35 91       	lpm	r19, Z+
    1d4e:	f3 fe       	sbrs	r15, 3
    1d50:	31 91       	ld	r19, Z+
    1d52:	2f 01       	movw	r4, r30
    1d54:	51 e0       	ldi	r21, 0x01	; 1
    1d56:	01 c0       	rjmp	.+2      	; 0x1d5a <vfscanf+0x9a>
    1d58:	50 e0       	ldi	r21, 0x00	; 0
    1d5a:	42 01       	movw	r8, r4
    1d5c:	10 e0       	ldi	r17, 0x00	; 0
    1d5e:	20 ed       	ldi	r18, 0xD0	; 208
    1d60:	23 0f       	add	r18, r19
    1d62:	2a 30       	cpi	r18, 0x0A	; 10
    1d64:	88 f4       	brcc	.+34     	; 0x1d88 <vfscanf+0xc8>
    1d66:	52 60       	ori	r21, 0x02	; 2
    1d68:	61 2f       	mov	r22, r17
    1d6a:	70 e0       	ldi	r23, 0x00	; 0
    1d6c:	80 e0       	ldi	r24, 0x00	; 0
    1d6e:	90 e0       	ldi	r25, 0x00	; 0
    1d70:	40 e2       	ldi	r20, 0x20	; 32
    1d72:	59 83       	std	Y+1, r21	; 0x01
    1d74:	0a de       	rcall	.-1004   	; 0x198a <mulacc>
    1d76:	16 2f       	mov	r17, r22
    1d78:	f4 01       	movw	r30, r8
    1d7a:	f3 fc       	sbrc	r15, 3
    1d7c:	35 91       	lpm	r19, Z+
    1d7e:	f3 fe       	sbrs	r15, 3
    1d80:	31 91       	ld	r19, Z+
    1d82:	4f 01       	movw	r8, r30
    1d84:	59 81       	ldd	r21, Y+1	; 0x01
    1d86:	eb cf       	rjmp	.-42     	; 0x1d5e <vfscanf+0x9e>
    1d88:	05 2f       	mov	r16, r21
    1d8a:	23 2f       	mov	r18, r19
    1d8c:	24 01       	movw	r4, r8
    1d8e:	51 ff       	sbrs	r21, 1
    1d90:	03 c0       	rjmp	.+6      	; 0x1d98 <vfscanf+0xd8>
    1d92:	11 11       	cpse	r17, r1
    1d94:	02 c0       	rjmp	.+4      	; 0x1d9a <vfscanf+0xda>
    1d96:	9e c0       	rjmp	.+316    	; 0x1ed4 <vfscanf+0x214>
    1d98:	1f ef       	ldi	r17, 0xFF	; 255
    1d9a:	38 36       	cpi	r19, 0x68	; 104
    1d9c:	19 f0       	breq	.+6      	; 0x1da4 <vfscanf+0xe4>
    1d9e:	3c 36       	cpi	r19, 0x6C	; 108
    1da0:	59 f0       	breq	.+22     	; 0x1db8 <vfscanf+0xf8>
    1da2:	11 c0       	rjmp	.+34     	; 0x1dc6 <vfscanf+0x106>
    1da4:	f4 01       	movw	r30, r8
    1da6:	f3 fc       	sbrc	r15, 3
    1da8:	25 91       	lpm	r18, Z+
    1daa:	f3 fe       	sbrs	r15, 3
    1dac:	21 91       	ld	r18, Z+
    1dae:	2f 01       	movw	r4, r30
    1db0:	28 36       	cpi	r18, 0x68	; 104
    1db2:	49 f4       	brne	.+18     	; 0x1dc6 <vfscanf+0x106>
    1db4:	05 2f       	mov	r16, r21
    1db6:	08 60       	ori	r16, 0x08	; 8
    1db8:	04 60       	ori	r16, 0x04	; 4
    1dba:	f2 01       	movw	r30, r4
    1dbc:	f3 fc       	sbrc	r15, 3
    1dbe:	25 91       	lpm	r18, Z+
    1dc0:	f3 fe       	sbrs	r15, 3
    1dc2:	21 91       	ld	r18, Z+
    1dc4:	2f 01       	movw	r4, r30
    1dc6:	22 23       	and	r18, r18
    1dc8:	09 f4       	brne	.+2      	; 0x1dcc <vfscanf+0x10c>
    1dca:	84 c0       	rjmp	.+264    	; 0x1ed4 <vfscanf+0x214>
    1dcc:	62 2f       	mov	r22, r18
    1dce:	70 e0       	ldi	r23, 0x00	; 0
    1dd0:	86 ef       	ldi	r24, 0xF6	; 246
    1dd2:	90 e0       	ldi	r25, 0x00	; 0
    1dd4:	29 83       	std	Y+1, r18	; 0x01
    1dd6:	9c d0       	rcall	.+312    	; 0x1f10 <strchr_P>
    1dd8:	29 81       	ldd	r18, Y+1	; 0x01
    1dda:	89 2b       	or	r24, r25
    1ddc:	09 f4       	brne	.+2      	; 0x1de0 <vfscanf+0x120>
    1dde:	7a c0       	rjmp	.+244    	; 0x1ed4 <vfscanf+0x214>
    1de0:	00 fd       	sbrc	r16, 0
    1de2:	07 c0       	rjmp	.+14     	; 0x1df2 <vfscanf+0x132>
    1de4:	f5 01       	movw	r30, r10
    1de6:	e0 80       	ld	r14, Z
    1de8:	f1 80       	ldd	r15, Z+1	; 0x01
    1dea:	c5 01       	movw	r24, r10
    1dec:	02 96       	adiw	r24, 0x02	; 2
    1dee:	5c 01       	movw	r10, r24
    1df0:	02 c0       	rjmp	.+4      	; 0x1df6 <vfscanf+0x136>
    1df2:	e1 2c       	mov	r14, r1
    1df4:	f1 2c       	mov	r15, r1
    1df6:	2e 36       	cpi	r18, 0x6E	; 110
    1df8:	49 f4       	brne	.+18     	; 0x1e0c <vfscanf+0x14c>
    1dfa:	f6 01       	movw	r30, r12
    1dfc:	46 81       	ldd	r20, Z+6	; 0x06
    1dfe:	57 81       	ldd	r21, Z+7	; 0x07
    1e00:	60 e0       	ldi	r22, 0x00	; 0
    1e02:	70 e0       	ldi	r23, 0x00	; 0
    1e04:	20 2f       	mov	r18, r16
    1e06:	c7 01       	movw	r24, r14
    1e08:	b4 dd       	rcall	.-1176   	; 0x1972 <putval>
    1e0a:	73 cf       	rjmp	.-282    	; 0x1cf2 <vfscanf+0x32>
    1e0c:	23 36       	cpi	r18, 0x63	; 99
    1e0e:	89 f4       	brne	.+34     	; 0x1e32 <vfscanf+0x172>
    1e10:	01 ff       	sbrs	r16, 1
    1e12:	11 e0       	ldi	r17, 0x01	; 1
    1e14:	c6 01       	movw	r24, r12
    1e16:	9d d0       	rcall	.+314    	; 0x1f52 <fgetc>
    1e18:	97 fd       	sbrc	r25, 7
    1e1a:	5a c0       	rjmp	.+180    	; 0x1ed0 <vfscanf+0x210>
    1e1c:	e1 14       	cp	r14, r1
    1e1e:	f1 04       	cpc	r15, r1
    1e20:	29 f0       	breq	.+10     	; 0x1e2c <vfscanf+0x16c>
    1e22:	f7 01       	movw	r30, r14
    1e24:	80 83       	st	Z, r24
    1e26:	c7 01       	movw	r24, r14
    1e28:	01 96       	adiw	r24, 0x01	; 1
    1e2a:	7c 01       	movw	r14, r24
    1e2c:	11 50       	subi	r17, 0x01	; 1
    1e2e:	91 f7       	brne	.-28     	; 0x1e14 <vfscanf+0x154>
    1e30:	4b c0       	rjmp	.+150    	; 0x1ec8 <vfscanf+0x208>
    1e32:	2b 35       	cpi	r18, 0x5B	; 91
    1e34:	51 f4       	brne	.+20     	; 0x1e4a <vfscanf+0x18a>
    1e36:	92 01       	movw	r18, r4
    1e38:	a7 01       	movw	r20, r14
    1e3a:	61 2f       	mov	r22, r17
    1e3c:	c6 01       	movw	r24, r12
    1e3e:	7b de       	rcall	.-778    	; 0x1b36 <conv_brk>
    1e40:	2c 01       	movw	r4, r24
    1e42:	89 2b       	or	r24, r25
    1e44:	09 f0       	breq	.+2      	; 0x1e48 <vfscanf+0x188>
    1e46:	40 c0       	rjmp	.+128    	; 0x1ec8 <vfscanf+0x208>
    1e48:	3a c0       	rjmp	.+116    	; 0x1ebe <vfscanf+0x1fe>
    1e4a:	c6 01       	movw	r24, r12
    1e4c:	29 83       	std	Y+1, r18	; 0x01
    1e4e:	bd dd       	rcall	.-1158   	; 0x19ca <skip_spaces>
    1e50:	29 81       	ldd	r18, Y+1	; 0x01
    1e52:	97 fd       	sbrc	r25, 7
    1e54:	3d c0       	rjmp	.+122    	; 0x1ed0 <vfscanf+0x210>
    1e56:	2f 36       	cpi	r18, 0x6F	; 111
    1e58:	41 f1       	breq	.+80     	; 0x1eaa <vfscanf+0x1ea>
    1e5a:	28 f4       	brcc	.+10     	; 0x1e66 <vfscanf+0x1a6>
    1e5c:	24 36       	cpi	r18, 0x64	; 100
    1e5e:	19 f1       	breq	.+70     	; 0x1ea6 <vfscanf+0x1e6>
    1e60:	29 36       	cpi	r18, 0x69	; 105
    1e62:	31 f1       	breq	.+76     	; 0x1eb0 <vfscanf+0x1f0>
    1e64:	24 c0       	rjmp	.+72     	; 0x1eae <vfscanf+0x1ee>
    1e66:	23 37       	cpi	r18, 0x73	; 115
    1e68:	69 f0       	breq	.+26     	; 0x1e84 <vfscanf+0x1c4>
    1e6a:	25 37       	cpi	r18, 0x75	; 117
    1e6c:	e1 f0       	breq	.+56     	; 0x1ea6 <vfscanf+0x1e6>
    1e6e:	1f c0       	rjmp	.+62     	; 0x1eae <vfscanf+0x1ee>
    1e70:	e1 14       	cp	r14, r1
    1e72:	f1 04       	cpc	r15, r1
    1e74:	29 f0       	breq	.+10     	; 0x1e80 <vfscanf+0x1c0>
    1e76:	f7 01       	movw	r30, r14
    1e78:	80 82       	st	Z, r8
    1e7a:	c7 01       	movw	r24, r14
    1e7c:	01 96       	adiw	r24, 0x01	; 1
    1e7e:	7c 01       	movw	r14, r24
    1e80:	11 50       	subi	r17, 0x01	; 1
    1e82:	59 f0       	breq	.+22     	; 0x1e9a <vfscanf+0x1da>
    1e84:	c6 01       	movw	r24, r12
    1e86:	65 d0       	rcall	.+202    	; 0x1f52 <fgetc>
    1e88:	4c 01       	movw	r8, r24
    1e8a:	97 fd       	sbrc	r25, 7
    1e8c:	06 c0       	rjmp	.+12     	; 0x1e9a <vfscanf+0x1da>
    1e8e:	38 d0       	rcall	.+112    	; 0x1f00 <isspace>
    1e90:	89 2b       	or	r24, r25
    1e92:	71 f3       	breq	.-36     	; 0x1e70 <vfscanf+0x1b0>
    1e94:	b6 01       	movw	r22, r12
    1e96:	c4 01       	movw	r24, r8
    1e98:	d2 d0       	rcall	.+420    	; 0x203e <ungetc>
    1e9a:	e1 14       	cp	r14, r1
    1e9c:	f1 04       	cpc	r15, r1
    1e9e:	a1 f0       	breq	.+40     	; 0x1ec8 <vfscanf+0x208>
    1ea0:	f7 01       	movw	r30, r14
    1ea2:	10 82       	st	Z, r1
    1ea4:	11 c0       	rjmp	.+34     	; 0x1ec8 <vfscanf+0x208>
    1ea6:	00 62       	ori	r16, 0x20	; 32
    1ea8:	03 c0       	rjmp	.+6      	; 0x1eb0 <vfscanf+0x1f0>
    1eaa:	00 61       	ori	r16, 0x10	; 16
    1eac:	01 c0       	rjmp	.+2      	; 0x1eb0 <vfscanf+0x1f0>
    1eae:	00 64       	ori	r16, 0x40	; 64
    1eb0:	20 2f       	mov	r18, r16
    1eb2:	a7 01       	movw	r20, r14
    1eb4:	61 2f       	mov	r22, r17
    1eb6:	c6 01       	movw	r24, r12
    1eb8:	9e dd       	rcall	.-1220   	; 0x19f6 <conv_int>
    1eba:	81 11       	cpse	r24, r1
    1ebc:	05 c0       	rjmp	.+10     	; 0x1ec8 <vfscanf+0x208>
    1ebe:	f6 01       	movw	r30, r12
    1ec0:	83 81       	ldd	r24, Z+3	; 0x03
    1ec2:	80 73       	andi	r24, 0x30	; 48
    1ec4:	29 f4       	brne	.+10     	; 0x1ed0 <vfscanf+0x210>
    1ec6:	06 c0       	rjmp	.+12     	; 0x1ed4 <vfscanf+0x214>
    1ec8:	00 fd       	sbrc	r16, 0
    1eca:	13 cf       	rjmp	.-474    	; 0x1cf2 <vfscanf+0x32>
    1ecc:	73 94       	inc	r7
    1ece:	11 cf       	rjmp	.-478    	; 0x1cf2 <vfscanf+0x32>
    1ed0:	77 20       	and	r7, r7
    1ed2:	19 f0       	breq	.+6      	; 0x1eda <vfscanf+0x21a>
    1ed4:	87 2d       	mov	r24, r7
    1ed6:	90 e0       	ldi	r25, 0x00	; 0
    1ed8:	02 c0       	rjmp	.+4      	; 0x1ede <vfscanf+0x21e>
    1eda:	8f ef       	ldi	r24, 0xFF	; 255
    1edc:	9f ef       	ldi	r25, 0xFF	; 255
    1ede:	0f 90       	pop	r0
    1ee0:	df 91       	pop	r29
    1ee2:	cf 91       	pop	r28
    1ee4:	1f 91       	pop	r17
    1ee6:	0f 91       	pop	r16
    1ee8:	ff 90       	pop	r15
    1eea:	ef 90       	pop	r14
    1eec:	df 90       	pop	r13
    1eee:	cf 90       	pop	r12
    1ef0:	bf 90       	pop	r11
    1ef2:	af 90       	pop	r10
    1ef4:	9f 90       	pop	r9
    1ef6:	8f 90       	pop	r8
    1ef8:	7f 90       	pop	r7
    1efa:	5f 90       	pop	r5
    1efc:	4f 90       	pop	r4
    1efe:	08 95       	ret

00001f00 <isspace>:
    1f00:	91 11       	cpse	r25, r1
    1f02:	14 c1       	rjmp	.+552    	; 0x212c <__ctype_isfalse>
    1f04:	80 32       	cpi	r24, 0x20	; 32
    1f06:	19 f0       	breq	.+6      	; 0x1f0e <isspace+0xe>
    1f08:	89 50       	subi	r24, 0x09	; 9
    1f0a:	85 50       	subi	r24, 0x05	; 5
    1f0c:	d0 f7       	brcc	.-12     	; 0x1f02 <isspace+0x2>
    1f0e:	08 95       	ret

00001f10 <strchr_P>:
    1f10:	fc 01       	movw	r30, r24
    1f12:	05 90       	lpm	r0, Z+
    1f14:	06 16       	cp	r0, r22
    1f16:	21 f0       	breq	.+8      	; 0x1f20 <strchr_P+0x10>
    1f18:	00 20       	and	r0, r0
    1f1a:	d9 f7       	brne	.-10     	; 0x1f12 <strchr_P+0x2>
    1f1c:	c0 01       	movw	r24, r0
    1f1e:	08 95       	ret
    1f20:	31 97       	sbiw	r30, 0x01	; 1
    1f22:	cf 01       	movw	r24, r30
    1f24:	08 95       	ret

00001f26 <strnlen_P>:
    1f26:	fc 01       	movw	r30, r24
    1f28:	05 90       	lpm	r0, Z+
    1f2a:	61 50       	subi	r22, 0x01	; 1
    1f2c:	70 40       	sbci	r23, 0x00	; 0
    1f2e:	01 10       	cpse	r0, r1
    1f30:	d8 f7       	brcc	.-10     	; 0x1f28 <strnlen_P+0x2>
    1f32:	80 95       	com	r24
    1f34:	90 95       	com	r25
    1f36:	8e 0f       	add	r24, r30
    1f38:	9f 1f       	adc	r25, r31
    1f3a:	08 95       	ret

00001f3c <strnlen>:
    1f3c:	fc 01       	movw	r30, r24
    1f3e:	61 50       	subi	r22, 0x01	; 1
    1f40:	70 40       	sbci	r23, 0x00	; 0
    1f42:	01 90       	ld	r0, Z+
    1f44:	01 10       	cpse	r0, r1
    1f46:	d8 f7       	brcc	.-10     	; 0x1f3e <strnlen+0x2>
    1f48:	80 95       	com	r24
    1f4a:	90 95       	com	r25
    1f4c:	8e 0f       	add	r24, r30
    1f4e:	9f 1f       	adc	r25, r31
    1f50:	08 95       	ret

00001f52 <fgetc>:
    1f52:	cf 93       	push	r28
    1f54:	df 93       	push	r29
    1f56:	ec 01       	movw	r28, r24
    1f58:	2b 81       	ldd	r18, Y+3	; 0x03
    1f5a:	20 ff       	sbrs	r18, 0
    1f5c:	33 c0       	rjmp	.+102    	; 0x1fc4 <fgetc+0x72>
    1f5e:	26 ff       	sbrs	r18, 6
    1f60:	0a c0       	rjmp	.+20     	; 0x1f76 <fgetc+0x24>
    1f62:	2f 7b       	andi	r18, 0xBF	; 191
    1f64:	2b 83       	std	Y+3, r18	; 0x03
    1f66:	8e 81       	ldd	r24, Y+6	; 0x06
    1f68:	9f 81       	ldd	r25, Y+7	; 0x07
    1f6a:	01 96       	adiw	r24, 0x01	; 1
    1f6c:	9f 83       	std	Y+7, r25	; 0x07
    1f6e:	8e 83       	std	Y+6, r24	; 0x06
    1f70:	8a 81       	ldd	r24, Y+2	; 0x02
    1f72:	90 e0       	ldi	r25, 0x00	; 0
    1f74:	29 c0       	rjmp	.+82     	; 0x1fc8 <fgetc+0x76>
    1f76:	22 ff       	sbrs	r18, 2
    1f78:	0f c0       	rjmp	.+30     	; 0x1f98 <fgetc+0x46>
    1f7a:	e8 81       	ld	r30, Y
    1f7c:	f9 81       	ldd	r31, Y+1	; 0x01
    1f7e:	80 81       	ld	r24, Z
    1f80:	08 2e       	mov	r0, r24
    1f82:	00 0c       	add	r0, r0
    1f84:	99 0b       	sbc	r25, r25
    1f86:	00 97       	sbiw	r24, 0x00	; 0
    1f88:	19 f4       	brne	.+6      	; 0x1f90 <fgetc+0x3e>
    1f8a:	20 62       	ori	r18, 0x20	; 32
    1f8c:	2b 83       	std	Y+3, r18	; 0x03
    1f8e:	1a c0       	rjmp	.+52     	; 0x1fc4 <fgetc+0x72>
    1f90:	31 96       	adiw	r30, 0x01	; 1
    1f92:	f9 83       	std	Y+1, r31	; 0x01
    1f94:	e8 83       	st	Y, r30
    1f96:	0e c0       	rjmp	.+28     	; 0x1fb4 <fgetc+0x62>
    1f98:	ea 85       	ldd	r30, Y+10	; 0x0a
    1f9a:	fb 85       	ldd	r31, Y+11	; 0x0b
    1f9c:	19 95       	eicall
    1f9e:	97 ff       	sbrs	r25, 7
    1fa0:	09 c0       	rjmp	.+18     	; 0x1fb4 <fgetc+0x62>
    1fa2:	2b 81       	ldd	r18, Y+3	; 0x03
    1fa4:	01 96       	adiw	r24, 0x01	; 1
    1fa6:	11 f0       	breq	.+4      	; 0x1fac <fgetc+0x5a>
    1fa8:	80 e2       	ldi	r24, 0x20	; 32
    1faa:	01 c0       	rjmp	.+2      	; 0x1fae <fgetc+0x5c>
    1fac:	80 e1       	ldi	r24, 0x10	; 16
    1fae:	82 2b       	or	r24, r18
    1fb0:	8b 83       	std	Y+3, r24	; 0x03
    1fb2:	08 c0       	rjmp	.+16     	; 0x1fc4 <fgetc+0x72>
    1fb4:	2e 81       	ldd	r18, Y+6	; 0x06
    1fb6:	3f 81       	ldd	r19, Y+7	; 0x07
    1fb8:	2f 5f       	subi	r18, 0xFF	; 255
    1fba:	3f 4f       	sbci	r19, 0xFF	; 255
    1fbc:	3f 83       	std	Y+7, r19	; 0x07
    1fbe:	2e 83       	std	Y+6, r18	; 0x06
    1fc0:	99 27       	eor	r25, r25
    1fc2:	02 c0       	rjmp	.+4      	; 0x1fc8 <fgetc+0x76>
    1fc4:	8f ef       	ldi	r24, 0xFF	; 255
    1fc6:	9f ef       	ldi	r25, 0xFF	; 255
    1fc8:	df 91       	pop	r29
    1fca:	cf 91       	pop	r28
    1fcc:	08 95       	ret

00001fce <fputc>:
    1fce:	0f 93       	push	r16
    1fd0:	1f 93       	push	r17
    1fd2:	cf 93       	push	r28
    1fd4:	df 93       	push	r29
    1fd6:	fb 01       	movw	r30, r22
    1fd8:	23 81       	ldd	r18, Z+3	; 0x03
    1fda:	21 fd       	sbrc	r18, 1
    1fdc:	03 c0       	rjmp	.+6      	; 0x1fe4 <fputc+0x16>
    1fde:	8f ef       	ldi	r24, 0xFF	; 255
    1fe0:	9f ef       	ldi	r25, 0xFF	; 255
    1fe2:	28 c0       	rjmp	.+80     	; 0x2034 <fputc+0x66>
    1fe4:	22 ff       	sbrs	r18, 2
    1fe6:	16 c0       	rjmp	.+44     	; 0x2014 <fputc+0x46>
    1fe8:	46 81       	ldd	r20, Z+6	; 0x06
    1fea:	57 81       	ldd	r21, Z+7	; 0x07
    1fec:	24 81       	ldd	r18, Z+4	; 0x04
    1fee:	35 81       	ldd	r19, Z+5	; 0x05
    1ff0:	42 17       	cp	r20, r18
    1ff2:	53 07       	cpc	r21, r19
    1ff4:	44 f4       	brge	.+16     	; 0x2006 <fputc+0x38>
    1ff6:	a0 81       	ld	r26, Z
    1ff8:	b1 81       	ldd	r27, Z+1	; 0x01
    1ffa:	9d 01       	movw	r18, r26
    1ffc:	2f 5f       	subi	r18, 0xFF	; 255
    1ffe:	3f 4f       	sbci	r19, 0xFF	; 255
    2000:	31 83       	std	Z+1, r19	; 0x01
    2002:	20 83       	st	Z, r18
    2004:	8c 93       	st	X, r24
    2006:	26 81       	ldd	r18, Z+6	; 0x06
    2008:	37 81       	ldd	r19, Z+7	; 0x07
    200a:	2f 5f       	subi	r18, 0xFF	; 255
    200c:	3f 4f       	sbci	r19, 0xFF	; 255
    200e:	37 83       	std	Z+7, r19	; 0x07
    2010:	26 83       	std	Z+6, r18	; 0x06
    2012:	10 c0       	rjmp	.+32     	; 0x2034 <fputc+0x66>
    2014:	eb 01       	movw	r28, r22
    2016:	09 2f       	mov	r16, r25
    2018:	18 2f       	mov	r17, r24
    201a:	00 84       	ldd	r0, Z+8	; 0x08
    201c:	f1 85       	ldd	r31, Z+9	; 0x09
    201e:	e0 2d       	mov	r30, r0
    2020:	19 95       	eicall
    2022:	89 2b       	or	r24, r25
    2024:	e1 f6       	brne	.-72     	; 0x1fde <fputc+0x10>
    2026:	8e 81       	ldd	r24, Y+6	; 0x06
    2028:	9f 81       	ldd	r25, Y+7	; 0x07
    202a:	01 96       	adiw	r24, 0x01	; 1
    202c:	9f 83       	std	Y+7, r25	; 0x07
    202e:	8e 83       	std	Y+6, r24	; 0x06
    2030:	81 2f       	mov	r24, r17
    2032:	90 2f       	mov	r25, r16
    2034:	df 91       	pop	r29
    2036:	cf 91       	pop	r28
    2038:	1f 91       	pop	r17
    203a:	0f 91       	pop	r16
    203c:	08 95       	ret

0000203e <ungetc>:
    203e:	fb 01       	movw	r30, r22
    2040:	23 81       	ldd	r18, Z+3	; 0x03
    2042:	20 ff       	sbrs	r18, 0
    2044:	12 c0       	rjmp	.+36     	; 0x206a <ungetc+0x2c>
    2046:	26 fd       	sbrc	r18, 6
    2048:	10 c0       	rjmp	.+32     	; 0x206a <ungetc+0x2c>
    204a:	8f 3f       	cpi	r24, 0xFF	; 255
    204c:	3f ef       	ldi	r19, 0xFF	; 255
    204e:	93 07       	cpc	r25, r19
    2050:	61 f0       	breq	.+24     	; 0x206a <ungetc+0x2c>
    2052:	82 83       	std	Z+2, r24	; 0x02
    2054:	2f 7d       	andi	r18, 0xDF	; 223
    2056:	20 64       	ori	r18, 0x40	; 64
    2058:	23 83       	std	Z+3, r18	; 0x03
    205a:	26 81       	ldd	r18, Z+6	; 0x06
    205c:	37 81       	ldd	r19, Z+7	; 0x07
    205e:	21 50       	subi	r18, 0x01	; 1
    2060:	31 09       	sbc	r19, r1
    2062:	37 83       	std	Z+7, r19	; 0x07
    2064:	26 83       	std	Z+6, r18	; 0x06
    2066:	99 27       	eor	r25, r25
    2068:	08 95       	ret
    206a:	8f ef       	ldi	r24, 0xFF	; 255
    206c:	9f ef       	ldi	r25, 0xFF	; 255
    206e:	08 95       	ret

00002070 <__ultoa_invert>:
    2070:	fa 01       	movw	r30, r20
    2072:	aa 27       	eor	r26, r26
    2074:	28 30       	cpi	r18, 0x08	; 8
    2076:	51 f1       	breq	.+84     	; 0x20cc <__ultoa_invert+0x5c>
    2078:	20 31       	cpi	r18, 0x10	; 16
    207a:	81 f1       	breq	.+96     	; 0x20dc <__ultoa_invert+0x6c>
    207c:	e8 94       	clt
    207e:	6f 93       	push	r22
    2080:	6e 7f       	andi	r22, 0xFE	; 254
    2082:	6e 5f       	subi	r22, 0xFE	; 254
    2084:	7f 4f       	sbci	r23, 0xFF	; 255
    2086:	8f 4f       	sbci	r24, 0xFF	; 255
    2088:	9f 4f       	sbci	r25, 0xFF	; 255
    208a:	af 4f       	sbci	r26, 0xFF	; 255
    208c:	b1 e0       	ldi	r27, 0x01	; 1
    208e:	3e d0       	rcall	.+124    	; 0x210c <__ultoa_invert+0x9c>
    2090:	b4 e0       	ldi	r27, 0x04	; 4
    2092:	3c d0       	rcall	.+120    	; 0x210c <__ultoa_invert+0x9c>
    2094:	67 0f       	add	r22, r23
    2096:	78 1f       	adc	r23, r24
    2098:	89 1f       	adc	r24, r25
    209a:	9a 1f       	adc	r25, r26
    209c:	a1 1d       	adc	r26, r1
    209e:	68 0f       	add	r22, r24
    20a0:	79 1f       	adc	r23, r25
    20a2:	8a 1f       	adc	r24, r26
    20a4:	91 1d       	adc	r25, r1
    20a6:	a1 1d       	adc	r26, r1
    20a8:	6a 0f       	add	r22, r26
    20aa:	71 1d       	adc	r23, r1
    20ac:	81 1d       	adc	r24, r1
    20ae:	91 1d       	adc	r25, r1
    20b0:	a1 1d       	adc	r26, r1
    20b2:	20 d0       	rcall	.+64     	; 0x20f4 <__ultoa_invert+0x84>
    20b4:	09 f4       	brne	.+2      	; 0x20b8 <__ultoa_invert+0x48>
    20b6:	68 94       	set
    20b8:	3f 91       	pop	r19
    20ba:	2a e0       	ldi	r18, 0x0A	; 10
    20bc:	26 9f       	mul	r18, r22
    20be:	11 24       	eor	r1, r1
    20c0:	30 19       	sub	r19, r0
    20c2:	30 5d       	subi	r19, 0xD0	; 208
    20c4:	31 93       	st	Z+, r19
    20c6:	de f6       	brtc	.-74     	; 0x207e <__ultoa_invert+0xe>
    20c8:	cf 01       	movw	r24, r30
    20ca:	08 95       	ret
    20cc:	46 2f       	mov	r20, r22
    20ce:	47 70       	andi	r20, 0x07	; 7
    20d0:	40 5d       	subi	r20, 0xD0	; 208
    20d2:	41 93       	st	Z+, r20
    20d4:	b3 e0       	ldi	r27, 0x03	; 3
    20d6:	0f d0       	rcall	.+30     	; 0x20f6 <__ultoa_invert+0x86>
    20d8:	c9 f7       	brne	.-14     	; 0x20cc <__ultoa_invert+0x5c>
    20da:	f6 cf       	rjmp	.-20     	; 0x20c8 <__ultoa_invert+0x58>
    20dc:	46 2f       	mov	r20, r22
    20de:	4f 70       	andi	r20, 0x0F	; 15
    20e0:	40 5d       	subi	r20, 0xD0	; 208
    20e2:	4a 33       	cpi	r20, 0x3A	; 58
    20e4:	18 f0       	brcs	.+6      	; 0x20ec <__ultoa_invert+0x7c>
    20e6:	49 5d       	subi	r20, 0xD9	; 217
    20e8:	31 fd       	sbrc	r19, 1
    20ea:	40 52       	subi	r20, 0x20	; 32
    20ec:	41 93       	st	Z+, r20
    20ee:	02 d0       	rcall	.+4      	; 0x20f4 <__ultoa_invert+0x84>
    20f0:	a9 f7       	brne	.-22     	; 0x20dc <__ultoa_invert+0x6c>
    20f2:	ea cf       	rjmp	.-44     	; 0x20c8 <__ultoa_invert+0x58>
    20f4:	b4 e0       	ldi	r27, 0x04	; 4
    20f6:	a6 95       	lsr	r26
    20f8:	97 95       	ror	r25
    20fa:	87 95       	ror	r24
    20fc:	77 95       	ror	r23
    20fe:	67 95       	ror	r22
    2100:	ba 95       	dec	r27
    2102:	c9 f7       	brne	.-14     	; 0x20f6 <__ultoa_invert+0x86>
    2104:	00 97       	sbiw	r24, 0x00	; 0
    2106:	61 05       	cpc	r22, r1
    2108:	71 05       	cpc	r23, r1
    210a:	08 95       	ret
    210c:	9b 01       	movw	r18, r22
    210e:	ac 01       	movw	r20, r24
    2110:	0a 2e       	mov	r0, r26
    2112:	06 94       	lsr	r0
    2114:	57 95       	ror	r21
    2116:	47 95       	ror	r20
    2118:	37 95       	ror	r19
    211a:	27 95       	ror	r18
    211c:	ba 95       	dec	r27
    211e:	c9 f7       	brne	.-14     	; 0x2112 <__ultoa_invert+0xa2>
    2120:	62 0f       	add	r22, r18
    2122:	73 1f       	adc	r23, r19
    2124:	84 1f       	adc	r24, r20
    2126:	95 1f       	adc	r25, r21
    2128:	a0 1d       	adc	r26, r0
    212a:	08 95       	ret

0000212c <__ctype_isfalse>:
    212c:	99 27       	eor	r25, r25
    212e:	88 27       	eor	r24, r24

00002130 <__ctype_istrue>:
    2130:	08 95       	ret

00002132 <_exit>:
    2132:	f8 94       	cli

00002134 <__stop_program>:
    2134:	ff cf       	rjmp	.-2      	; 0x2134 <__stop_program>
